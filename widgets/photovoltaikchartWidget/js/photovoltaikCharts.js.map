{"version":3,"sources":["days.js","data.js"],"names":["months","en","de","ru","es","fr","it","pl","pt","nl","days","readOneChart","seriesData","id","instance","currentId","multiplicator","index","callback","mode","startdate","eventDate","option","currentYear","Date","getFullYear","start","end","getTime","aggregate","count","timeout","console","log","vis","getHistory","err","res","Object","keys","length","error","JSON","stringify","i","ts","data","getMonth","val","states","_readData","oidList","j","historyOID","currentOID","setTimeout","loadSelectorData","duration","startDate","setMonth","conn","sendTo","result","dbid","rowcount","sql","normalizeDate","push","readOneLineRange","chart","virtualStart","virtualEnd","lastEventDate","series","setData","readAndAddOneLineRange","newMax","addPoint","loadSeriesRange","loadAndAddSeriesRange","date","setMilliseconds","setSeconds","setMinutes","setUTCMilliseconds","setUTCSeconds","setUTCMinutes","setUTCHours","day","getDay","diff","getDate","setDate","setUTCDate","setUTCMonth","minDate","H","Chart","prototype","pan","e","panning","panningOptions","doRedraw","type","this","hoverPoints","chartOptions","options","enabled","fireEvent","originalEvent","forEach","point","setState","xy","isX","spill","axis","axisOpt","horiz","mousePos","mouseDown","startPos","halfPointRange","pointRange","pointRangeDirection","reversed","inverted","extremes","getExtremes","panMin","toValue","panMax","len","flipped","newMin","paddedMin","paddedMax","ordinal","min","max","panningState","startMin","startMax","setExtremes","trigger","redraw","css","container","cursor","zoom","event","hasZoomed","pointer","mouseDownPos","mouseDownX","mouseDownY","displayButton","resetSelection","axes","initiated","xAxis","concat","yAxis","axisData","axisStartPos","left","top","axisEndPos","width","height","isXAxis","isWithinPane","defined","displayBtn","resetZoomButton","showResetZoom","isObject","destroy","pick","animation","pointCount","Axis","dataMin","dataMax","Math","evt","allowZoomOutside","zoomed","Pointer","pinch","self","pinchDown","touches","touchesLength","lastValidTouch","hasZoom","transform","fireClickEvent","inClass","target","runTrackerClick","runChartClick","clip","selectionMarker","followTouchMove","cancelable","preventDefault","map","call","normalize","chartX","chartY","x","y","zoomEnabled","bounds","minPixelPadding","toPixels","absMin","absMax","pos","runPointActions","extend","noop","touch","plotBox","pinchTranslate","hasPinched","scaleGroups","reset","Highcharts","types","handler","orgEvent","window","args","slice","arguments","delta","deltaX","deltaY","$","fix","wheelDelta","detail","undefined","HORIZONTAL_AXIS","wheelDeltaY","wheelDeltaX","unshift","handle","apply","special","mousewheel","setup","addEventListener","onmousewheel","teardown","removeEventListener","fn","bind","unmousewheel","unbind","binds","photovoltaikcharts","version","updateIntervalHandler","delayedRefreshHandler","showVersion","highchartsOptions","lang","weekdays","shortWeekdays","shortMonths","contextButtonTitle","decimalPoint","downloadCSV","downloadJPEG","downloadPDF","downloadPNG","downloadSVG","downloadXLS","exitFullscreen","hideData","loading","noData","numericSymbols","printChart","resetZoom","resetZoomTitle","viewData","viewFullscreen","exportData","annotationHeader","categoryDatetimeHeader","categoryHeader","highchartsSeriesUnits","highchartsDateTimeLabelFormats","millisecond","second","minute","hour","week","month","year","scrollspeed","createMonthlyWidget","widgetID","view","style","targetArray","fbobj","$div","systemLang","sysLang","split","series1historyoid","instance1","series1currentoid","parseFloat","multiplicator1","series2historyoid","instance2","series2currentoid","multiplicator2","targetData","categories","toString","name","series1label","substr","stack","color","year3color2","opacity","series2label","year3color1","year2color2","showInLegend","year2color1","year1color2","year1color1","Array","isArray","lineWidth","targetName","step","marker","onChangeSeries1","newVal","oldVal","update","onChangeSeries2","language","setOptions","unit","zoomType","options3d","alpha","beta","depth","viewDistance","frame","bottom","size","title","text","zAxis","labels","rotation","plotOptions","column","stacking","groupZPadding","groupPadding","grouping","legend","showLegend","exporting","showMenu","tooltip","formatter","stackTotal","userOptions","stacklabel","credits","createYearlyWidget","series3historyoid","instance3","series3currentoid","multiplicator3","series4historyoid","instance4","series4currentoid","multiplicator4","series5historyoid","instance5","series5currentoid","multiplicator5","series1color","series2color","series3label","series3color","series4label","series4color","series5label","series5color","plotLines","onChangeSeries3","onChangeSeries4","onChangeSeries5","dashStyle","label","value","createTimeseriesWidget","divId","loadRunning","refreshRequired","lastEvent","navigationData","lastX","fillOpacity","parseInt","dataGrouping","approximation","units","hover","pointInterval","loadSeriesData","showLoading","hideLoading","clearInterval","setInterval","onChangeSeries1ts","navigator","oldExtremes","oldLastX","newMaxX","onChangeSeries2ts","onChangeSeries3ts","onChangeSeries4ts","onChangeSeries5ts","onChangeSeries6ts","stockChart","renderTo","panKey","time","timezoneOffset","getTimezoneOffset","rangeSelector","buttons","allButtonsEnabled","dropdown","selected","1d","3d","7d","1m","3m","6m","ytd","1y","all","zoomDefault","inputDateFormat","adaptToUpdatedData","margin","scrollbar","events","afterSetExtremes","dateTimeLabelFormats","overscroll","align","chart1Height","resize","yAxis1min","yAxis1max","tickAmount","yAxis1tickamount","minorTicks","chartspacing","chart2Height","offset","yAxis2min","yAxis2max","yAxis2tickamount","verticalAlign","floating","pointFormat","valueDecimals","navigatorRange","zoomRatio","objEvent","intDelta","setZoom","xMin","xMax","series6currentoid","createTimeseries2Widget","navhistoryoid","navinstance","navmultiplicator","updateSeriesData","eventValue","limit","useUTC","xAxisLabel1","yAxis1Categories","parse","startOnTick","xAxisLabel2","yAxis2Categories","xAxisLabel3","yAxis3Categories","chart3Height","yAxis3min","yAxis3max","yAxis3tickamount","createTimeseries3Widget","onChangeZoom","zoomoid","currentExtremes","backgroundColor"],"mappings":"AAAA,IAAAA,OAAA,CACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,QAEAC,KAAA,CACAT,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACAC,GAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,GAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,QClBA,SAAAE,aAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IACAC,EADAC,EAAA,GAEAC,GAAA,IAAAC,MAAAC,cACAH,EAAAI,MAAAN,EACAE,EAAAK,IAAA,IAAAH,KAAAD,EAAA,GAAA,GAAA,GAAA,IAAAK,UACAN,EAAAR,SAAAA,EACAQ,EAAAO,UAAA,OACAP,EAAAQ,MAAA,IACAR,EAAAS,QAAA,KACAC,QAAAC,IAAA,IAAAT,KAAAF,EAAAI,OAAA,MAAA,IAAAF,KAAAF,EAAAK,MACAO,IAAAC,WAAAtB,EAAAS,EAAA,SAAAc,EAAAC,GAKA,GAJAL,QAAAC,IAAA,oBACAG,GAAA,EAAAE,OAAAC,KAAAH,GAAAI,QAAAR,QAAAS,MAAA,iBAAAC,KAAAC,UAAAP,KAGAA,GAAAC,EAAA,CACA,IAAA,IAAAO,EAAA,EAAAA,EAAAP,EAAAG,OAAAI,IACAvB,EAAA,IAAAG,KAAAa,EAAAO,GAAAC,IACA,IAAA1B,EACAP,EAAA,GAAA,EAAAW,EAAAF,EAAAI,eAAAR,GAAA6B,KAAAzB,EAAA0B,aAAAV,EAAAO,GAAAI,KAAA,GAAAhC,EAEAJ,EAAAK,GAAA6B,KAAA,EAAAvB,EAAAF,EAAAI,gBAAAY,EAAAO,GAAAI,KAAA,GAAAhC,EAKAqB,EAAA,KAGAtB,IACA,IAAAI,EACAP,EAAA,EAAAK,GAAA6B,MAAA,IAAAtB,MAAAuB,aAAAb,IAAAe,OAAAlC,EAAA,SAAA,GAAAC,EAEAJ,EAAAK,GAAA6B,KAAA,IAAAZ,IAAAe,OAAAlC,EAAA,SAAA,GAAAC,GAGAE,GAAAA,MAKA,SAAAgC,UAAAtC,EAAAuC,EAAAjC,EAAAkC,EAAAjC,EAAAC,GAEA,IADAgC,EAAAA,GAAA,IACAD,EAAAX,OACA,OAAAtB,GAAAA,IAEAiC,EAAAC,GAAAC,YAAAF,EAAAC,GAAAtC,SACAH,aAAAC,EAAAuC,EAAAC,GAAAC,WAAAF,EAAAC,GAAAtC,SAAAqC,EAAAC,GAAAE,WAAAH,EAAAC,GAAApC,cAAAoC,EAAA,WACAG,WAAA,WACAL,UAAAtC,EAAAuC,EAAAjC,EAAAkC,EAAA,EAAAjC,EAAAC,IACA,KACAD,EAAAC,GAEAmC,WAAA,WACAL,UAAAtC,EAAAuC,EAAAjC,EAAAkC,EAAA,EAAAjC,EAAAC,IACA,IAMA,SAAAoC,iBAAAV,EAAAjC,EAAAC,EAAAC,EAAAC,EAAAG,EAAAsC,EAAAvC,GACA,IAAAwC,EAAA,IAAAlC,KACAkC,EAAAC,UAAA,EAAAF,GACA,IAAA/B,EAAAgC,EAAA9B,UACAf,GAAAC,EACAoB,IAAA0B,KAAAC,OAAA/C,EAAA,QACA,mDAAAD,EAAA,IACA,SAAAiD,GACA,GAAAA,EAAArB,MACAT,QAAAS,MAAAqB,EAAArB,OACAvB,GAAAA,SAIA,GADAc,QAAAC,IAAA,SAAAS,KAAAC,UAAAmB,EAAAA,SACAA,EAAAA,OAAA,IAAAA,EAAAA,OAAA,GAAAjD,GAAA,CACA,IAAAkD,EAAAD,EAAAA,OAAA,GAAAjD,GACAqB,IAAA0B,KAAAC,OAAA/C,EAAA,QACA,iEAAAiD,EAAA,WAAArC,EACA,SAAAoC,GACA,GAAAA,EAAArB,MACAT,QAAAS,MAAAqB,EAAArB,OACAvB,GAAAA,SAIA,GADAc,QAAAC,IAAA,SAAAS,KAAAC,UAAAmB,EAAAA,SACAA,EAAAA,OAAA,IAAAA,EAAAA,OAAA,GAAAE,SAAA,CACA,IAAAA,EAAAF,EAAAA,OAAA,GAAAE,SACA,GAAAA,EAAA,IACA,IAAAC,EAAA,kDAAAF,OACA,GAAAC,EAAA,IACAC,EAAA,kHAAAF,EAAA,WAAArC,EAAA,4BAAAsC,EAAA,mBACA,GAAAA,EAAA,IACAC,EAAA,kHAAAF,EAAA,WAAArC,EAAA,4BAAAsC,EAAA,oBAEAC,EAAA,kHAAAF,EAAA,WAAArC,EAAA,4BAAAsC,EAAA,gBAEA9B,IAAA0B,KAAAC,OAAA/C,EAAA,QAAAmD,EACA,SAAAH,GACA,GAAAA,EAAArB,MACAT,QAAAS,MAAAqB,EAAArB,OACAvB,GAAAA,QACA,CAEA,IAAA,IAAA0B,EAAA,EAAAA,EAAAkB,EAAAA,OAAAtB,OAAAI,IACAvB,UAAA6C,cAAA,IAAA1C,KAAAsC,EAAAA,OAAAlB,GAAAC,IAAA1B,GACAa,QAAAC,IAAAZ,UAAA,IAAAyC,EAAAA,OAAAlB,GAAAI,KACAF,EAAAqB,KAAA,CAAA9C,UAAAO,WAAAkC,EAAAA,OAAAlB,GAAAI,KAAA,GAAAhC,IAGAqB,IAAA,KACAtB,GACA+B,EAAAqB,KAAA,CAAAD,cAAA,IAAA1C,KAAAL,GAAAS,WAAAM,IAAAe,OAAAlC,EAAA,SAAA,GAAAC,IAEAE,GAAAA,YAIAA,GAAAA,WAKAA,GAAAA,MAKAA,GAAAA,IAKA,SAAAkD,iBAAAC,EAAAxD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAE,EAAAO,EAAAC,EAAA2C,EAAAC,EAAArD,GAEA,IACAG,EADAC,EAAA,GAEAkD,EAAA,IAAAhD,KAAA,GAEAsB,IADA,IAAAtB,MAAAC,cACA,IACA6C,EAAA5C,GAAAoB,EAAAqB,KAAA,CAAAG,EAAA,IACAhD,EAAAI,MAAAA,EACAJ,EAAAK,IAAAA,EACAL,EAAAR,SAAAA,EACAQ,EAAAO,UAAA,SAEAP,EAAAS,QAAA,KACAC,QAAAC,IAAAS,KAAAC,UAAArB,IACAU,QAAAC,IAAA,kBAAApB,EAAA,IAAA,IAAAW,KAAAF,EAAAI,OAAA,MAAA,IAAAF,KAAAF,EAAAK,MACAO,IAAAC,WAAAtB,EAAAS,EAAA,SAAAc,EAAAC,GAEA,GADAD,GAAA,EAAAE,OAAAC,KAAAH,GAAAI,QAAAR,QAAAS,MAAA,iBAAAC,KAAAC,UAAAP,KACAA,GAAAC,EAAA,CACAL,QAAAC,IAAA,2BAAAI,EAAAG,QACA,IAAA,IAAAI,EAAA,EAAAA,EAAAP,EAAAG,OAAAI,IACAvB,EAAA6C,cAAA,IAAA1C,KAAAa,EAAAO,GAAAC,IAAA1B,GAEA,MAAAkB,EAAAO,GAAAI,MACAwB,EAAA5C,WAAAP,EAAAO,UAEAkB,EAAAA,EAAAN,OAAA,GAAA,IAAAH,EAAAO,GAAAI,KAAA,GAAAhC,GAEA8B,EAAAqB,KAAA,CAAA9C,EAAAO,WAAAS,EAAAO,GAAAI,KAAA,GAAAhC,IACAwD,EAAAnD,IAKAgB,EAAA,KAGAtB,GACA+B,EAAAqB,KAAA,CAAAD,cAAA,IAAA1C,KAAAL,GAAAS,WAAAM,IAAAe,OAAAlC,EAAA,SAAA,GAAAC,IAEAW,EAAA4C,GAAAzB,EAAAqB,KAAA,CAAAI,EAAA,IACAF,EAAAI,OAAAxD,GAAAyD,QAAA5B,GAAA,GACA5B,GAAAA,MAIA,SAAAyD,uBAAAN,EAAAxD,EAAAC,EAAAE,EAAAC,EAAAE,EAAAO,EAAAC,EAAAiD,EAAA1D,GAEA,IACAG,EADAC,EAAA,GAEAkD,EAAA,IAAAhD,KAAA,GAEAsB,IADA,IAAAtB,MAAAC,cACA,IACAH,EAAAI,MAAAA,EACAJ,EAAAK,IAAAA,EACAL,EAAAR,SAAAA,EACAQ,EAAAO,UAAA,SACAP,EAAAS,QAAA,KACAC,QAAAC,IAAA,kBAAApB,EAAA,IAAA,IAAAW,KAAAF,EAAAI,OAAA,MAAA,IAAAF,KAAAF,EAAAK,MACAO,IAAAC,WAAAtB,EAAAS,EAAA,SAAAc,EAAAC,GAEA,GADAD,GAAA,EAAAE,OAAAC,KAAAH,GAAAI,QAAAR,QAAAS,MAAA,iBAAAC,KAAAC,UAAAP,KACAA,GAAAC,EAAA,CACAL,QAAAC,IAAA,2BAAAI,EAAAG,QACA,IAAA,IAAAI,EAAA,EAAAA,EAAAP,EAAAG,OAAAI,IACAvB,EAAA6C,cAAA,IAAA1C,KAAAa,EAAAO,GAAAC,IAAA1B,GACA,MAAAkB,EAAAO,GAAAI,MACAwB,EAAA5C,WAAAP,EAAAO,UACAkB,EAAAA,EAAAN,OAAA,GAAA,IAAAH,EAAAO,GAAAI,KAAA,GAAAhC,GAEA8B,EAAAqB,KAAA,CAAA9C,EAAAO,WAAAS,EAAAO,GAAAI,KAAA,GAAAhC,IACAwD,EAAAnD,IAKAgB,EAAA,KACA,EAAAS,EAAAN,QAAAoC,EAAA9B,EAAAA,EAAAN,OAAA,GAAA,KAAAoC,EAAA9B,EAAAA,EAAAN,OAAA,GAAA,IACA,IAAAI,EAAA,EAAAA,EAAAE,EAAAN,OAAAI,IAEAyB,EAAAI,OAAAxD,GAAA4D,SAAA/B,EAAAF,IAAA,GAAA,GAAA,GAAA,GAGA1B,GAAAA,EAAA0D,KAKA,SAAAE,gBAAAT,EAAAlB,EAAAC,EAAAjC,EAAAO,EAAAC,EAAA2C,EAAAC,EAAArD,GAEA,IADAkC,EAAAA,GAAA,IACAD,EAAAX,OACA,OAAAtB,GAAAA,IAEAiC,EAAAC,GAAAC,YAAAF,EAAAC,GAAAtC,SACAsD,iBAAAC,EAAAlB,EAAAC,GAAAC,WAAAF,EAAAC,GAAAtC,SAAAqC,EAAAC,GAAAE,WAAAH,EAAAC,GAAApC,cAAAoC,EAAAjC,EAAAO,EAAAC,EAAA2C,EAAAC,EAAA,WACAhB,WAAA,WACAuB,gBAAAT,EAAAlB,EAAAC,EAAA,EAAAjC,EAAAO,EAAAC,EAAA2C,EAAAC,EAAArD,IACA,MAGAqC,WAAA,WACAuB,gBAAAT,EAAAlB,EAAAC,EAAA,EAAAjC,EAAAO,EAAAC,EAAA2C,EAAAC,EAAArD,IACA,IAMA,SAAA6D,sBAAAV,EAAAlB,EAAAC,EAAAjC,EAAAO,EAAAC,EAAAiD,EAAA1D,GAEA,IADAkC,EAAAA,GAAA,IACAD,EAAAX,OACA,OAAAtB,GAAAA,EAAA0D,GAEAzB,EAAAC,GAAAC,YAAAF,EAAAC,GAAAtC,SACA6D,uBAAAN,EAAAlB,EAAAC,GAAAC,WAAAF,EAAAC,GAAAtC,SAAAqC,EAAAC,GAAApC,cAAAoC,EAAAjC,EAAAO,EAAAC,EAAAiD,EAAA,SAAAA,GACArB,WAAA,WACAwB,sBAAAV,EAAAlB,EAAAC,EAAA,EAAAjC,EAAAO,EAAAC,EAAAiD,EAAA1D,IACA,MAGAqC,WAAA,WACAwB,sBAAAV,EAAAlB,EAAAC,EAAA,EAAAjC,EAAAO,EAAAC,EAAAiD,EAAA1D,IACA,IAKA,SAAAgD,cAAAc,EAAA7D,GACA,GAAA,QAAAA,EACA6D,EAAAC,gBAAA,GACAD,EAAAE,WAAA,GACAF,EAAAG,WAAA,QACA,GAAA,OAAAhE,EACA6D,EAAAI,mBAAA,GACAJ,EAAAK,cAAA,GACAL,EAAAM,cAAA,GACAN,EAAAO,YAAA,OACA,CAAA,GAAA,QAAApE,EAAA,CACA,IAAAqE,EAAAR,EAAAS,SACAC,EAAAV,EAAAW,UAAAH,GAAA,GAAAA,GAAA,EAAA,GAMA,OALAR,EAAA,IAAAxD,KAAAwD,EAAAY,QAAAF,KACAN,mBAAA,GACAJ,EAAAK,cAAA,GACAL,EAAAM,cAAA,GACAN,EAAAO,YAAA,GACAP,EACA,SAAA7D,GACA6D,EAAAI,mBAAA,GACAJ,EAAAK,cAAA,GACAL,EAAAM,cAAA,GACAN,EAAAO,YAAA,GACAP,EAAAa,WAAA,IACA,QAAA1E,IACA6D,EAAAI,mBAAA,GACAJ,EAAAK,cAAA,GACAL,EAAAM,cAAA,GACAN,EAAAO,YAAA,GACAP,EAAAa,WAAA,GACAb,EAAAc,YAAA,IAEA,OAAAd,EAQA,IAAAe,QAAA,IAAAvE,KAAA,KAAA,EAAA,GAAAI,WACA,SAAAoE,GACAA,EAAAC,MAAAC,UAAAC,IAAA,SAAAC,EAAAC,GACA,IAEAC,EACAC,EAAAC,EAHAnC,EAAAoC,KACAC,EAAArC,EAAAqC,YACAC,EAAAtC,EAAAuC,QAAAvC,MAGAiC,EADA,iBAAAD,EACAA,EAEA,CACAQ,QAAAR,EACAG,KAAA,KAGAG,GAAAA,EAAAN,UACAM,EAAAN,QAAAC,GAEAE,EAAAF,EAAAE,KACAR,EAAAc,UAAAL,KAAA,MAAA,CACAM,cAAAX,GACA,WAEAM,GACAA,EAAAM,QAAA,SAAAC,GACAA,EAAAC,aAIA,IAAAC,EAAA,CAAA,GACA,OAAAX,EACAW,EAAA,CAAA,EAAA,GACA,MAAAX,IACAW,EAAA,CAAA,IAEAA,EAAAH,QAAA,SAAAI,GACA,IA2BAC,EA3BAC,EAAAjD,EAAA+C,EAAA,QAAA,SAAA,GACAG,EAAAD,EAAAV,QACAY,EAAAF,EAAAE,MACAC,EAAArB,EAAAoB,EAAA,SAAA,UACAE,EAAAF,EAAA,aAAA,aACAG,EAAAtD,EAAAqD,GACAE,GAAAN,EAAAO,YAAA,GAAA,EACAC,EAAAR,EAAAS,WAAA1D,EAAA2D,WACAV,EAAAS,UAAA1D,EAAA2D,UACA,EACA,EACAC,EAAAX,EAAAY,cACAC,EAAAb,EAAAc,QAAAT,EAAAF,GAAA,GACAG,EAAAE,EACAO,EAAAf,EAAAc,QAAAT,EAAAL,EAAAgB,IAAAb,GAAA,GACAG,EAAAE,EACAS,EAAAF,EAAAF,EACAK,EAAAD,EAAAF,EAAAF,EACAvD,EAAA2D,EAAAJ,EAAAE,EAIAI,EAAA1C,QACA2C,GAAA,IAAAlH,MAAAI,UASA2F,EAAAoB,UAGAvB,IAEA,GADAC,EAAAoB,EAAAD,KAEA5D,GAAAyC,EACAmB,EAAAC,GAGA,GADApB,EAAAzC,EAAA8D,KAEA9D,EAAA8D,EACAF,GAAAnB,KAIAC,EAAA7C,OAAAjC,QACAgG,IAAAP,EAAAW,KACAhE,IAAAqD,EAAAY,KACAzB,GAAAE,EAAAwB,cACAN,GAAAlB,EAAAwB,aACAC,UACAnE,GAAA0C,EAAAwB,aACAE,YAEA1B,EAAA2B,YAAAT,EAAA5D,GAAA,GAAA,EAAA,CACAsE,QAAA,QAEA3C,GAAA,GAGAlC,EAAAqD,GAAAD,KAGAlB,GACAlC,EAAA8E,QAAA,GAEAnD,EAAAoD,IAAA/E,EAAAgF,UAAA,CACAC,OAAA,YAaAtD,EAAAC,MAAAC,UAAAqD,KAAA,SAAAC,GACAxH,QAAAC,IAAA,uBACA,IAKAwH,EALApF,EAAAoC,KACAiD,EAAArF,EAAAqF,QACAC,EAAAtF,EAAA2D,SACA0B,EAAAE,WAAAF,EAAAG,WACAC,GAAA,GAGAN,GAAAA,EAAAO,gBACA1F,EAAA2F,KAAAhD,QAAA,SAAAM,GACAmC,EAAAnC,EAAAiC,SAEAG,EAAAO,WAAA,GAGAT,EAAAU,MAAAC,OAAAX,EAAAY,OAAApD,QAAA,SAAAqD,GACA,IAAA/C,EAAA+C,EAAA/C,KACAgD,EAAAjG,EAAA2D,SAAAV,EAAAiD,KAAAjD,EAAAkD,IACAC,EAAApG,EAAA2D,SACAsC,EAAAhD,EAAAoD,MAAAJ,EAAAhD,EAAAqD,OACAC,EAAAtD,EAAAsD,QACAC,GAAA,IAGAD,GACAN,GAAAX,GACAA,GAAAc,GACAG,IACA5E,EAAA8E,QAAAnB,MACAkB,GAAA,GAGAnB,EAAAkB,EAAA,QAAA,UAAAC,IACApB,EAAAnC,EAAAiC,KAAAc,EAAAzB,IAAAyB,EAAAxB,KACAvB,EAAAyD,aACAjB,GAAA,MAMA,IAAAkB,EAAA3G,EAAA2G,gBACAlB,IAAAkB,EACA3G,EAAA4G,iBAEAnB,GAAA9D,EAAAkF,SAAAF,KACA3G,EAAA2G,gBAAAA,EAAAG,WAGA1B,GACApF,EAAA8E,OAAAnD,EAAAoF,KAAA/G,EAAAuC,QAAAvC,MAAAgH,UAAA7B,GAAAA,EAAA6B,UAAAhH,EAAAiH,WAAA,OAKAtF,EAAAuF,KAAArF,UAAAqD,KAAA,SAAAf,EAAA5D,GACA5C,QAAAC,IAAA,yBAAA,IAAAT,KAAAgH,GAAA,QAAA,IAAAhH,KAAAoD,IAEA,IAAA0C,EAAAb,KACA+E,EAAA/E,KAAA+E,QACAC,EAAAhF,KAAAgF,QACA7E,EAAAH,KAAAG,QACAgC,EAAA8C,KAAA9C,IAAA4C,EACAxF,EAAAoF,KAAAxE,EAAAgC,IACA4C,IACA3C,EAAA6C,KAAA7C,IAAA4C,EACAzF,EAAAoF,KAAAxE,EAAAiC,IACA4C,IACAE,EAAA,CACAnD,OAAAA,EACA5D,OAAAA,GAuCA,OArCAoB,EAAAc,UAAAL,KAAA,OAAAkF,EAAA,SAAAvF,GAEA,IAAAoC,EAAApC,EAAAoC,OACA5D,EAAAwB,EAAAxB,OACA4D,IAAAlB,EAAAsB,KAAAhE,IAAA0C,EAAAuB,MAGAvB,EAAAsE,mBAGA5F,EAAA8E,QAAAU,KACAhD,EAAAI,IACAJ,EAAAI,GAEAC,EAAAL,IACAA,EAAAK,IAGA7C,EAAA8E,QAAAW,KACA7G,EAAAgE,IACAhE,EAAAgE,GAEAC,EAAAjE,IACAA,EAAAiE,KAQAvB,EAAAyD,YAAA,EAEAzD,EAAA2B,YAAAT,EAAA5D,GAAA,OAAA,EAAA,CAAAsE,QAAA,UAEA9C,EAAAyF,QAAA,IAEAF,EAAAE,QAQA7F,EAAA8F,QAAA5F,UAAA6F,MAAA,SAAA3F,GACApE,QAAAC,IAAA,0BAEA,IAAA+J,EAAAvF,KACApC,EAAA2H,EAAA3H,MACA4H,EAAAD,EAAAC,UACAC,EAAA9F,EAAA8F,SAAA,GACAC,EAAAD,EAAA1J,OACA4J,EAAAJ,EAAAI,eACAC,EAAAL,EAAAK,QACAC,EAAA,GACAC,EAAA,IAAAJ,IAAAH,EAAAQ,QAAApG,EAAAqG,OAAA,uBACApI,EAAAqI,iBACAV,EAAAW,eACAC,EAAA,GACAC,EAAAb,EAAAa,gBAIA,EAAAV,EACAH,EAAA/B,WAAA,EAEA,IAAAkC,GAAA1F,KAAAqG,kBAGAd,EAAA/B,WAAA,GAIAoC,GACAL,EAAA/B,YACAsC,IACA,IAAAnG,EAAA2G,YACA3G,EAAA4G,iBAGA,GAAAC,IAAAC,KAAAhB,EAAA,SAAA9F,GACA,OAAA4F,EAAAmB,UAAA/G,KAGA,eAAAA,EAAAI,MACA,GAAAQ,QAAAkG,KAAAhB,EAAA,SAAA9F,EAAAxD,GACAqJ,EAAArJ,GAAA,CAAAwK,OAAAhH,EAAAgH,OAAAC,OAAAjH,EAAAiH,UAEAjB,EAAAkB,EAAA,CAAArB,EAAA,GAAAmB,OAAAnB,EAAA,IACAA,EAAA,GAAAmB,QACAhB,EAAAmB,EAAA,CAAAtB,EAAA,GAAAoB,OAAApB,EAAA,IACAA,EAAA,GAAAoB,QAEAhJ,EAAA2F,KAAAhD,QAAA,SAAAM,GACA,GAAAA,EAAAkG,YAAA,CACA,IAAAC,EAAApJ,EAAAoJ,OAAAnG,EAAAE,MAAA,IAAA,KACAkG,EAAApG,EAAAoG,gBACA9E,EAAAtB,EAAAqG,SAAAjC,KAAA9C,IAAA5C,EAAAoF,KAAA9D,EAAAV,QAAAgC,IACAtB,EAAAkE,SACAlE,EAAAkE,QAAAzF,UACA8C,EAAAvB,EAAAqG,SAAAjC,KAAA7C,IAAA7C,EAAAoF,KAAA9D,EAAAV,QAAAiC,IACAvB,EAAAmE,SACAnE,EAAAmE,SAAA,IAAAjK,MAAAI,YACAgM,EAAAlC,KAAA9C,IAAAA,EACAC,GACAgF,EAAAnC,KAAA7C,IAAAD,EACAC,GAEA4E,EAAA7E,IAAA8C,KAAA9C,IAAAtB,EAAAwG,IAAAF,EAAAF,GACAD,EAAA5E,IAAA6C,KAAA7C,IAAAvB,EAAAwG,IAAAxG,EAAAgB,IAAAuF,EAAAH,MAGA1B,EAAA3J,KAAA,GAGA2J,EAAAc,iBAAA,IAAAX,EACA1F,KAAAsH,gBAAA/B,EAAAmB,UAAA/G,IAGA6F,EAAAzJ,SAEAwD,EAAAc,UAAAzC,EAAA,WAAA,CAAA0C,cAAAX,GAAA,WAEAyG,IAGAb,EAAAa,gBAAAA,EAAAmB,OAAA,CACA7C,QAAAnF,EAAAiI,KACAC,OAAA,GACA7J,EAAA8J,UAEAnC,EAAAoC,eAAAnC,EAAAC,EAAAI,EAAAO,EAAAD,EAAAR,GACAJ,EAAAqC,WAAAhC,EAGAL,EAAAsC,YAAAhC,EAAAM,KAEAZ,EAAA3J,MACA2J,EAAA3J,KAAA,EACAoE,KAAA8H,OAAA,EAAA,MA3UA,CAgVAC,YAGA,IAAAC,MAAA,CAAA,iBAAA,cAmCA,SAAAC,QAAAlF,GACA,IAAAmF,EAAAnF,GAAAoF,OAAApF,MAAAqF,EAAA,GAAAC,MAAA5B,KAAA6B,UAAA,GAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAwBA,OAvBA1F,EAAA2F,EAAA3F,MAAA4F,IAAAT,IACAnI,KAAA,aAGAgD,EAAA6F,aAAAL,EAAAxF,EAAA6F,WAAA,KACA7F,EAAA8F,SAAAN,GAAAxF,EAAA8F,OAAA,GAGAJ,EAAAF,OAGAO,IAAAZ,EAAArH,MAAAqH,EAAArH,OAAAqH,EAAAa,kBACAN,EAAA,EACAD,GAAA,EAAAD,QAIAO,IAAAZ,EAAAc,cAAAP,EAAAP,EAAAc,YAAA,UACAF,IAAAZ,EAAAe,cAAAT,GAAA,EAAAN,EAAAe,YAAA,KAGAb,EAAAc,QAAAnG,EAAAwF,EAAAC,EAAAC,GAEAC,EAAA3F,MAAAoG,OAAAC,MAAApJ,KAAAoI,GA1DAM,EAAA3F,MAAAsG,QAAAC,WAAA,CACAC,MAAA,WACA,GAAAvJ,KAAAwJ,iBACA,IAAA,IAAArN,EAAA6L,MAAAjM,OAAAI,GACA6D,KAAAwJ,iBAAAxB,QAAA7L,GAAA8L,SAAA,QAGAjI,KAAAyJ,aAAAxB,SAIAyB,SAAA,WACA,GAAA1J,KAAA2J,oBACA,IAAA,IAAAxN,EAAA6L,MAAAjM,OAAAI,GACA6D,KAAA2J,oBAAA3B,QAAA7L,GAAA8L,SAAA,QAGAjI,KAAAyJ,aAAA,OAKAf,EAAAkB,GAAArC,OAAA,CACA+B,WAAA,SAAAM,GACA,OAAAA,EAAA5J,KAAA6J,KAAA,aAAAD,GAAA5J,KAAAyC,QAAA,eAGAqH,aAAA,SAAAF,GACA,OAAA5J,KAAA+J,OAAA,aAAAH,MAoCAnO,IAAAuO,MAAAC,mBAAA,CACAC,QAAA,QACAC,sBAAA,GACAC,sBAAA,GAEAC,YAAA,WACA5O,IAAAuO,MAAAC,mBAAAC,UACA3O,QAAAC,IAAA,mCAAAC,IAAAuO,MAAAC,mBAAAC,SACAzO,IAAAuO,MAAAC,mBAAAC,QAAA,OAIAI,kBAAA,CACAC,KAAA,CACAhR,OAAA,CACA,SAAA,UAAA,OAAA,QACA,MAAA,OAAA,OAAA,SACA,YAAA,UAAA,WAAA,YAEAiR,SAAA,CACA,UAAA,SAAA,WAAA,WACA,aAAA,UAAA,WAEAC,cAAA,CACA,KAAA,KAAA,KAAA,KACA,KAAA,KAAA,MAEAC,YAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MACA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,mBAAA,cACAC,aAAA,IACAC,YAAA,0BACAC,aAAA,0BACAC,YAAA,0BACAC,YAAA,0BACAC,YAAA,0BACAC,YAAA,0BACAC,eAAA,0BACAC,SAAA,2BACAC,QAAA,WACAC,OAAA,cACAC,eAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KACAC,WAAA,mBACAC,UAAA,oBACAC,eAAA,4BACAC,SAAA,wBACAC,eAAA,wBACAC,WAAA,CACAC,iBAAA,cACAC,uBAAA,aACAC,eAAA,eAMAC,sBAAA,CAAA,CACA,SACA,CAAA,IACA,CACA,SACA,CAAA,IACA,CACA,OACA,CAAA,IACA,CACA,MACA,CAAA,IACA,CACA,OACA,CAAA,IACA,CACA,QACA,CAAA,EAAA,EAAA,IACA,CACA,OACA,OAGAC,+BAAA,CACAC,YAAA,cACAC,OAAA,WACAC,OAAA,QACAC,KAAA,QACAvN,IAAA,SACAwN,KAAA,SACAC,MAAA,SACAC,KAAA,MAEAC,YAAA,GAEAC,oBAAA,SAAAC,EAAAC,EAAAxQ,EAAAyQ,GACA,IAAA3S,EAAA,GACAuC,EAAA,GACAqQ,EAAA,KAEAnP,EAAA,KAEAoP,EAAAhN,KACAzE,QAAAC,IAAA,kDAEA,IAAAyR,EAAAvE,EAAA,IAAAkE,GAEA,IAAAK,EAAAlR,OACA,OAAAe,WAAA,WACAkQ,EAAAL,oBAAAC,EAAAC,EAAAxQ,EAAAyQ,IACA,KAEAvR,QAAAC,IAAA,4BAAAoR,GACA,IAAAM,EAAA,KACA,oBAAAC,UACAD,EAAAC,SAAA,MAEA9Q,EAAA2J,SACA+G,EAAA1Q,EAAA2J,OAAAoH,MAAA,MAGA1Q,EAAA,CACA,CAAAtC,GAAA,EAAAwC,WAAAP,EAAAgR,kBAAAhT,SAAAgC,EAAAiR,UAAAzQ,WAAAR,EAAAkR,kBAAAhT,cAAAiT,WAAAnR,EAAAoR,iBAAA,GACA,CAAArT,GAAA,EAAAwC,WAAAP,EAAAqR,kBAAArT,SAAAgC,EAAAsR,UAAA9Q,WAAAR,EAAAuR,kBAAArT,cAAAiT,WAAAnR,EAAAwR,iBAAA,IAGA,IACApB,GADA,IAAA1R,MACAC,cACA8S,EAAA,CAAA,CAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,KAAA,EAAA,GAAA,CAAA,KAAA,EAAA,IACAC,EAAA,CAAAtB,EAAAuB,YAAAvB,EAAA,GAAAuB,YAAAvB,EAAA,GAAAuB,YA+CA,GA7CA7T,EAAA,CAAA,CACA8T,MAAA5R,EAAA6R,cAAA,KAAA,KAAAzB,EAAA,GAAAuB,WAAAG,QAAA,GACA9R,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA+R,MAAA,EACAC,MAAAhS,EAAAiS,aAAA,UACAC,QAAA,IAEA,CACAN,MAAA5R,EAAAmS,cAAA,KAAA,KAAA/B,EAAA,GAAAuB,WAAAG,QAAA,GACA9R,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA+R,MAAA,EACAC,MAAAhS,EAAAoS,aAAA,UACAF,QAAA,IAEA,CACAN,MAAA5R,EAAA6R,cAAA,KAAA,KAAAzB,EAAA,GAAAuB,WAAAG,QAAA,GACA9R,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA+R,MAAA,EACAC,MAAAhS,EAAAqS,aAAA,UACAC,cAAA,EACAJ,QAAA,IACA,CACAN,MAAA5R,EAAAmS,cAAA,KAAA,KAAA/B,EAAA,GAAAuB,WAAAG,QAAA,GACA9R,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA+R,MAAA,EACAC,MAAAhS,EAAAuS,aAAA,UACAD,cAAA,EACAJ,QAAA,IAEA,CACAN,MAAA5R,EAAA6R,cAAA,KAAA,IAAAzB,EAAAuB,WAAAG,QAAA,GACA9R,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA+R,MAAA,EACAC,MAAAhS,EAAAwS,aAAA,UACAF,cAAA,EACAJ,QAAA,IAEA,CACAN,MAAA5R,EAAAmS,cAAA,KAAA,IAAA/B,EAAAuB,WAAAG,QAAA,GACA9R,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA+R,MAAA,EACAC,MAAAhS,EAAAyS,aAAA,UACAH,cAAA,EACAJ,QAAA,KAEAQ,MAAAC,QAAAjC,GAAA,CACA,IAAA,IAAAvS,EAAA,EAAAA,EAAAuS,EAAAhR,OAAAvB,IACAsT,EAAAtT,GAAA,GAAAgT,WAAAT,EAAAvS,IAGAL,EAAAuD,KACA,CACAqC,KAAA,UACAkP,UAAA,EACAhB,KAAA5R,EAAA6S,YAAA,SACAC,KAAA,OACA9S,KAAAyR,EACAO,MAAA,UACAe,OAAA,CACAhP,SAAA,KA2FA,SAAAiP,EAAA1P,EAAA2P,EAAAC,GACA3R,GAGAA,EAAAI,OAAA,GAAA3B,MAAA,IAAAtB,MAAAuB,YAAAkT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAGA,SAAAkV,EAAA9P,EAAA2P,EAAAC,GACA3R,GAGAA,EAAAI,OAAA,GAAA3B,MAAA,IAAAtB,MAAAuB,YAAAkT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAjGA,OAAAkB,IAAAiU,UAAA3H,WAAA4H,WAAA3C,EAAA1C,mBACA7N,UAAAtC,EAAAuC,EAAA,WACA,IAAAkT,EAAAvT,EAAAuT,KACAhS,EAAAmK,WAAAnK,MAnGA,oBAmGAgP,EAAA,CACAhP,MAAA,CACAqG,MAAAgJ,EAAAhJ,QAAA,EACAC,OAAA+I,EAAA/I,SAAA,EACA2L,SAAA,IACA9P,KAAA,SACA+P,UAAA,CACA1P,SAAA,EACA2P,MAAA1T,EAAA0T,OAAA,EACAC,KAAA3T,EAAA2T,MAAA,EACAC,MAAA5T,EAAA4T,OAAA,IACAC,aAAA7T,EAAA6T,cAAA,EACAC,MAAA,CACAC,OAAA,CACAC,KAAA,EACAhC,MAAA,uBAKAiC,MAAA,CACAC,KAAAlU,EAAAiU,OAEA7M,MAAA,CACAsK,WAAAxU,OAAA2T,IAEAvJ,MAAA,CACA2M,MAAA,CACAC,KAAAX,IAGAY,MAAA,CACArO,IAAA,EACAC,IAAA,EACAqO,OAAA,CACA3J,EAAA,EACA4J,SAAA,IAEA3C,WAAAA,GAIA4C,YAAA,CACAC,OAAA,CACAC,SAAA,UAEA7S,OAAA,CACA8S,cAAA,GACAb,MAAA,GACAc,aAAA,IACAC,UAAA,IAGAC,OAAA,CACA7Q,QAAA/D,EAAA6U,YAEAC,UAAA,CACA/Q,QAAA/D,EAAA+U,UAGAC,QAAA,CACAC,UAAA,WACA,OAAAtR,KAAAQ,MAAA+Q,WACA,MAAAvR,KAAA6G,EAAA,IAAA7G,KAAAhC,OAAAJ,MAAA4S,MAAA,GAAArQ,QAAA4N,WAAA/N,KAAAhC,OAAAwT,YAAApD,OAAA,YACApO,KAAAhC,OAAAiQ,KAAA,KAAAjO,KAAA8G,EAAA,SACAzK,EAAAoV,YAAA,cAAA,IAAAzR,KAAAQ,MAAA+Q,YACAxC,MAAAC,QAAAjC,GAAA,SAAA1Q,EAAA6S,YAAA,UAAA,KAAAnC,EAAA/M,KAAAQ,MAAAqG,GAAA,IAGA,MAAA7G,KAAA6G,EAAA,YACA7G,KAAAhC,OAAAiQ,KAAA,KAAAjO,KAAA8G,IAIA9I,OAAA7D,EAEAuX,QAAA,CACAtR,SAAA,MAIA,EAAA,EAAA,IAAArF,KAAA0R,EAAA,EAAA,EAAA,GAAAtR,WAkBAkB,EAAAkR,oBACA9R,IAAAe,OAAAqN,KAAAxN,EAAAkR,kBAAA,OAAA8B,GACApC,EAAA5Q,KAAA,QAAA,CAAAA,EAAAkR,kBAAA,SACAN,EAAA5Q,KAAA,cAAAgT,IAEAhT,EAAAuR,oBACAnS,IAAAe,OAAAqN,KAAAxN,EAAAuR,kBAAA,OAAA6B,GACAxC,EAAA5Q,KAAA,QAAA,CAAAA,EAAAuR,kBAAA,SACAX,EAAA5Q,KAAA,cAAAoT,KAIAkC,mBAAA,SAAA/E,EAAAC,EAAAxQ,EAAAyQ,GACA,IAAA3S,EACAuC,EAAA,GAGAkB,EAAA,KAEAoP,EAAAhN,KACAzE,QAAAC,IAAA,iDAEA,IAAAyR,EAAAvE,EAAA,IAAAkE,GAEA,IAAAK,EAAAlR,OACA,OAAAe,WAAA,WACAkQ,EAAA2E,mBAAA/E,EAAAC,EAAAxQ,EAAAyQ,IACA,KAEAvR,QAAAC,IAAA,4BAAAoR,GAEA,oBAAAO,SACAA,QAGAzQ,EAAA,CACA,CAAAtC,GAAA,EAAAwC,WAAAP,EAAAgR,kBAAAhT,SAAAgC,EAAAiR,UAAAzQ,WAAAR,EAAAkR,kBAAAhT,cAAAiT,WAAAnR,EAAAoR,iBAAA,GACA,CAAArT,GAAA,EAAAwC,WAAAP,EAAAqR,kBAAArT,SAAAgC,EAAAsR,UAAA9Q,WAAAR,EAAAuR,kBAAArT,cAAAiT,WAAAnR,EAAAwR,iBAAA,GACA,CAAAzT,GAAA,EAAAwC,WAAAP,EAAAuV,kBAAAvX,SAAAgC,EAAAwV,UAAAhV,WAAAR,EAAAyV,kBAAAvX,cAAAiT,WAAAnR,EAAA0V,iBAAA,GACA,CAAA3X,GAAA,EAAAwC,WAAAP,EAAA2V,kBAAA3X,SAAAgC,EAAA4V,UAAApV,WAAAR,EAAA6V,kBAAA3X,cAAAiT,WAAAnR,EAAA8V,iBAAA,GACA,CAAA/X,GAAA,EAAAwC,WAAAP,EAAA+V,kBAAA/X,SAAAgC,EAAAgW,UAAAxV,WAAAR,EAAAiW,kBAAA/X,cAAAiT,WAAAnR,EAAAkW,iBAAA,IAGA,IACA9F,GADA,IAAA1R,MACAC,cACA+S,EAAA,CAAAtB,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,GAEAtS,EAAA,CAAA,CACA8T,KAAA5R,EAAA6R,aACA7R,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GACAgS,MAAAhS,EAAAmW,cAAA,UACAjE,QAAA,IAEA,CACAN,KAAA5R,EAAAmS,aACAnS,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GACAgS,MAAAhS,EAAAoW,cAAA,UACAlE,QAAA,IAEA,CACAN,KAAA5R,EAAAqW,aACArW,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GACAgS,MAAAhS,EAAAsW,cAAA,UACApE,QAAA,IAEA,CACAN,KAAA5R,EAAAuW,aACAvW,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GACAgS,MAAAhS,EAAAwW,cAAA,UACAtE,QAAA,IAEA,CACAN,KAAA5R,EAAAyW,aACAzW,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GACAgS,MAAAhS,EAAA0W,cAAA,UACAxE,QAAA,KAIA,IAAAyE,EAAA,GA+EA,SAAA3D,EAAA1P,EAAA2P,EAAAC,GACA3R,GAGAA,EAAAI,OAAA,GAAA3B,KAAA,GAAAmT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAGA,SAAAkV,EAAA9P,EAAA2P,EAAAC,GACA3R,GAGAA,EAAAI,OAAA,GAAA3B,KAAA,GAAAmT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAEA,SAAA0Y,EAAAtT,EAAA2P,EAAAC,GACA3R,GAGAA,EAAAI,OAAA,GAAA3B,KAAA,GAAAmT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAEA,SAAA2Y,EAAAvT,EAAA2P,EAAAC,GACA3R,GAGAA,EAAAI,OAAA,GAAA3B,KAAA,GAAAmT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAGA,SAAA4Y,EAAAxT,EAAA2P,EAAAC,GACA3R,GAGAA,EAAAI,OAAA,GAAA3B,KAAA,GAAAmT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eA5GA8B,EAAA2J,QACAgN,EAAAtV,KAAA,CAAA2Q,MAAA,UAAA+E,UAAA,QAAAC,MAAAhX,EAAA6S,YAAA,SAAAoE,MAAA9F,WAAAnR,EAAA2J,QAAA/B,MAAA,IAGAxH,UAAAtC,EAAAuC,EAAA,WACA,OAAAjB,IAAAiU,UAAA3H,WAAA4H,WAAA3C,EAAA1C,mBACA,IAAAsF,EAAAvT,EAAAuT,KACAhS,EAAAmK,WAAAnK,MAvEA,oBAuEAgP,EAAA,CACAhP,MAAA,CACAqG,MAAAgJ,EAAAhJ,QAAA,EACAC,OAAA+I,EAAA/I,SAAA,EACA2L,SAAA,IACA9P,KAAA,SACA+P,UAAA,CACA1P,SAAA,EACA2P,MAAA1T,EAAA0T,OAAA,EACAC,KAAA3T,EAAA2T,MAAA,EACAC,MAAA5T,EAAA4T,OAAA,GACAC,aAAA7T,EAAA6T,cAAA,EACAC,MAAA,CACAC,OAAA,CACAC,KAAA,EACAhC,MAAA,uBAKAiC,MAAA,CACAC,KAAAlU,EAAAiU,OAEA7M,MAAA,CACAsK,WAAAA,GAEApK,MAAA,CACA2M,MAAA,CACAC,KAAAX,GAEAoD,UAAAA,GAKAhV,OAAA,CACA8S,cAAA,GACAb,MAAA,GACAc,aAAA,IACAC,UAAA,GAEAC,OAAA,CACA7Q,QAAA/D,EAAA6U,YAEAC,UAAA,CACA/Q,QAAA/D,EAAA+U,UAGAC,QAAA,CACAC,UAAA,WACA,OAAAtR,KAAAQ,MAAA+Q,WACA,MAAAvR,KAAA6G,EAAA,IAAA7G,KAAAhC,OAAAJ,MAAA4S,MAAA,GAAArQ,QAAA4N,WAAA/N,KAAAhC,OAAAwT,YAAApD,OAAA,YACApO,KAAAhC,OAAAiQ,KAAA,KAAAjO,KAAA8G,EAAA,SACAzK,EAAAoV,YAAA,cAAA,IAAAzR,KAAAQ,MAAA+Q,YACAxC,MAAAC,QA9HA,MA8HA,SAAA3S,EAAA6S,YAAA,UAAA,KA9HA,KA8HAlP,KAAAQ,MAAAqG,GAAA,IAGA,MAAA7G,KAAA6G,EAAA,YACA7G,KAAAhC,OAAAiQ,KAAA,KAAAjO,KAAA8G,IAIA9I,OAAA7D,EAEAuX,QAAA,CACAtR,SAAA,MAIA,EAAA,EAAA,IAAArF,KAAA0R,EAAA,EAAA,EAAA,GAAAtR,WAqCAkB,EAAAkR,oBACA9R,IAAAe,OAAAqN,KAAAxN,EAAAkR,kBAAA,OAAA8B,GACApC,EAAA5Q,KAAA,QAAA,CAAAA,EAAAkR,kBAAA,SACAN,EAAA5Q,KAAA,cAAAgT,IAEAhT,EAAAuR,oBACAnS,IAAAe,OAAAqN,KAAAxN,EAAAuR,kBAAA,OAAA6B,GACAxC,EAAA5Q,KAAA,QAAA,CAAAA,EAAAuR,kBAAA,SACAX,EAAA5Q,KAAA,cAAAoT,IAEApT,EAAAyV,oBACArW,IAAAe,OAAAqN,KAAAxN,EAAAyV,kBAAA,OAAAmB,GACAhG,EAAA5Q,KAAA,QAAA,CAAAA,EAAAyV,kBAAA,SACA7E,EAAA5Q,KAAA,cAAA4W,IAEA5W,EAAA6V,oBACAzW,IAAAe,OAAAqN,KAAAxN,EAAA6V,kBAAA,OAAAgB,GACAjG,EAAA5Q,KAAA,QAAA,CAAAA,EAAA6V,kBAAA,SACAjF,EAAA5Q,KAAA,cAAA6W,IAEA7W,EAAAiW,oBACA7W,IAAAe,OAAAqN,KAAAxN,EAAAiW,kBAAA,OAAAa,GACAlG,EAAA5Q,KAAA,QAAA,CAAAA,EAAAiW,kBAAA,SACArF,EAAA5Q,KAAA,cAAA8W,KAIAI,uBAAA,SAAA3G,EAAAC,EAAAxQ,EAAAyQ,GACA,IAAA3S,EAAA,GACAuC,EAAA,GAEA8W,EAAA,oBACA5V,EAAA,KACAoP,EAAAhN,KACAyT,GAAA,EACAC,GAAA,EACAC,EAAA,KAEAC,EAAA,GAGArY,QAAAC,IAAA,iDAEA,IAAAyR,EAAAvE,EAAA,IAAAkE,GAEA,IAAAK,EAAAlR,OACA,OAAAe,WAAA,WACAkQ,EAAAuG,uBAAA3G,EAAAC,EAAAxQ,EAAAyQ,IACA,KAEAvR,QAAAC,IAAA,4BAAAoR,GAEA,oBAAAO,SACAA,QAGAzQ,EAAA,GACAvC,EAAA,GACA,IACAgC,EADAQ,EAAA,EAEA,IAAAR,EAAA,EAAAA,EAAA,EAAAA,IACAE,EAAA,SAAAF,EAAA,eAAAE,EAAA,WAAAF,KACAO,EAAAgB,KAAA,CAAAtD,GAAAuC,EAAAC,WAAAP,EAAA,SAAAF,EAAA,cAAA9B,SAAAgC,EAAA,WAAAF,GAAA5B,cAAAiT,WAAAnR,EAAA,gBAAAF,KAAA,EAAA0X,MAAA,IAEA1Z,EAAAuD,KAAA,CACAuQ,KAAA5R,EAAA,SAAAF,EAAA,SACAE,KAAA,GACAgS,MAAAhS,EAAA,SAAAF,EAAA,UAAA,UACA8S,UAAA5S,EAAA,SAAAF,EAAA,cAAA,EACA2X,YAAAzX,EAAA,SAAAF,EAAA,WAAAqR,WAAAnR,EAAA,SAAAF,EAAA,YAAA,IAAA,GACA4D,KAAA1D,EAAA,SAAAF,EAAA,SAAA,aACAwH,MAAAtH,EAAA,SAAAF,EAAA,QAAA4X,SAAA1X,EAAA,SAAAF,EAAA,SAAA,EACAgT,KAAA9S,EAAA,SAAAF,EAAA,SAAA,MAAAE,EAAA,SAAAF,EAAA,QAAAE,EAAA,SAAAF,EAAA,aAAA2M,EACA+H,SAAAxU,EAAA,SAAAF,EAAA,aAAA,MAAAE,EAAA,SAAAF,EAAA,YAAAE,EAAA,SAAAF,EAAA,iBAAA2M,EACAkL,aAAA,CACA5T,SAAA,EACA6T,cAAA,OACAC,MAAAlH,EAAAf,uBAEAzP,OAAA,CACA2X,MAAA,CACA/T,SAAA,EACA6O,UAAA5S,EAAA,SAAAF,EAAA,mBAAA,IAGAiY,cAAA,MAIAzX,KAKA,IAAAqW,EAAA,GAMA,SAAAqB,EAAApZ,EAAAC,EAAAT,GAGA,GAFAc,QAAAC,IAAA,mBAAA,IAAAT,KAAAE,GAAA,MAAA,IAAAF,KAAAG,KACA,EACAD,GAAAC,EAAA,CACAuY,GAAA,EACA,IAAA5V,EAAA5C,EACA6C,EAAA5C,EACA0C,EAAA0W,cACAnM,OAAArL,WAAA,WACAuB,gBAAAT,EAAAlB,EAAA,EAAAL,EAAAoB,cAAAxC,EAAAC,EAAA2C,EAAAC,EAAA,WACAF,EAAA8E,SACA9E,EAAA2W,cACAd,GAAA,EACAhZ,GAAAA,OAEA,KApBA4B,EAAA2J,QACAgN,EAAAtV,KAAA,CAAA2Q,MAAA,UAAA+E,UAAA,QAAAC,MAAAhX,EAAA6S,YAAA,SAAAoE,MAAA9F,WAAAnR,EAAA2J,QAAA/B,MAAA,IA4BA+I,EAAA5C,sBAAAwC,IAAAzE,OAAAqM,cAAAxH,EAAA5C,sBAAAwC,IACAI,EAAA5C,sBAAAwC,GAAAzE,OAAAsM,YAAA,WACA,GAAAhB,GAAA,GAAAC,IACAA,GAAA,EACAnY,QAAAC,IAAA,iBAAA,IAAAT,KAAA4Y,EAAAxR,KAAA,MAAA,IAAApH,KAAA4Y,EAAAvR,MACAiS,EAAAV,EAAAxR,IAAAwR,EAAAvR,OAGA,KAgBA,OAAA3G,IAAAiU,UAAA3H,WAAA4H,WAAA3C,EAAA1C,mBACA,IAAAsF,EAAAvT,EAAAuT,KAkPA,SAAA8E,EAAA/U,EAAA2P,EAAAC,GACA,GAAA3R,GAAA0R,GAAAC,EAAA,CAGA,IAAA3U,EAAA6C,cAAA,IAAA1C,KAAAsB,EAAAoB,eAUA,GATAlC,QAAAC,IAAA,2BAAAZ,EAAA,IAAAA,EAAAO,UAAA,OAAAmU,GACA1R,EAAA+W,UAAA3W,OAAA,GAAA3B,MAAA,EAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,QAAA6B,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,IAAAR,QAAAC,IAAA,cAAAoC,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAEAjJ,EAAA+W,UAAA3W,OAAA,GAAA3B,MAAA,EAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,QAAA6B,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAAAjM,EAAAO,UACAyC,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,GAAAyT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAEAqD,EAAA+W,UAAA3W,OAAA,GAAAI,SAAA,CAAAxD,EAAAO,WAAAqS,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,gBAGAqD,EAAAI,OAAA,GAAA3B,MAAAuB,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAAAjM,EAAAO,UACAI,QAAAC,IAAA,mBACAoC,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAAyT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,mBACA,CACAgB,QAAAC,IAAA,6BACA,IAAAoZ,EAAAhX,EAAA6F,MAAA,GAAAhC,cACAlG,QAAAC,IAAA,iBAAAS,KAAAC,UAAA0Y,IACA,IAAAC,EAAAjX,EAAAI,QAAAJ,EAAAI,OAAA,GAAA3B,MAAA,EAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,QAAA6B,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,EAAAjJ,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,EAAA,EAIA,GAHAtL,QAAAC,IAAA,WAAAqZ,GACAjX,EAAAI,OAAA,GAAAI,SAAA,CAAAxD,EAAAO,WAAAqS,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,gBACAgB,QAAAC,IAAA,aAAAS,KAAAC,UAAA0Y,IACAA,EAAAxS,IAAAyS,EAAA,IAAA,CAEA,IAAAC,EAAAlX,EAAA+W,UAAAlR,MAAArB,IACAyS,GAAAC,GAAAlX,EAAA6F,MAAA,GAAAjB,YAAAoS,EAAA7P,QAAA+P,EAAAF,EAAA5P,QAAA8P,MAOA,SAAAC,EAAApV,EAAA2P,EAAAC,GAEA,GADAhU,QAAAC,IAAA,mBACAoC,GAAA0R,GAAAC,EAAA,CAGA,IAAA3U,EAAA6C,cAAA,IAAA1C,KAAAsB,EAAAoB,eACAG,EAAAI,OAAA,GAAA3B,MAAAuB,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAAAjM,EAAAO,UACAyC,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAAyT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAEAqD,EAAAI,OAAA,GAAAI,SAAA,CAAAxD,EAAAO,WAAAqS,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,iBAGA,SAAAya,EAAArV,EAAA2P,EAAAC,GAEA,GADAhU,QAAAC,IAAA,mBACAoC,GAAA0R,GAAAC,EAAA,CAGA,IAAA3U,EAAA6C,cAAA,IAAA1C,KAAAsB,EAAAoB,eACAG,EAAAI,OAAA,GAAA3B,MAAAuB,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAAAjM,EAAAO,UACAyC,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAAyT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAEAqD,EAAAI,OAAA,GAAAI,SAAA,CAAAxD,EAAAO,WAAAqS,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,iBAGA,SAAA0a,EAAAtV,EAAA2P,EAAAC,GAEA,GADAhU,QAAAC,IAAA,mBACAoC,GAAA0R,GAAAC,EAAA,CAGA,IAAA3U,EAAA6C,cAAA,IAAA1C,KAAAsB,EAAAoB,eACAG,EAAAI,OAAA,GAAA3B,MAAAuB,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAAAjM,EAAAO,UACAyC,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAAyT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAEAqD,EAAAI,OAAA,GAAAI,SAAA,CAAAxD,EAAAO,WAAAqS,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,iBAGA,SAAA2a,EAAAvV,EAAA2P,EAAAC,GAEA,GADAhU,QAAAC,IAAA,mBACAoC,GAAA0R,GAAAC,EAAA,CAGA,IAAA3U,EAAA6C,cAAA,IAAA1C,KAAAsB,EAAAoB,eACAG,EAAAI,OAAA,GAAA3B,MAAAuB,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAAAjM,EAAAO,UACAyC,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAAyT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAEAqD,EAAAI,OAAA,GAAAI,SAAA,CAAAxD,EAAAO,WAAAqS,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,iBAGA,SAAA4a,EAAAxV,EAAA2P,EAAAC,GAEA,GADAhU,QAAAC,IAAA,mBACAoC,GAAA0R,GAAAC,EAAA,CAGA,IAAA3U,EAAA6C,cAAA,IAAA1C,KAAAsB,EAAAoB,eACAG,EAAAI,OAAA,GAAA3B,MAAAuB,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAAAjM,EAAAO,UACAyC,EAAAI,OAAA,GAAA3B,KAAAuB,EAAAI,OAAA,GAAA3B,KAAAN,OAAA,GAAAyT,QAAAhC,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,eAEAqD,EAAAI,OAAA,GAAAI,SAAA,CAAAxD,EAAAO,WAAAqS,WAAA8B,IAAA,GAAA5S,EAAA,GAAAnC,iBA7UAqD,EAAAmK,WAAAqN,WAAA5B,EAAA5G,EAAA,CACAhP,MAAA,CACAqG,MAAAgJ,EAAAhJ,QAAA,EACAC,OAAA+I,EAAA/I,SAAA,EACA2L,SAAA,IACAwF,SAAA7B,EAAA5G,EACAhN,SAAA,EACA0V,OAAA,SAEAhF,MAAA,CACAC,KAAAlU,EAAAiU,OAEAiF,KAAA,CACAC,eAAA,MAAAnZ,EAAAoB,eAAA,QAAApB,EAAAoB,eAAA,IAAA1C,MAAA0a,oBAAA,GAEAC,cAAA,CACAC,QAAA,CAAA,CACA5V,KAAA,MACA1E,MAAA,EACAkV,KAAA,QACAD,MAAA,kBACA,CACAvQ,KAAA,MACA1E,MAAA,EACAkV,KAAA,SACAD,MAAA,mBACA,CACAvQ,KAAA,MACA1E,MAAA,EACAkV,KAAA,SACAD,MAAA,mBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,oBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,qBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,qBACA,CACAvQ,KAAA,MACAwQ,KAAA,iBACAD,MAAA,2BACA,CACAvQ,KAAA,OACA1E,MAAA,EACAkV,KAAA,SACAD,MAAA,mBACA,CACAvQ,KAAA,MACAwQ,KAAA,QACAD,MAAA,mBAEAsF,mBAAA,EACAC,SAAA,SACA3R,OAAA,GACA4R,SA9KA,CAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,IAAA,GA8KAla,EAAAma,aACAC,gBAAA,aAEA9B,UAAA,CACA+B,oBAAA,EACAxS,OAAA,GACAyS,OAAA,GACA3Y,OAAA,CACA,CACA3B,KAAA,KACA2X,aAAA,CACA5T,SAAA,EACA6T,cAAA,OACAC,MAAAlH,EAAAf,uBAEAmI,cAAA,MAGA3Q,MAAA,CACAvB,SAAA,IAGA0U,UAAA,CACAxW,SAAA,GAEAqD,MAAA,CACAoT,OAAA,CACAC,iBAzGA,SAAA/T,GACAxH,QAAAC,IAAA,0BAAA,IAAAT,KAAAgI,EAAAZ,KAAA,MAAA,IAAApH,KAAAgI,EAAAX,KAAA,MAAAW,EAAAN,SACAqG,MAAA/F,EAAAN,UACAgR,GAGAE,EAAA5Q,EACAxH,QAAAC,IAAA,cAAA,IAAAT,KAAAgI,EAAAZ,KAAA,MAAA,IAAApH,KAAAgI,EAAAX,MAEAsR,GAAA,GALAW,EAAAtR,EAAAZ,IAAAY,EAAAX,QAuGA2U,qBAAA/J,EAAAd,+BACA8K,WAAA,IACA9U,SAAA,GAGAyB,MAAA,CAAA,CACA8M,OAAA,CACAa,UAAA,WACA,OAAAtR,KAAAsT,MAAA,IAAA1D,GAEAqH,MAAA,QAGA3G,MAAA,CACAC,KAAA,cAEArM,OAAA7H,EAAA6a,aAAA7a,EAAA6a,aAAA,IAAA,MACAjI,UAAA,EACAkI,OAAA,CACA/W,SAAA,GAGA4S,UAAAA,EACA7Q,IAAA9F,EAAA+a,UAAA5J,WAAAnR,EAAA+a,gBAAAtO,EACA1G,IAAA/F,EAAAgb,UAAA7J,WAAAnR,EAAAgb,gBAAAvO,EACAwO,WAAAjb,EAAAkb,iBAAAlb,EAAAkb,sBAAAzO,EACA0O,YAAA,GAEA,CACA/G,OAAA,CACAa,UAAA,WACA,OAAAtR,KAAAsT,MAAA,IAAA1D,GAEAqH,MAAA,QAEA3G,MAAA,CACAC,KAAA,aAEAxM,IAAA1H,EAAA6a,aAAA1J,WAAAnR,EAAA6a,eAAA7a,EAAAob,aAAAjK,WAAAnR,EAAAob,cAAA,GAAA,IAAA,IAAApb,EAAAob,aAAAjK,WAAAnR,EAAAob,cAAA,GAAA,IACAvT,OAAA7H,EAAAqb,aAAArb,EAAAqb,aAAA,IAAA,MACAC,OAAA,EACA1I,UAAA,EACA9M,IAAA9F,EAAAub,UAAApK,WAAAnR,EAAAub,gBAAA9O,EACA1G,IAAA/F,EAAAwb,UAAArK,WAAAnR,EAAAwb,gBAAA/O,EACAwO,WAAAjb,EAAAyb,iBAAAzb,EAAAyb,sBAAAhP,EACA0O,YAAA,IAIA7G,YAAA,GAEAM,OAAA,CACA7Q,QAAA/D,EAAA6U,WACA+F,MAAA,OACAc,cAAA,MACAlR,EAAA,EACAC,EAAA,GACAkR,UAAA,GAEA7G,UAAA,CACA/Q,QAAA/D,EAAA+U,UAGAM,QAAA,CACAtR,SAAA,GAEAiR,QAAA,CACA4G,YAAA,iFACAC,cAAA,EACA9K,OAAA,EACA/G,iBAAA,EACA0Q,qBAAA/J,EAAAd,gCAGAlO,OAAA7D,IAIAgO,OAAArL,WAAA,WACAC,iBAAA6W,EAAAlX,EAAA,GAAAE,WAAAF,EAAA,GAAArC,SAAAqC,EAAA,GAAAG,WAAAH,EAAA,GAAAnC,cAAA8B,EAAAoB,cAAApB,EAAA8b,eAAApE,SAAA1X,EAAA8b,gBAAA,GAAA,WACAva,EAAA+W,UAAA3W,OAAA,GAAAC,QAAA2V,GACAhW,EAAA+W,UAAA3W,OAAA,GAAAyF,MAAAtB,IAAAyR,EAAA,GAAA,GACA,IAAA3W,EAAA,IAAAlC,KACAkC,EAAA0B,mBAAA,GACA1B,EAAA2B,cAAA,GACA,MAAAvC,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,aACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IACA,MAAAD,EAAAma,aACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IACA,MAAAD,EAAAma,aACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IACA,OAAAD,EAAAma,YACAvZ,EAAA,IAAAlC,KAAAkC,EAAAjC,cAAA,EAAA,GACA,MAAAqB,EAAAma,aACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,KACA,OAAAD,EAAAma,cACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,MAEA+X,EAAApX,EAAA9B,WAAA,IAAAJ,MAAAI,WAGA,IAAAid,EAAA,EAIA1P,EAAA,IAAA8K,EAAA5G,GAAAtD,WAAA,SAAA+O,EAAAC,GACA,EAAAA,GACAF,GAAA,EAAApL,EAAAN,YACA6L,KAEAD,EAAA,IACAF,EAAApL,EAAAN,YACA6L,OAIA,IAAAA,EAAA,WAEA,IAAAC,EAAA5a,EAAA6F,MAAA,GAAAhC,cAAAsD,QACA0T,EAAA7a,EAAA6F,MAAA,GAAAhC,cAAAuD,QACAmC,EAAA7H,QACA8H,GAAA,IAAArM,MAAAI,UAEAyC,EAAA6F,MAAA,GAAAjB,YAAAyC,KAAA7C,IAAA+E,EAAAqR,EAAAJ,GAAAK,EAAAD,IAAAvT,KAAA9C,IAAAiF,EAAAqR,EAAAL,GAAAK,EAAAD,KAAA,GAAA,EAAA,CAAA/V,QAAA,aAIA,IAuGApG,EAAAkR,oBACAhS,QAAAC,IAAA,2BAAAa,EAAAkR,mBACA9R,IAAAe,OAAAqN,KAAAxN,EAAAkR,kBAAA,OAAAmH,GACAzH,EAAA5Q,KAAA,QAAA,CAAAA,EAAAkR,kBAAA,SACAN,EAAA5Q,KAAA,cAAAqY,IAEArY,EAAAuR,oBACArS,QAAAC,IAAA,2BAAAa,EAAAuR,mBACAnS,IAAAe,OAAAqN,KAAAxN,EAAAuR,kBAAA,OAAAmH,GACA9H,EAAA5Q,KAAA,QAAA,CAAAA,EAAAuR,kBAAA,SACAX,EAAA5Q,KAAA,cAAA0Y,IAEA1Y,EAAAyV,oBACAvW,QAAAC,IAAA,2BAAAa,EAAAyV,mBACArW,IAAAe,OAAAqN,KAAAxN,EAAAyV,kBAAA,OAAAkD,GACA/H,EAAA5Q,KAAA,QAAA,CAAAA,EAAAyV,kBAAA,SACA7E,EAAA5Q,KAAA,cAAA2Y,IAEA3Y,EAAA6V,oBACA3W,QAAAC,IAAA,2BAAAa,EAAA6V,mBACAzW,IAAAe,OAAAqN,KAAAxN,EAAA6V,kBAAA,OAAA+C,GACAhI,EAAA5Q,KAAA,QAAA,CAAAA,EAAA6V,kBAAA,SACAjF,EAAA5Q,KAAA,cAAA4Y,IAEA5Y,EAAAiW,oBACA/W,QAAAC,IAAA,2BAAAa,EAAAiW,mBACA7W,IAAAe,OAAAqN,KAAAxN,EAAAiW,kBAAA,OAAA4C,GACAjI,EAAA5Q,KAAA,QAAA,CAAAA,EAAAiW,kBAAA,SACArF,EAAA5Q,KAAA,cAAA6Y,IAEA7Y,EAAAqc,oBACAnd,QAAAC,IAAA,2BAAAa,EAAAqc,mBACAjd,IAAAe,OAAAqN,KAAAxN,EAAAqc,kBAAA,OAAAvD,GACAlI,EAAA5Q,KAAA,QAAA,CAAAA,EAAAqc,kBAAA,SACAzL,EAAA5Q,KAAA,cAAA8Y,KAKAwD,wBAAA,SAAA/L,EAAAC,EAAAxQ,EAAAyQ,GACA,IAAA3S,EAAA,GACAuC,EAAA,GAEA8W,EAAA,oBACA5V,EAAA,KACAoP,EAAAhN,KACAyT,GAAA,EAEAC,GAAA,EACAC,EAAA,KACAC,EAAA,GAGArY,QAAAC,IAAA,kDAEA,IAAAyR,EAAAvE,EAAA,IAAAkE,GAEA,IAAAK,EAAAlR,OACA,OAAAe,WAAA,WACAkQ,EAAA2L,wBAAA/L,EAAAC,EAAAxQ,EAAAyQ,IACA,KAEAvR,QAAAC,IAAA,4BAAAoR,GAEA,oBAAAO,SACAA,QAGA,IAAAwH,EAAA,CAAAva,GAAA,EAAAwC,WAAAP,EAAAuc,cAAAve,SAAAgC,EAAAwc,YAAAte,cAAAiT,WAAAnR,EAAAyc,mBAAA,GAEApc,EAAA,GACAvC,EAAA,GACA,IACAgC,EADAQ,EAAA,EAEA,IAAAR,EAAA,EAAAA,EAAA,EAAAA,IACAE,EAAA,SAAAF,EAAA,eAAAE,EAAA,WAAAF,KACAO,EAAAgB,KAAA,CAAAtD,GAAAuC,EAAAC,WAAAP,EAAA,SAAAF,EAAA,cAAA9B,SAAAgC,EAAA,WAAAF,GAAA5B,cAAAiT,WAAAnR,EAAA,gBAAAF,KAAA,EAAA0X,MAAA,IAEA1Z,EAAAuD,KAAA,CACAuQ,KAAA5R,EAAA,SAAAF,EAAA,SACAE,KAAA,GACAgS,MAAAhS,EAAA,SAAAF,EAAA,UAAA,UACA8S,UAAA5S,EAAA,SAAAF,EAAA,cAAA,EACA2X,YAAAzX,EAAA,SAAAF,EAAA,WAAAqR,WAAAnR,EAAA,SAAAF,EAAA,YAAA,IAAA,GACA4D,KAAA1D,EAAA,SAAAF,EAAA,SAAA,aACAwH,MAAAtH,EAAA,SAAAF,EAAA,QAAA4X,SAAA1X,EAAA,SAAAF,EAAA,SAAA,EACAgT,KAAA9S,EAAA,SAAAF,EAAA,SAAA,MAAAE,EAAA,SAAAF,EAAA,QAAAE,EAAA,SAAAF,EAAA,aAAA2M,EACA+H,SAAAxU,EAAA,SAAAF,EAAA,aAAA,MAAAE,EAAA,SAAAF,EAAA,YAAAE,EAAA,SAAAF,EAAA,iBAAA2M,EACAkL,aAAA,CACA5T,SAAA,EACA6T,cAAA,OACAC,MAAAlH,EAAAf,uBAEAzP,OAAA,CACA2X,MAAA,CACA/T,SAAA,EACA6O,UAAA5S,EAAA,SAAAF,EAAA,mBAAA,IAGAiY,cAAA,MAIAzX,KAKA,IAAAqW,EAAA,GAMA,SAAAqB,EAAApZ,EAAAC,EAAAT,GAGA,GAFAc,QAAAC,IAAA,mBAAA,IAAAT,KAAAE,GAAA,MAAA,IAAAF,KAAAG,KACA,EACAD,GAAAC,EAAA,CACAuY,GAAA,EACA,IAAA5V,EAAA5C,EACA6C,EAAA5C,EACAK,QAAAC,IAAA,sBAAA,IAAAT,KAAA8C,GAAA,MAAA,IAAA9C,KAAA+C,IAEAF,EAAA0W,cACAnM,OAAArL,WAAA,WACAuB,gBAAAT,EAAAlB,EAAA,EAAAL,EAAAoB,cAAAxC,EAAAC,EAAA2C,EAAAC,EAAA,WACAF,EAAA8E,SACA9E,EAAA2W,cACAd,GAAA,EACAhZ,GAAAA,OAEA,KAtBA4B,EAAA2J,QACAgN,EAAAtV,KAAA,CAAA2Q,MAAA,UAAA+E,UAAA,QAAAC,MAAAhX,EAAA6S,YAAA,SAAAoE,MAAA9F,WAAAnR,EAAA2J,QAAA/B,MAAA,IA6BA+I,EAAA5C,sBAAAwC,IAAAzE,OAAAqM,cAAAxH,EAAA5C,sBAAAwC,IACAI,EAAA5C,sBAAAwC,GAAAzE,OAAAsM,YAAA,WACA,GAAAhB,GAAA,GAAAC,IACAA,GAAA,EACAnY,QAAAC,IAAA,iBAAA,IAAAT,KAAA4Y,EAAAxR,KAAA,MAAA,IAAApH,KAAA4Y,EAAAvR,MACAiS,EAAAV,EAAAxR,IAAAwR,EAAAvR,OAGA,KAiBA,OAAA3G,IAAAiU,UAAA3H,WAAA4H,WAAA3C,EAAA1C,mBACA,IAAAsF,EAAAvT,EAAAuT,KA2NA,SAAAmJ,IAEA,GADAxd,QAAAC,IAAA,sBACAoC,EAAA,CAQA,IA5CAxD,EAAAC,EAAAE,EAAAE,EAGAG,EACAoe,EAFAne,EA0CA+Z,EAAAhX,EAAA6F,MAAA,GAAAhC,cACAoT,EAAAjX,EAAA+W,UAAAlR,MAAArB,IAEA7G,QAAAC,IAAA,wBAAA,IAAAT,KAAA8Z,GAAA,MAAA,IAAA9Z,KAAA6Z,EAAA5P,UA/CA5K,EAgDAua,EAAA/X,WAhDAvC,EAgDAsa,EAAAta,SAhDAE,EAgDAoa,EAAApa,cAhDAE,EAgDA,WACA,GAAAmD,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,EAAAgO,GAAAD,EAAAxS,IAAAyS,EAAA,IAAA,CACA,IAAAC,EAAAlX,EAAA+W,UAAAlR,MAAArB,IACAxE,EAAA6F,MAAA,GAAAjB,YAAAoS,EAAAzS,IAAA2S,EAAAF,EAAAxS,IAAA0S,GAAA,GAAA,EAAA,CAAArS,QAAA,YAjDA5H,EAAA,IAGAI,MA2CA4Z,EAAA,EA1CAha,EAAAR,SAAAA,EACAQ,EAAAO,UAAA,SAEAP,EAAAoe,MAAA,IACApe,EAAAS,QAAA,KACAG,IAAAC,WAAAtB,EAAAS,EAAA,SAAAc,EAAAC,GAEA,GADAD,GAAA,EAAAE,OAAAC,KAAAH,GAAAI,QAAAR,QAAAS,MAAA,iBAAAC,KAAAC,UAAAP,KACAA,GAAAC,EAAA,CACAL,QAAAC,IAAA,2BAAAI,EAAAG,QACA,IAAA,IAAAI,EAAA,EAAAA,EAAAP,EAAAG,OAAAI,IACAvB,EAAA,IAAAG,KAAAa,EAAAO,GAAAC,IACA4c,EAAApd,EAAAO,GAAAI,IAAAhC,EAEA,MAAAqB,EAAAO,GAAAI,MACAqB,EAAA+W,UAAA3W,OAAA,GAAA3B,MAAA,EAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,QAAA6B,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,IAAA6B,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,GAAA8K,GAAAjM,EAAAO,UACAyC,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAuB,EAAA+W,UAAA3W,OAAA,GAAA3B,KAAAN,OAAA,GAAAyT,OAAAwJ,GAEApb,EAAA+W,UAAA3W,OAAA,GAAAI,SAAA,CAAAxD,EAAAO,UAAA6d,KAKApd,EAAA,KAEAnB,GAAAA,WAOAuS,EAAA7C,sBAAAyC,KACAzE,OAAAqM,cAAAxH,EAAA7C,sBAAAyC,IACAI,EAAA7C,sBAAAyC,GAAA,MA/NAhP,EAAAmK,WAAAqN,WAAA5B,EAAA5G,EAAA,CACAhP,MAAA,CACAqG,MAAAgJ,EAAAhJ,QAAA,EACAC,OAAA+I,EAAA/I,SAAA,EACA2L,SAAA,IACAwF,SAAA7B,EAAA5G,EACAhN,SAAA,EACA0V,OAAA,SAEAhF,MAAA,CACAC,KAAAlU,EAAAiU,OAEAiF,KAAA,CACA2D,QAAA,GAEAxD,cAAA,CACAC,QAAA,CAAA,CACA5V,KAAA,MACA1E,MAAA,EACAkV,KAAA,QACAD,MAAA,kBACA,CACAvQ,KAAA,MACA1E,MAAA,EACAkV,KAAA,SACAD,MAAA,mBACA,CACAvQ,KAAA,MACA1E,MAAA,EACAkV,KAAA,SACAD,MAAA,mBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,oBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,qBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,sBAEAsF,mBAAA,EACAC,SAAA,SACA3R,OAAA,GACA4R,SArKA,CAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,GAqKA/Z,EAAAma,aACAC,gBAAA,aAEA9B,UAAA,CACA+B,oBAAA,EACAxS,OAAA,GACAyS,OAAA,GACA3Y,OAAA,CACA,CACA3B,KAAA,KACA2X,aAAA,CACA5T,SAAA,EACA6T,cAAA,OACAC,MAAAlH,EAAAf,uBAEAmI,cAAA,MAGA3Q,MAAA,CACAvB,SAAA,IAGA0U,UAAA,CACAxW,SAAA,GAEAqD,MAAA,CACAoT,OAAA,CACAC,iBA9FA,SAAA/T,GACAxH,QAAAC,IAAA,0BAAA,IAAAT,KAAAgI,EAAAZ,KAAA,MAAA,IAAApH,KAAAgI,EAAAX,KAAA,MAAAW,EAAAN,SACAqG,MAAA/F,EAAAN,UACAgR,GAGAE,EAAA5Q,EACAxH,QAAAC,IAAA,cAAA,IAAAT,KAAAgI,EAAAZ,KAAA,MAAA,IAAApH,KAAAgI,EAAAX,MAEAsR,GAAA,GALAW,EAAAtR,EAAAZ,IAAAY,EAAAX,QA4FAF,SAAA,EACA6U,qBAAA/J,EAAAd,gCAGAvI,MAAA,CAAA,CACA8M,OAAA,CACAa,UAAA,WACA,OAAAtR,KAAAsT,OAEA2D,MAAA,OACApQ,EAAA,GAEAyJ,MAAA,CACAC,KAAAlU,EAAA8c,aAEAjV,OAAA7H,EAAA6a,aAAA7a,EAAA6a,aAAA,IAAA,MACAjI,UAAA,EACAkI,OAAA,CACA/W,SAAA,GAEA2N,WAAA1R,EAAA+c,iBAAAnd,KAAAod,MAAAhd,EAAA+c,uBAAAtQ,EACA6O,OAAA,EACAxV,IAAA9F,EAAA+a,UAAA5J,WAAAnR,EAAA+a,gBAAAtO,EACA1G,IAAA/F,EAAAgb,UAAA7J,WAAAnR,EAAAgb,gBAAAvO,EACAwO,WAAAjb,EAAAkb,iBAAAlb,EAAAkb,sBAAAzO,EACA0O,YAAA,EACA8B,aAAA,GACA,CACA7I,OAAA,CACAa,UAAA,WACA,OAAAtR,KAAAsT,MAAA,IAAA1D,GAEAqH,MAAA,OACApQ,EAAA,GAGAyJ,MAAA,CACAC,KAAAlU,EAAAkd,aAEAxV,IAAA1H,EAAA6a,aAAA1J,WAAAnR,EAAA6a,eAAA7a,EAAAob,aAAAjK,WAAAnR,EAAAob,cAAA,GAAA,IAAA,IAAApb,EAAAob,aAAAjK,WAAAnR,EAAAob,cAAA,GAAA,IACAvT,OAAA7H,EAAAqb,aAAArb,EAAAqb,aAAA,IAAA,MACAzI,UAAA,EACAkI,OAAA,CACA/W,SAAA,GAEA2N,WAAA1R,EAAAmd,iBAAAvd,KAAAod,MAAAhd,EAAAmd,uBAAA1Q,EACA6O,OAAA,EACA3E,UAAAA,EACA7Q,IAAA9F,EAAAub,UAAApK,WAAAnR,EAAAub,gBAAA9O,EACA1G,IAAA/F,EAAAwb,UAAArK,WAAAnR,EAAAwb,gBAAA/O,EACAwO,WAAAjb,EAAAyb,iBAAAzb,EAAAyb,sBAAAhP,EACA0O,YAAA,GAEA,CACA/G,OAAA,CACAa,UAAA,WACA,OAAAtR,KAAAsT,MAAA,IAAA1D,GAEAqH,MAAA,OACApQ,EAAA,GAEAyJ,MAAA,CACAC,KAAAlU,EAAAod,aAEA1L,WAAA1R,EAAAqd,iBAAAzd,KAAAod,MAAAhd,EAAAqd,uBAAA5Q,EACA/E,KAAA1H,EAAA6a,aAAA1J,WAAAnR,EAAA6a,eAAA7a,EAAAob,aAAAjK,WAAAnR,EAAAob,cAAA,GAAA,IAAApb,EAAAob,aAAAjK,WAAAnR,EAAAob,cAAA,KAAApb,EAAAqb,aAAAlK,WAAAnR,EAAAqb,eAAArb,EAAAob,aAAAjK,WAAAnR,EAAAob,cAAA,GAAA,IAAApb,EAAAob,aAAAjK,WAAAnR,EAAAob,cAAA,IAAA,IACAvT,OAAA7H,EAAAsd,aAAAtd,EAAAsd,aAAA,IAAA,MACAhC,OAAA,EACA1I,UAAA,EACA9M,IAAA9F,EAAAud,UAAApM,WAAAnR,EAAAud,gBAAA9Q,EACA1G,IAAA/F,EAAAwd,UAAArM,WAAAnR,EAAAwd,gBAAA/Q,EACAwO,WAAAjb,EAAAyd,iBAAAzd,EAAAyd,sBAAAhR,EACA0O,YAAA,IAIA7G,YAAA,GAEAM,OAAA,CACA7Q,QAAA/D,EAAA6U,WACA+F,MAAA,OACAc,cAAA,MACAlR,EAAA,EACAC,EAAA,GACAkR,UAAA,GAEA7G,UAAA,CACA/Q,QAAA/D,EAAA+U,UAGAM,QAAA,CACAtR,SAAA,GAEAiR,QAAA,CACA4G,YAAA,iFACAC,cAAA,EACA9K,OAAA,EACA/G,iBAAA,EACA0Q,qBAAA/J,EAAAd,gCAGAlO,OAAA7D,IA8DAgO,OAAArL,WAAA,WACAC,iBAAA6W,EAAAe,EAAA/X,WAAA+X,EAAAta,SAAA,KAAAsa,EAAApa,cAAA,KAAA8B,EAAA8b,eAAApE,SAAA1X,EAAA8b,gBAAA,EAAA,WAEAva,EAAA+W,UAAA3W,OAAA,GAAAC,QAAA2V,GACAhW,EAAA+W,UAAA3W,OAAA,GAAAyF,MAAAtB,IAAAyR,EAAA,GAAA,GACA,IAAA3W,EAAA,IAAAlC,KACAkC,EAAA0B,mBAAA,GACA1B,EAAA2B,cAAA,GACA,MAAAvC,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,aACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IACA,MAAAD,EAAAma,aACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IACA,MAAAD,EAAAma,cACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IAEA+X,EAAApX,EAAA9B,WAAA,IAAAJ,MAAAI,UAAA,WACA6R,EAAA7C,sBAAAyC,IAAAzE,OAAAqM,cAAAxH,EAAA7C,sBAAAyC,IAGA,IAAAwL,EAAA,EAKA1P,EAAA,IAAA8K,EAAA5G,GAAAtD,WAAA,SAAA+O,EAAAC,GACA,EAAAA,GACAF,GAAA,EAAApL,EAAAN,YACA6L,KAEAD,EAAA,IACAF,EAAApL,EAAAN,YACA6L,OAIA,IAAAA,EAAA,WAEA,IAAAC,EAAA5a,EAAA6F,MAAA,GAAAhC,cAAAsD,QACA0T,EAAA7a,EAAA6F,MAAA,GAAAhC,cAAAuD,QACAmC,EAAA7H,QACA8H,GAAA,IAAArM,MAAAI,UAEAyC,EAAA6F,MAAA,GAAAjB,YAAAyC,KAAA7C,IAAA+E,EAAAqR,EAAAJ,GAAAK,EAAAD,IAAAvT,KAAA9C,IAAAiF,EAAAqR,EAAAL,GAAAK,EAAAD,KAAA,GAAA,EAAA,CAAA/V,QAAA,UAIAuK,EAAA7C,sBAAAyC,GAAAzE,OAAAsM,YAAA,WACAsE,KACA,UAIA,KAIAgB,wBAAA,SAAAnN,EAAAC,EAAAxQ,EAAAyQ,GACA,IAAA3S,EAAA,GACAuC,EAAA,GAEA8W,EAAA,oBACA5V,EAAA,KACAoP,EAAAhN,KACAyT,GAAA,EAEAC,GAAA,EACAC,EAAA,KAGApY,QAAAC,IAAA,kDAEA,IAAAyR,EAAAvE,EAAA,IAAAkE,GAEA,IAAAK,EAAAlR,OACA,OAAAe,WAAA,WACAkQ,EAAA+M,wBAAAnN,EAAAC,EAAAxQ,EAAAyQ,IACA,KAEAvR,QAAAC,IAAA,4BAAAoR,GAEA,oBAAAO,SACAA,QAGA,IAAAyC,EAAAvT,EAAAuT,KAIAlT,EAAA,GACAvC,EAAA,GACA,IACAgC,EACAkX,EAFA1W,EAAA,EAIA,IAAAR,EAAA,EAAAA,EAAA,EAAAA,IACAE,EAAA,SAAAF,EAAA,eAAAE,EAAA,WAAAF,KACAkX,EAAAhX,EAAA,SAAAF,EAAA,SACAO,EAAAgB,KAAA,CAAAtD,GAAAuC,EAAAC,WAAAP,EAAA,SAAAF,EAAA,cAAA9B,SAAAgC,EAAA,WAAAF,GAAA5B,cAAAiT,WAAAnR,EAAA,gBAAAF,KAAA,EAAA0X,MAAA,IAEA1Z,EAAAuD,KAAA,CACAuQ,KAAAoF,EACAhX,KAAA,GACAgS,MAAAhS,EAAA,SAAAF,EAAA,UAAA,UACA8S,UAAA5S,EAAA,SAAAF,EAAA,cAAA,EACA2X,YAAAzX,EAAA,SAAAF,EAAA,WAAAqR,WAAAnR,EAAA,SAAAF,EAAA,YAAA,IAAA,GACA4D,KAAA1D,EAAA,SAAAF,EAAA,SAAA,aACAgT,KAAA9S,EAAA,SAAAF,EAAA,SAAA,MAAAE,EAAA,SAAAF,EAAA,QAAAE,EAAA,SAAAF,EAAA,aAAA2M,EACA+H,SAAAxU,EAAA,SAAAF,EAAA,aAAA,MAAAE,EAAA,SAAAF,EAAA,YAAAE,EAAA,SAAAF,EAAA,iBAAA2M,EAEAkL,aAAA,CACA5T,SAAA,EACA6T,cAAA,OACAC,MAAAlH,EAAAf,uBAEAzP,OAAA,CACA2X,MAAA,CACA/T,SAAA,EACA6O,UAAA5S,EAAA,SAAAF,EAAA,mBAAA,IAGAiY,cAAA,MAIAzX,KAWA,SAAA0X,EAAApZ,EAAAC,EAAAT,GAIA,GAHAc,QAAAC,IAAA,mBAAA,IAAAT,KAAAE,GAAA,MAAA,IAAAF,KAAAG,KAEA,EACAD,GAAAC,EAAA,CACAuY,GAAA,EACA,IAAA5V,EAAA5C,EACA6C,EAAA5C,EAEA0C,EAAA0W,cACAnM,OAAArL,WAAA,WACAuB,gBAAAT,EAAAlB,EAAA,EAAAL,EAAAoB,cAAAxC,EAAAC,EAAA2C,EAAAC,EAAA,WAGAF,EAAA8E,SACA9E,EAAA2W,cACAd,GAAA,EACAhZ,GAAAA,OAEA,KAxBA4B,EAAA2J,QADA,GAEAtI,KAAA,CAAA2Q,MAAA,UAAA+E,UAAA,QAAAC,MAAAhX,EAAA6S,YAAA,SAAAoE,MAAA9F,WAAAnR,EAAA2J,QAAA/B,MAAA,IA0CA+I,EAAA5C,sBAAAwC,IAAAzE,OAAAqM,cAAAxH,EAAA5C,sBAAAwC,IACAI,EAAA5C,sBAAAwC,GAAAzE,OAAAsM,YAAA,WACA,GAAAhB,GAAA,GAAAC,IACAA,GAAA,EACAnY,QAAAC,IAAA,iBAAA,IAAAT,KAAA4Y,EAAAxR,KAAA,MAAA,IAAApH,KAAA4Y,EAAAvR,MACAiS,EAAAV,EAAAxR,IAAAwR,EAAAvR,OAGA,KAsBA,OAAA3G,IAAAiU,UAAA3H,WAAA4H,WAAA3C,EAAA1C,mBACA7O,IAAAe,OAAAH,EAAAgR,mBAwIA,SAAA0L,IAEA,GADAxd,QAAAC,IAAA,sBACAoC,EAAA,CAQA,IAhMA3C,EAAAC,EAAAT,EAgMAma,EAAAhX,EAAA6F,MAAA,GAAAhC,cACA,GAAAgS,IAAA,IAAA1Y,MAAAI,UAAA,IAAAyZ,EAAAxS,MAjMAnH,EAmMA2Z,EAAA5P,QAnMA9J,GAmMA,IAAAH,MAAAI,UAnMAV,EAmMA,SAAA0D,GAEAP,EAAA6F,MAAA,GAAAjB,YAAAoS,EAAA7P,QAAA5G,EAAAyW,EAAA5P,QAAA7G,GACA5C,QAAAC,IAAA,yBAAA,IAAAT,KAAA6Z,EAAA7P,QAAA5G,EAAAyW,EAAA5P,SAAA,MAAA,IAAAjK,KAAAoD,KArMA5C,QAAAC,IAAA,6BAAA,IAAAT,KAAAE,GAAA,MAAA,IAAAF,KAAAG,IACAD,GAAAC,GACAiN,OAAArL,WAAA,WACAwB,sBAAAV,EAAAlB,EAAA,EAAAL,EAAAoB,cAAAxC,EAAAC,EAAAD,EAAA,SAAAkD,GACA1D,GAAAA,EAAA0D,MAEA,UAkLA6O,EAAA7C,sBAAAyC,KACAzE,OAAAqM,cAAAxH,EAAA7C,sBAAAyC,IACAI,EAAA7C,sBAAAyC,GAAA,MAuFA,SAAAoN,EAAAra,EAAA2P,EAAAC,GAEA,GADAhU,QAAAC,IAAA,eACAoC,GAAA0R,GAAAC,GAGAlT,EAAA4d,SAAAxe,IAAAe,OAAAH,EAAA4d,QAAA,QAAA,CACA,IAAAC,EAAAtc,EAAA6F,MAAA,GAAAhC,cACAxE,EAAA,IAAAlC,KAAA,IAAAA,KAAAmf,EAAAlV,SAAA7J,UAAA,IAAAmU,GACA1R,EAAA6F,MAAA,GAAAjB,YAAAvF,EAAA9B,UAAA+e,EAAAlV,SAAA,GAAA,EAAA,CAAAvC,QAAA,UA3OA7E,EAAA,IAAAmK,WAAAqN,WAAA5B,EAAA5G,EAAA,CACAhP,MAAA,CACAqG,MAAAgJ,EAAAhJ,QAAA,EACAC,OAAA+I,EAAA/I,SAAA,EACA2L,SAAA,IACAjQ,SAAA,EACA0V,OAAA,QACAD,SAAA7B,EAAA5G,EACAuN,gBAAA,uBAEA7J,MAAA,CACAC,KAAAlU,EAAAiU,OAEAiF,KAAA,CACA2D,QAAA,GAEAxD,cAAA,CACAtV,SAAA,EACAuV,QAAA,CAAA,CACA5V,KAAA,MACA1E,MAAA,EACAkV,KAAA,QACAD,MAAA,kBACA,CACAvQ,KAAA,MACA1E,MAAA,EACAkV,KAAA,SACAD,MAAA,mBACA,CACAvQ,KAAA,MACA1E,MAAA,EACAkV,KAAA,SACAD,MAAA,mBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,oBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,qBACA,CACAvQ,KAAA,QACA1E,MAAA,EACAkV,KAAA,KACAD,MAAA,sBAEAsF,mBAAA,EACAC,SAAA,SACA3R,OAAA,GACAuS,gBAAA,aAEA9B,UAAA,CACAvU,SAAA,EACApC,OAAA,CACA,CACA3B,KAAA,KACA2X,aAAA,CACA5T,SAAA,EACA6T,cAAA,OACAC,MAAAlH,EAAAf,uBAEAmI,cAAA,MAGA3Q,MAAA,CACAvB,SAAA,IAGA0U,UAAA,CACAxW,SAAA,GAEAqD,MAAA,CACAoT,OAAA,CACAC,iBAlGA,SAAA/T,GACAxH,QAAAC,IAAA,0BAAA,IAAAT,KAAAgI,EAAAZ,KAAA,MAAA,IAAApH,KAAAgI,EAAAX,KAAA,MAAAW,EAAAN,SACAqG,MAAA/F,EAAAN,UACAgR,GAGAE,EAAA5Q,EACAxH,QAAAC,IAAA,cAAA,IAAAT,KAAAgI,EAAAZ,KAAA,MAAA,IAAApH,KAAAgI,EAAAX,MAEAsR,GAAA,GALAW,EAAAtR,EAAAZ,IAAAY,EAAAX,OA+FAI,YArFA,SAAAO,GACAxH,QAAAC,IAAA,qBAAA,IAAAT,KAAAgI,EAAAZ,KAAA,MAAA,IAAApH,KAAAgI,EAAAX,KAAA,MAAAW,EAAAN,WAsFAP,SAAA,EACA6U,qBAAA/J,EAAAd,gCAIAvI,MAAA,CAAA,CACA8M,OAAA,CACAa,UAAA,WACA,OAAAtR,KAAAsT,MAAA,IAAA1D,GAEAqH,MAAA,OACApQ,EAAA,GAGAoI,UAAA,EACA0I,OAAA,EACA5J,WAAA1R,EAAA+c,iBAAAnd,KAAAod,MAAAhd,EAAA+c,uBAAAtQ,EACA3G,IAAA9F,EAAA+a,UAAA5J,WAAAnR,EAAA+a,gBAAAtO,EACA1G,IAAA/F,EAAAgb,UAAA7J,WAAAnR,EAAAgb,gBAAAvO,EACAwO,WAAAjb,EAAAkb,iBAAAlb,EAAAkb,sBAAAzO,EACA0O,YAAA,EACA8B,aAAA,IAKA3I,YAAA,GAEAM,OAAA,CACA7Q,QAAA/D,EAAA6U,WACA+F,MAAA,OACAc,cAAA,MACAlR,EAAA,EACAC,EAAA,EACAkR,UAAA,GAEA7G,UAAA,CACA/Q,QAAA/D,EAAA+U,UAGAM,QAAA,CACAtR,SAAA,GAEAiR,QAAA,CACA4G,YAAA,iFACAC,cAAA,EACA9K,OAAA,EACA/G,iBAAA,EACA0Q,qBAAA/J,EAAAd,gCAGAlO,OAAA7D,IA4BAgO,OAAArL,WAAA,WACA,IAAAG,EAAA,IAAAlC,KACAkC,EAAA0B,mBAAA,GACA1B,EAAA2B,cAAA,GACAvC,EAAA4d,SAAAxe,IAAAe,OAAAH,EAAA4d,QAAA,SACA1e,QAAAC,IAAA,8BAAAC,IAAAe,OAAAH,EAAA4d,QAAA,QAAA,gBAAAxe,IAAAe,OAAAH,EAAA4d,QAAA,SACAhd,EAAA,IAAAlC,MAAA,IAAAA,MAAAI,UAAA,IAAAM,IAAAe,OAAAH,EAAA4d,QAAA,UAEA,MAAA5d,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,YACAvZ,EAAAkC,QAAAlC,EAAAiC,UAAA,GACA,MAAA7C,EAAAma,aACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IACA,MAAAD,EAAAma,aACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IACA,MAAAD,EAAAma,cACAvZ,EAAA4B,cAAA,GACA5B,EAAA6B,YAAA,GACA7B,EAAAoC,YAAApC,EAAAX,WAAA,IAGA+X,EAAApX,EAAA9B,WAAA,IAAAJ,MAAAI,UAAA,WACAyC,EAAA6F,MAAA,GAAA0B,kBAAA,EAGA,IAAAiT,EAAA,EAKA1P,EAAA,IAAA8K,EAAA5G,GAAAtD,WAAA,SAAA+O,EAAAC,GACA,EAAAA,GACAF,GAAA,EAAApL,EAAAN,YACA6L,KAEAD,EAAA,IACAF,EAAApL,EAAAN,YACA6L,OAIA,IAAAA,EAAA,WAEA,IAAAC,EAAA5a,EAAA6F,MAAA,GAAAhC,cAAAsD,QACA0T,EAAA7a,EAAA6F,MAAA,GAAAhC,cAAAuD,QACAmC,EAAA7H,QACA8H,GAAA,IAAArM,MAAAI,UAEAyC,EAAA6F,MAAA,GAAAjB,YAAAyC,KAAA7C,IAAA+E,EAAAqR,EAAAJ,GAAAK,EAAAD,IAAAvT,KAAA9C,IAAAiF,EAAAqR,EAAAL,GAAAK,EAAAD,KAAA,GAAA,EAAA,CAAA/V,QAAA,UAIAuK,EAAA7C,sBAAAyC,IAAAzE,OAAAqM,cAAAxH,EAAA7C,sBAAAyC,IACAI,EAAA7C,sBAAAyC,GAAAzE,OAAAsM,YAAA,WACAsE,KACA,QAIA,IAeA1c,EAAA4d,UACA1e,QAAAC,IAAA,2BAAAa,EAAA4d,SACAxe,IAAAe,OAAAqN,KAAAxN,EAAA4d,QAAA,OAAAD,GACA/M,EAAA5Q,KAAA,QAAA,CAAAA,EAAA4d,QAAA,SACAhN,EAAA5Q,KAAA,cAAA2d,MAQAve,IAAAuO,MAAAC,mBAAAI","file":"photovoltaikCharts.js","sourcesContent":["var months = {\n    'en': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'de': ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n    'ru': ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    'es': ['Jan', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],\n    'fr': ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'it': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'pl': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'pt': ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Set', 'Out', 'Nov', 'Dez'],\n    'nl': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n};\nvar days = {\n    'en': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'de': ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    'ru': ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n    'es': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'fr': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'it': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'pl': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'pt': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'nl': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n};","'use strict';\n\nfunction readOneChart(seriesData,id,instance,currentId,multiplicator, index, callback,mode,startdate) {\n\n    var option = {};\n\tvar eventDate;\n\tvar currentYear=new Date ().getFullYear();\n\toption.start=startdate;\n\toption.end=(new Date(currentYear, 11, 31,23,59)).getTime();\n    option.instance  = instance;\n\toption.aggregate='none';\n\toption.count=1000;\n\toption.timeout=12000;\n    console.log(new Date(option.start) + ' - ' + new Date(option.end));\n\tvis.getHistory(id, option, function (err, res) {\n\t\tconsole.log('got History data');\n        if (err && Object.keys(err).length > 0) console.error('Error Object: ' + JSON.stringify(err));\n\n\n        if (!err && res) {\n            for (var i = 0; i < res.length; i++) {\n\t\t\t\teventDate=new Date (res[i].ts);\n\t\t\t\tif (mode===1){\n\t\t\t\t\tseriesData[(2-currentYear+eventDate.getFullYear())*2 + index].data[eventDate.getMonth()]=(res[i].val || 0) * multiplicator;\n\t\t\t\t} else {\n\t\t\t\t\tseriesData[index].data[4 - currentYear + eventDate.getFullYear()]=(res[i].val || 0) *multiplicator;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} \t\n            // free memory\n            res = null;\n        }\n\n        if (currentId) {\n\t\t\tif (mode===1){\n\t\t\t\tseriesData[4 + index].data[(new Date ()).getMonth()]=(vis.states[currentId + '.val'] || 0) * multiplicator;\n\t\t\t} else {\n\t\t\t\tseriesData[index].data[4]=(vis.states[currentId + '.val']|| 0) * multiplicator;\n\t\t\t}\t\t\n\t\t};\n  \t    if (callback) callback();\n    });\n}\n\n\nfunction _readData(seriesData,oidList,callback, j,mode,startdate) {\n    j = j || 0;\n    if (j >= oidList.length) {\n        return callback && callback();\n    } else {\n\t\tif (oidList[j].historyOID && oidList[j].instance) {\n\t\t\treadOneChart(seriesData,oidList[j].historyOID,oidList[j].instance,oidList[j].currentOID,oidList[j].multiplicator,j, function () {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t_readData(seriesData,oidList,callback, j + 1,mode,startdate);\n\t\t\t\t}, 10);\n\t\t\t},mode,startdate);\n\t\t}else{\n            setTimeout(function () {\n                _readData(seriesData,oidList,callback, j + 1,mode,startdate);\n            }, 10);\t\t\t\n\t\t}\n    }\n}\n\n\nfunction loadSelectorData(data,id,instance,currentId,multiplicator,mode,duration,callback) {\n\tvar startDate=new Date ();\n\tstartDate.setMonth (-1 * duration);\n\tvar start=startDate.getTime();\n    if (id && instance){\n\t\tvis.conn.sendTo(instance, 'query', \n\t\t\t\"select id from iobroker.datapoints where name ='\" + id + \"'\"\n\t\t, function (result) {\n\t\t\tif (result.error) {\n\t\t\t\tconsole.error(result.error);\t\t\t\n\t\t\t\tif (callback) callback();\n\t\t\t} else {\n\t\t\t\t// show result\n\t\t\t\tconsole.log('Rows: ' + JSON.stringify(result.result));\n\t\t\t\tif (result.result[0] && result.result[0].id){\n\t\t\t\t\tvar dbid=result.result[0].id;\n\t\t\t\t\tvis.conn.sendTo(instance, 'query', \n\t\t\t\t\t\t\"select COUNT(ts) AS rowcount from iobroker.ts_number where id=\" + dbid + \" and ts>\" + start\n\t\t\t\t\t, function (result) {\n\t\t\t\t\t\tif (result.error) {\n\t\t\t\t\t\t\tconsole.error(result.error);\t\t\t\n\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// show result\n\t\t\t\t\t\t\tconsole.log('Rows: ' + JSON.stringify(result.result));\n\t\t\t\t\t\t\tif (result.result[0] && result.result[0].rowcount){\n\t\t\t\t\t\t\t\tvar rowcount=result.result[0].rowcount;\n\t\t\t\t\t\t\t\tif (rowcount<1000) {\n\t\t\t\t\t\t\t\t\tvar sql = \"SELECT ts,val FROM iobroker.ts_number where id=\" + dbid;\n\t\t\t\t\t\t\t\t} else if (rowcount<10000) {\n\t\t\t\t\t\t\t\t\tvar sql = \"SELECT * FROM ( SELECT @row := @row +1 AS rownum, ts,val FROM (SELECT @row :=0) r, iobroker.ts_number where id=\" + dbid +\" and ts>\" + start +\") ranked WHERE rownum % (\" + rowcount + \" DIV 3) = 1\";\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else if (rowcount<100000) {\n\t\t\t\t\t\t\t\t\tvar sql = \"SELECT * FROM ( SELECT @row := @row +1 AS rownum, ts,val FROM (SELECT @row :=0) r, iobroker.ts_number where id=\" + dbid +\" and ts>\" + start +\") ranked WHERE rownum % (\" + rowcount + \" DIV 30) = 1\";\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar sql = \"SELECT * FROM ( SELECT @row := @row +1 AS rownum, ts,val FROM (SELECT @row :=0) r, iobroker.ts_number where id=\" + dbid +\" and ts>\" + start +\") ranked WHERE rownum % (\" + rowcount + \" DIV 100) = 1\";\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvis.conn.sendTo(instance, 'query', sql\n\t\t\t\t\t\t\t\t, function (result) {\n\t\t\t\t\t\t\t\t\tif (result.error) {\n\t\t\t\t\t\t\t\t\t\tconsole.error(result.error);\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// show result\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < result.result.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\teventDate=normalizeDate(new Date (result.result[i].ts),mode);\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(eventDate + ':' + result.result[i].val);\n\t\t\t\t\t\t\t\t\t\t\tdata.push ([eventDate.getTime(),(result.result[i].val || 0) * multiplicator]);\n\t\t\t\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t\t\t\t\t// free memory\n\t\t\t\t\t\t\t\t\t\tres = null;\t\t\n\t\t\t\t\t\t\t\t\t\tif (currentId) {\n\t\t\t\t\t\t\t\t\t\t\tdata.push ([normalizeDate(new Date (),mode).getTime(),(vis.states[currentId + '.val'] || 0) * multiplicator]);\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t});\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tif (callback) callback();\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t});\n\t} else {\n\t\tif (callback) callback();\n\t}\n}\n\n\nfunction readOneLineRange(chart,id,instance,currentId,multiplicator, index,mode,start,end,virtualStart,virtualEnd,callback) {\n\n    var option = {};\n\tvar eventDate;\n\tvar lastEventDate=new Date (0);\t\n\tvar currentYear=new Date ().getFullYear();\n\tvar data = [];\n\tif (virtualStart<start) data.push([virtualStart,0]);\n\toption.start=start;\n\toption.end=end;\n    option.instance  = instance;\n\toption.aggregate='minmax';\n\t//option.count=2000;\n\toption.timeout=12000;\n    console.log(JSON.stringify(option));\n    console.log('Load Range for ' + id +' '+ new Date(option.start) + ' - ' + new Date(option.end));\n\tvis.getHistory(id, option, function (err, res) {\n        if (err && Object.keys(err).length > 0) console.error('Error Object: ' + JSON.stringify(err));\n        if (!err && res) {\n\t\t\tconsole.log('got History data. Count:' + res.length);\t\t\n            for (var i = 0; i < res.length; i++) {\n\t\t\t\teventDate=normalizeDate(new Date (res[i].ts),mode);\n\t\t\t\t//console.log(id +' '+ new Date (res[i].ts)+ ' n ' + eventDate + ':' + res[i].val);\n\t\t\t\tif (res[i].val!=null){\n\t\t\t\t\tif (lastEventDate.getTime()==eventDate.getTime()) {\n\t\t\t\t\t\t//console.log('replace ' + new Date (data[data.length-1][0]) + ':' + res[i].val);\t\t\t\t\t\n\t\t\t\t\t\tdata[data.length-1][1]=(res[i].val || 0) * multiplicator;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.push ([eventDate.getTime(),(res[i].val || 0) * multiplicator]);\n\t\t\t\t\t\tlastEventDate=eventDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \t\n            // free memory\n            res = null;\n        }\n\n        if (currentId) {\n\t\t\tdata.push ([normalizeDate(new Date (),mode).getTime(),(vis.states[currentId + '.val']|| 0) * multiplicator]);\n\t\t};\n\t\tif (virtualEnd>end) data.push([virtualEnd,0]);\n\t\tchart.series[index].setData (data,false);\n  \t    if (callback) callback();\n    });\n}\n\nfunction readAndAddOneLineRange(chart,id,instance,multiplicator, index,mode,start,end,newMax,callback) {\n\n    var option = {};\n\tvar eventDate;\n\tvar lastEventDate=new Date (0);\t\n\tvar currentYear=new Date ().getFullYear();\n\tvar data = [];\n\toption.start=start;\n\toption.end=end;\n    option.instance  = instance;\n\toption.aggregate='minmax';\n\toption.timeout=12000;\n    console.log('Load Range for ' + id +' '+ new Date(option.start) + ' - ' + new Date(option.end));\n\tvis.getHistory(id, option, function (err, res) {\n        if (err && Object.keys(err).length > 0) console.error('Error Object: ' + JSON.stringify(err));\n        if (!err && res) {\n\t\t\tconsole.log('got History data. Count:' + res.length);\t\t\n            for (var i = 0; i < res.length; i++) {\n\t\t\t\teventDate=normalizeDate(new Date (res[i].ts),mode);\n\t\t\t\tif (res[i].val!=null){\n\t\t\t\t\tif (lastEventDate.getTime()==eventDate.getTime()) {\n\t\t\t\t\t\tdata[data.length-1][1]=(res[i].val || 0) * multiplicator;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.push ([eventDate.getTime(),(res[i].val || 0) * multiplicator]);\n\t\t\t\t\t\tlastEventDate=eventDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \t\n            // free memory\n            res = null;\n\t\t\tif (data.length>0 && newMax< data[data.length-1][0])newMax=data[data.length-1][0];\n\t\t\tfor (var i=0;i<data.length;i++){\n\t\t\t\t//console.log(' add point to ' + id + ':' + JSON.stringify(data[i]));\t\n\t\t\t\tchart.series[index].addPoint (data[i],false,false,false,false); \t\t\t\t\n\t\t\t};\t\t\t\t\n        }\n  \t    if (callback) callback(newMax);\n    });\n}\n\n\nfunction loadSeriesRange(chart,oidList, j,mode,start, end,virtualStart,virtualEnd, callback) {\n    j = j || 0;\n    if (j >= oidList.length) {\n        return callback && callback();\n    } else {\n\t\tif (oidList[j].historyOID && oidList[j].instance) {\n\t\t\treadOneLineRange(chart,oidList[j].historyOID,oidList[j].instance,oidList[j].currentOID,oidList[j].multiplicator,j,mode,start,end,virtualStart,virtualEnd, function () {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tloadSeriesRange(chart,oidList, j+1,mode,start, end,virtualStart,virtualEnd, callback);\n\t\t\t\t}, 10);\n\t\t\t});\n\t\t}else{\n            setTimeout(function () {\n\t\t\t\t\tloadSeriesRange(chart,oidList, j+1,mode,start, end,virtualStart,virtualEnd, callback);\n            }, 10);\t\t\t\n\t\t}\n    }\n}\n\n\nfunction loadAndAddSeriesRange(chart,oidList, j,mode,start, end, newMax, callback) {\n    j = j || 0;\n    if (j >= oidList.length) {\n        return callback && callback(newMax);\n    } else {\n\t\tif (oidList[j].historyOID && oidList[j].instance) {\n\t\t\treadAndAddOneLineRange(chart,oidList[j].historyOID,oidList[j].instance,oidList[j].multiplicator,j,mode,start,end,newMax, function (newMax) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tloadAndAddSeriesRange(chart,oidList, j+1,mode,start, end,newMax, callback);\n\t\t\t\t}, 10);\n\t\t\t});\n\t\t}else{\n            setTimeout(function () {\n\t\t\t\t\tloadAndAddSeriesRange(chart,oidList, j+1,mode,start, end,newMax, callback);\n            }, 10);\t\t\t\n\t\t}\n    }\n}\n\nfunction normalizeDate (date,mode) {\n\tif (mode=='hour') {\n\t\tdate.setMilliseconds(0);\n\t\tdate.setSeconds(0);\t\n\t\tdate.setMinutes(0);\n\t} else if (mode=='day') {\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\t\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(0);\t\t\n\t} else if (mode=='week') {\n\t\tvar day = date.getDay();\n\t\tvar diff = date.getDate() - day + (day == 0 ? -6:1);\n\t\tdate=new Date(date.setDate(diff));\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\t\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(0);\t\t\t\t\n\t\treturn date;\n\t} else if (mode=='month') {\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\t\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(0);\t\t\n\t\tdate.setUTCDate(1);\n\t} else if (mode=='year') {\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\t\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(0);\t\t\n\t\tdate.setUTCDate(1);\n\t\tdate.setUTCMonth(0);\n\t};\n\treturn date;\n}\n\n\n\n\t\n\t\n\t\n \tvar minDate=new Date (2020,0,1).getTime();\n(function(H) {\n    H.Chart.prototype.pan = function(e, panning) {\n        var chart = this,\n            hoverPoints = chart.hoverPoints,\n            panningOptions, chartOptions = chart.options.chart,\n            doRedraw, type;\n        if (typeof panning === 'object') {\n            panningOptions = panning;\n        } else {\n            panningOptions = {\n                enabled: panning,\n                type: 'x'\n            };\n        }\n        if (chartOptions && chartOptions.panning) {\n            chartOptions.panning = panningOptions;\n        }\n        type = panningOptions.type;\n        H.fireEvent(this, 'pan', {\n            originalEvent: e\n        }, function() {\n            // remove active points for shared tooltip\n            if (hoverPoints) {\n                hoverPoints.forEach(function(point) {\n                    point.setState();\n                });\n            }\n            // panning axis mapping\n            var xy = [1]; // x\n            if (type === 'xy') {\n                xy = [1, 0];\n            } else if (type === 'y') {\n                xy = [0];\n            }\n            xy.forEach(function(isX) {\n                var axis = chart[isX ? 'xAxis' : 'yAxis'][0],\n                    axisOpt = axis.options,\n                    horiz = axis.horiz,\n                    mousePos = e[horiz ? 'chartX' : 'chartY'],\n                    mouseDown = horiz ? 'mouseDownX' : 'mouseDownY',\n                    startPos = chart[mouseDown],\n                    halfPointRange = (axis.pointRange || 0) / 2,\n                    pointRangeDirection = (axis.reversed && !chart.inverted) ||\n                    (!axis.reversed && chart.inverted) ?\n                    -1 :\n                    1,\n                    extremes = axis.getExtremes(),\n                    panMin = axis.toValue(startPos - mousePos, true) +\n                    halfPointRange * pointRangeDirection,\n                    panMax = axis.toValue(startPos + axis.len - mousePos, true) -\n                    halfPointRange * pointRangeDirection,\n                    flipped = panMax < panMin,\n                    newMin = flipped ? panMax : panMin,\n                    newMax = flipped ? panMin : panMax,\n                    \n                    // CHANGE\n                    \n                    paddedMin = minDate,\n                    paddedMax = new Date().getTime(),\n                            \n                    // CHANGE\n                            \n                    spill;\n\n                // It is not necessary to calculate extremes on ordinal axis,\n                // because the are already calculated, so we don't want to\n                // override them.\n                if (!axisOpt.ordinal) {\n                    // If the new range spills over, either to the min or max,\n                    // adjust the new range.\n                    if (isX) {\n                        spill = paddedMin - newMin;\n                        if (spill > 0) {\n                            newMax += spill;\n                            newMin = paddedMin;\n                        }\n                        spill = newMax - paddedMax;\n                        if (spill > 0) {\n                            newMax = paddedMax;\n                            newMin -= spill;\n                        }\n                    }\n                    // Set new extremes if they are actually new\n                    if (axis.series.length &&\n                        newMin !== extremes.min &&\n                        newMax !== extremes.max &&\n                        isX ? true : (axis.panningState &&\n                            newMin >= axis.panningState\n                            .startMin &&\n                            newMax <= axis.panningState\n                            .startMax //\n                        )) {\n                        axis.setExtremes(newMin, newMax, false, false, {\n                            trigger: 'pan'\n                        });\n                        doRedraw = true;\n                    }\n                    // set new reference for next run:\n                    chart[mouseDown] = mousePos;\n                }\n            });\n            if (doRedraw) {\n                chart.redraw(false);\n            }\n            H.css(chart.container, {\n                cursor: 'move'\n            });\n        });\n\t\t\t\t\n    };\n\t\n\t/**\n\t * Zoom into a given portion of the chart given by axis coordinates.\n\t *\n\t * @private\n\t * @function Highcharts.Chart#zoom\n\t * @param {Highcharts.SelectEventObject} event\n\t */\n\tH.Chart.prototype.zoom = function (event) {\n\t\tconsole.log (\"Chart Zoom handler \");\n\t\tvar chart = this,\n\t\t\tpointer = chart.pointer,\n\t\t\tmouseDownPos = chart.inverted ?\n\t\t\t\tpointer.mouseDownX : pointer.mouseDownY;\n\t\tvar displayButton = false,\n\t\t\thasZoomed;\n\t\t// If zoom is called with no arguments, reset the axes\n\t\tif (!event || event.resetSelection) {\n\t\t\tchart.axes.forEach(function (axis) {\n\t\t\t\thasZoomed = axis.zoom();\n\t\t\t});\n\t\t\tpointer.initiated = false; // #6804\n\t\t}\n\t\telse { // else, zoom in on all axes\n\t\t\tevent.xAxis.concat(event.yAxis).forEach(function (axisData) {\n\t\t\t\tvar axis = axisData.axis,\n\t\t\t\t\taxisStartPos = chart.inverted ? axis.left : axis.top,\n\t\t\t\t\taxisEndPos = chart.inverted ?\n\t\t\t\t\t\taxisStartPos + axis.width : axisStartPos + axis.height,\n\t\t\t\t\tisXAxis = axis.isXAxis;\n\t\t\t\tvar isWithinPane = false;\n\t\t\t\t// Check if zoomed area is within the pane (#1289).\n\t\t\t\t// In case of multiple panes only one pane should be zoomed.\n\t\t\t\tif ((!isXAxis &&\n\t\t\t\t\tmouseDownPos >= axisStartPos &&\n\t\t\t\t\tmouseDownPos <= axisEndPos) ||\n\t\t\t\t\tisXAxis ||\n\t\t\t\t\t!H.defined(mouseDownPos)) {\n\t\t\t\t\tisWithinPane = true;\n\t\t\t\t}\n\t\t\t\t// don't zoom more than minRange\n\t\t\t\tif (pointer[isXAxis ? 'zoomX' : 'zoomY'] && isWithinPane) {\n\t\t\t\t\thasZoomed = axis.zoom(axisData.min, axisData.max);\n\t\t\t\t\tif (axis.displayBtn) {\n\t\t\t\t\t\tdisplayButton = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// Show or hide the Reset zoom button\n\t\tvar resetZoomButton = chart.resetZoomButton;\n\t\tif (displayButton && !resetZoomButton) {\n\t\t\tchart.showResetZoom();\n\t\t}\n\t\telse if (!displayButton && H.isObject(resetZoomButton)) {\n\t\t\tchart.resetZoomButton = resetZoomButton.destroy();\n\t\t}\n\t\t// Redraw\n\t\tif (hasZoomed) {\n\t\t\tchart.redraw(H.pick(chart.options.chart.animation, event && event.animation, chart.pointCount < 100));\n\t\t}\n\t};\n\t\t\n\t\t\n\tH.Axis.prototype.zoom = function (newMin, newMax) {\n\t\tconsole.log (\"Axis Zoom handler min:\"+ new Date(newMin) + \" max:\" + new Date (newMax));\n\n\t\tvar axis = this,\n\t\t\tdataMin = this.dataMin,\n\t\t\tdataMax = this.dataMax,\n\t\t\toptions = this.options,\n\t\t\tmin = Math.min(dataMin,\n\t\t\tH.pick(options.min,\n\t\t\tdataMin)),\n\t\t\tmax = Math.max(dataMax,\n\t\t\tH.pick(options.max,\n\t\t\tdataMax)),\n\t\t\tevt = {\n\t\t\t\tnewMin: newMin,\n\t\t\t\tnewMax: newMax\n\t\t\t};\n\t\tH.fireEvent(this, 'zoom', evt, function (e) {\n\t\t\t// Use e.newMin and e.newMax - event handlers may have altered them\n\t\t\tvar newMin = e.newMin,\n\t\t\t\tnewMax = e.newMax;\n\t\t\tif (newMin !== axis.min || newMax !== axis.max) { // #5790\n\t\t\t\t// Prevent pinch zooming out of range. Check for defined is for\n\t\t\t\t// #1946. #1734.\n\t\t\t\tif (!axis.allowZoomOutside) {\n\t\t\t\t\t// #6014, sometimes newMax will be smaller than min (or\n\t\t\t\t\t// newMin will be larger than max).\n\t\t\t\t\tif (H.defined(dataMin)) {\n\t\t\t\t\t\tif (newMin < min) {\n\t\t\t\t\t\t\tnewMin = min;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (newMin > max) {\n\t\t\t\t\t\t\tnewMin = max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (H.defined(dataMax)) {\n\t\t\t\t\t\tif (newMax < min) {\n\t\t\t\t\t\t\tnewMax = min;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (newMax > max) {\n\t\t\t\t\t\t\tnewMax = max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// In full view, displaying the reset zoom button is not\n\t\t\t\t// required\n\t\t\t\t//axis.displayBtn = (typeof newMin !== 'undefined' ||\n\t\t\t\t//\ttypeof newMax !== 'undefined');\n\t\t\t\taxis.displayBtn = false;\n\t\t\t\t// Do it\n\t\t\t\taxis.setExtremes(newMin, newMax, false, void 0, { trigger: 'zoom' });\n\t\t\t}\n\t\t\te.zoomed = true;\n\t\t});\n\t\treturn evt.zoomed;\n\t};\n\t\t\n\t/**\n\t * Handle touch events with two touches\n\t * @private\n\t * @function Highcharts.Pointer#pinch\n\t */\n\tH.Pointer.prototype.pinch = function (e) {\n\t\tconsole.log (\"Pointer pinch handler \");\n\t\n\t\tvar self = this,\n\t\t\tchart = self.chart,\n\t\t\tpinchDown = self.pinchDown,\n\t\t\ttouches = (e.touches || []),\n\t\t\ttouchesLength = touches.length,\n\t\t\tlastValidTouch = self.lastValidTouch,\n\t\t\thasZoom = self.hasZoom,\n\t\t\ttransform = {},\n\t\t\tfireClickEvent = touchesLength === 1 && ((self.inClass(e.target, 'highcharts-tracker') &&\n\t\t\t\tchart.runTrackerClick) ||\n\t\t\t\tself.runChartClick),\n\t\t\tclip = {};\n\t\tvar selectionMarker = self.selectionMarker;\n\t\t// Don't initiate panning until the user has pinched. This prevents us\n\t\t// from blocking page scrolling as users scroll down a long page\n\t\t// (#4210).\n\t\tif (touchesLength > 1) {\n\t\t\tself.initiated = true;\n\t\t}\n\t\telse if (touchesLength === 1 && this.followTouchMove) {\n\t\t\t// #16119: Prevent blocking scroll when single-finger panning is\n\t\t\t// not enabled\n\t\t\tself.initiated = false;\n\t\t}\n\t\t// On touch devices, only proceed to trigger click if a handler is\n\t\t// defined\n\t\tif (hasZoom &&\n\t\t\tself.initiated &&\n\t\t\t!fireClickEvent &&\n\t\t\te.cancelable !== false) {\n\t\t\te.preventDefault();\n\t\t}\n\t\t// Normalize each touch\n\t\t[].map.call(touches, function (e) {\n\t\t\treturn self.normalize(e);\n\t\t});\n\t\t// Register the touch start position\n\t\tif (e.type === 'touchstart') {\n\t\t\t[].forEach.call(touches, function (e, i) {\n\t\t\t\tpinchDown[i] = { chartX: e.chartX, chartY: e.chartY };\n\t\t\t});\n\t\t\tlastValidTouch.x = [pinchDown[0].chartX, pinchDown[1] &&\n\t\t\t\t\tpinchDown[1].chartX];\n\t\t\tlastValidTouch.y = [pinchDown[0].chartY, pinchDown[1] &&\n\t\t\t\t\tpinchDown[1].chartY];\n\t\t\t// Identify the data bounds in pixels\n\t\t\tchart.axes.forEach(function (axis) {\n\t\t\t\tif (axis.zoomEnabled) {\n\t\t\t\t\tvar bounds = chart.bounds[axis.horiz ? 'h' : 'v'],\n\t\t\t\t\t\tminPixelPadding = axis.minPixelPadding,\n\t\t\t\t\t\tmin = axis.toPixels(Math.min(H.pick(axis.options.min,\n\t\t\t\t\t\taxis.dataMin),\n\t\t\t\t\t\taxis.dataMin,minDate)),\n\t\t\t\t\t\tmax = axis.toPixels(Math.max(H.pick(axis.options.max,\n\t\t\t\t\t\taxis.dataMax),\n\t\t\t\t\t\taxis.dataMax,new Date().getTime())),\n\t\t\t\t\t\tabsMin = Math.min(min,\n\t\t\t\t\t\tmax),\n\t\t\t\t\t\tabsMax = Math.max(min,\n\t\t\t\t\t\tmax);\n\t\t\t\t\t// Store the bounds for use in the touchmove handler\n\t\t\t\t\tbounds.min = Math.min(axis.pos, absMin - minPixelPadding);\n\t\t\t\t\tbounds.max = Math.max(axis.pos + axis.len, absMax + minPixelPadding);\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.res = true; // reset on next move\n\t\t\t// Optionally move the tooltip on touchmove\n\t\t}\n\t\telse if (self.followTouchMove && touchesLength === 1) {\n\t\t\tthis.runPointActions(self.normalize(e));\n\t\t\t// Event type is touchmove, handle panning and pinching\n\t\t}\n\t\telse if (pinchDown.length) { // can be 0 when releasing, if touchend\n\t\t\t// fires first\n\t\t\tH.fireEvent(chart, 'touchpan', { originalEvent: e }, function () {\n\t\t\t\t// Set the marker\n\t\t\t\tif (!selectionMarker) {\n\t\t\t\t\t// @todo It's a mock object, so maybe we need a separate\n\t\t\t\t\t// interface\n\t\t\t\t\tself.selectionMarker = selectionMarker = extend({\n\t\t\t\t\t\tdestroy: H.noop,\n\t\t\t\t\t\ttouch: true\n\t\t\t\t\t}, chart.plotBox);\n\t\t\t\t}\n\t\t\t\tself.pinchTranslate(pinchDown, touches, transform, selectionMarker, clip, lastValidTouch);\n\t\t\t\tself.hasPinched = hasZoom;\n\t\t\t\t// Scale and translate the groups to provide visual feedback\n\t\t\t\t// during pinching\n\t\t\t\tself.scaleGroups(transform, clip);\n\t\t\t});\n\t\t\tif (self.res) {\n\t\t\t\tself.res = false;\n\t\t\t\tthis.reset(false, 0);\n\t\t\t}\n\t\t}\n\t};\n\t\n}(Highcharts));\n \n\nvar types = ['DOMMouseScroll', 'mousewheel'];\n\n$.event.special.mousewheel = {\n    setup: function() {\n        if ( this.addEventListener ) {\n            for ( var i=types.length; i; ) {\n                this.addEventListener( types[--i], handler, false );\n            }\n        } else {\n            this.onmousewheel = handler;\n        }\n    },\n    \n    teardown: function() {\n        if ( this.removeEventListener ) {\n            for ( var i=types.length; i; ) {\n                this.removeEventListener( types[--i], handler, false );\n            }\n        } else {\n            this.onmousewheel = null;\n        }\n    }\n};\n\n$.fn.extend({\n    mousewheel: function(fn) {\n        return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n    },\n    \n    unmousewheel: function(fn) {\n        return this.unbind(\"mousewheel\", fn);\n    }\n});\n\n\nfunction handler(event) {\n    var orgEvent = event || window.event, args = [].slice.call( arguments, 1 ), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;\n    event = $.event.fix(orgEvent);\n    event.type = \"mousewheel\";\n    \n    // Old school scrollwheel delta\n    if ( event.wheelDelta ) { delta = event.wheelDelta/120; }\n    if ( event.detail     ) { delta = -event.detail/3; }\n    \n    // New school multidimensional scroll (touchpads) deltas\n    deltaY = delta;\n    \n    // Gecko\n    if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n        deltaY = 0;\n        deltaX = -1*delta;\n    }\n    \n    // Webkit\n    if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY/120; }\n    if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = -1*orgEvent.wheelDeltaX/120; }\n    \n    // Add event and delta to the front of the arguments\n    args.unshift(event, delta, deltaX, deltaY);\n    \n    return $.event.handle.apply(this, args);\n}\n  \n \n\n\t  \n\tvis.binds.photovoltaikcharts = {\n\t\tversion: \"1.0.1\",\n\t\tupdateIntervalHandler:[],\n\t\tdelayedRefreshHandler:[],\n\t\t\n\t\tshowVersion: function () {\n\t\t\tif (vis.binds.photovoltaikcharts.version) {\n\t\t\t\tconsole.log('Version vis-photovoltaikcharts: ' + vis.binds.photovoltaikcharts.version);\n\t\t\t\tvis.binds.photovoltaikcharts.version = null;\n\t\t\t}\n\t\t},\n\t\t\n\t\thighchartsOptions:{\n\t\t\t\tlang: {\n\t\t\t\t\tmonths: [\n\t\t\t\t\t\t'Januar', 'Februar', 'März', 'April',\n\t\t\t\t\t\t'Mai', 'Juni', 'Juli', 'August',\n\t\t\t\t\t\t'September', 'Oktober', 'November', 'Dezember'\n\t\t\t\t\t],\n\t\t\t\t\tweekdays: [\n\t\t\t\t\t\t'Sonntag', 'Montag', 'Dienstag', 'Mittwoch',\n\t\t\t\t\t\t'Donnerstag', 'Freitag', 'Samstag'\n\t\t\t\t\t],\n\t\t\t\t\tshortWeekdays:[\n\t\t\t\t\t\t'So', 'Mo', 'Di', 'Mi',\n\t\t\t\t\t\t'Do', 'Fr', 'Sa'\n\t\t\t\t\t],\n\t\t\t\t\tshortMonths:[\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\",\n\t\t\t\t\t\t\t\t\t\t\t\"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"],\n\t\t\t\t\tcontextButtonTitle: 'Kontextmenü',\n\t\t\t\t\tdecimalPoint:',',\n\t\t\t\t\tdownloadCSV:'CSV-Datei herunterladen',\n\t\t\t\t\tdownloadJPEG:'JPG-Datei herunterladen',\n\t\t\t\t\tdownloadPDF:'PDF-Datei herunterladen',\n\t\t\t\t\tdownloadPNG:'PNG-Datei herunterladen',\n\t\t\t\t\tdownloadSVG:'SVG-Datei herunterladen',\n\t\t\t\t\tdownloadXLS:'XLS-Datei herunterladen',\n\t\t\t\t\texitFullscreen:'Vollbildanzeige beenden',\n\t\t\t\t\thideData: 'Datentabellen ausblenden',\n\t\t\t\t\tloading:'Laden...',\n\t\t\t\t\tnoData:'Keine Daten',\n\t\t\t\t\tnumericSymbols:[\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"],\n\t\t\t\t\tprintChart:'Diagramm drucken',\n\t\t\t\t\tresetZoom: 'Zoom zurücksetzen',\n\t\t\t\t\tresetZoomTitle: 'Zoom auf 1:1 zurücksetzen',\n\t\t\t\t\tviewData: 'Datentabelle anzeigen',\n\t\t\t\t\tviewFullscreen:'Als Vollbild anzeigen',\n\t\t\t\t\texportData:{\n\t\t\t\t\t\tannotationHeader:'Anmerkungen',\n\t\t\t\t\t  categoryDatetimeHeader:'Datum/Zeit',\n\t\t\t\t\t  categoryHeader:'Kategorie'\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\thighchartsSeriesUnits:[[\n\t\t\t\t\t\t\t\t\t'second',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'minute',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'hour',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'day',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'week',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'month',\n\t\t\t\t\t\t\t\t\t[1, 3, 6]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'year',\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t]],\n\t\t\t\t\t\t\t\t\n\t\thighchartsDateTimeLabelFormats:{\n\t\t\t\t\t\tmillisecond: '%H:%M:%S.%L',\n\t\t\t\t\t\tsecond: '%H:%M:%S',\n\t\t\t\t\t\tminute: '%H:%M',\n\t\t\t\t\t\thour: '%H:%M',\n\t\t\t\t\t\tday: '%e. %b',\n\t\t\t\t\t\tweek: '%e. %b',\n\t\t\t\t\t\tmonth: '%b \\'%y',\n\t\t\t\t\t\tyear: '%Y'      \n\t\t\t\t\t},\n\t\tscrollspeed:0.3,\n\t\t\t\t\t\t\t\t\n\t\tcreateMonthlyWidget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\n\t\t\tvar fbobj=this;\n\t\t\tconsole.log(' vis-photovoltaikcharts: Create Monthly Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createMonthlyWidget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\tif (data.target) {\n\t\t\t\ttargetArray =data.target.split (',');\n\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\toidList =[\n\t\t\t\t\t\t\t{id:0, historyOID:data.series1historyoid,instance:data.instance1,currentOID:data.series1currentoid,multiplicator:parseFloat(data.multiplicator1) || 1 },\n\t\t\t\t\t\t\t{id:1, historyOID:data.series2historyoid,instance:data.instance2,currentOID:data.series2currentoid,multiplicator:parseFloat(data.multiplicator2) || 1 }\n\t\t\t\t\t\t ];\n\n\t\t\tvar today = new Date();\n\t\t\tvar year = today.getFullYear();\n\t\t\tvar targetData = [[0,0,0],[0.8,0,0],[1.7,0,0],[2.6,0,0],[3.5,0,0],[4.7,0,0],[5.7,0,0],[6.7,0,0],[7.6,0,0],[8.6,0,0],[9.5,0,0],[10.4,0,0],[11.4,0,0]];\n\t\t\tvar categories = [year.toString(), (year-1).toString(), (year-2).toString()];\n\t\t\t\n\t\t\tseriesData=[{\n\t\t\t\t\tname: (data.series1label || 'E') + ' ' + (year-2).toString().substr(-2),\n\t\t\t\t\tdata: [0, 0, 0, 0, 0,0, 0, 0, 0,0, 0, 0],\n\t\t\t\t\tstack: 2,\n\t\t\t\t\tcolor: data.year3color2 ||'#2f7ed8',\n\t\t\t\t\topacity: 0.9       \n\n\t\t\t\t}, {\n\t\t\t\t\tname: (data.series2label || 'V') + ' ' + (year-2).toString().substr(-2),\n\t\t\t\t\tdata: [0, 0, 0, 0, 0,0, 0, 0, 0,0, 0, 0],\n\t\t\t\t\tstack: 2,\n\t\t\t\t\tcolor: data.year3color1 || '#0d233a',\n\t\t\t\t\topacity: 0.9\n\n\t\t\t\t},{\n\t\t\t\t\tname: (data.series1label || 'E') + ' ' + (year-1).toString().substr(-2),\n\t\t\t\t\tdata: [0, 0, 0, 0, 0,0, 0, 0, 0,0, 0, 0],\n\t\t\t\t\tstack: 1,\n\t\t\t\t\tcolor: data.year2color2 ||'#FE642E',\n\t\t\t\t\tshowInLegend: true,\n\t\t\t\t\topacity: 0.9\n\t\t\t\t}, {\n\t\t\t\t\tname: (data.series2label || 'V') + ' ' + (year-1).toString().substr(-2),\n\t\t\t\t\tdata: [0, 0, 0, 0, 0,0, 0, 0, 0,0, 0, 0],\n\t\t\t\t\tstack: 1,\n\t\t\t\t\tcolor: data.year2color1 || '#FF4000',\n\t\t\t\t\tshowInLegend: true,\n\t\t\t\t\topacity: 0.9\n\n\t\t\t\t},{\n\t\t\t\t\tname: (data.series1label || 'E') + ' ' + year.toString().substr(-2),\n\t\t\t\t\tdata: [0, 0, 0, 0, 0,0, 0, 0, 0,0, 0, 0],\n\t\t\t\t\tstack: 0,\n\t\t\t\t\tcolor: data.year1color2 || '#F7D358',\n\t\t\t\t\tshowInLegend: true,\n\t\t\t\t\topacity: 0.9\n\n\t\t\t\t}, {\n\t\t\t\t\tname: (data.series2label || 'V') + ' ' + year.toString().substr(-2),\n\t\t\t\t\tdata: [0, 0, 0, 0, 0,0, 0, 0, 0,0, 0, 0],\n\t\t\t\t\tstack: 0,\n\t\t\t\t\tcolor: data.year1color1 || '#DBA901',\n\t\t\t\t\tshowInLegend: true,\n\t\t\t\t\topacity: 0.9\n\t\t\t\t}];\n\t\t\tif (Array.isArray(targetArray)) {\n\t\t\t\tfor (var index = 0; index < targetArray.length; index++) {\n\t\t\t\t\ttargetData [index][1]=parseFloat(targetArray[index]);\n\t\t\t\t}\t\t\n\t\t\t\t\n\t\t\t\tseriesData.push (\n\t\t\t\t{\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tlineWidth:2,\n\t\t\t\t\t\t\tname: data.targetName || 'Target',\n\t\t\t\t\t\t\tstep: 'left',\n\t\t\t\t\t\t\tdata: targetData,\n\t\t\t\t\t\t\tcolor: '#A4A4A4',\n\t\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\t\tenabled:false\n\t\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (vis.language === 'de') Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\t_readData(seriesData,oidList,function () {\n\t\t\t\t\tvar unit=data.unit;\n\t\t\t\t\tchart = Highcharts.chart(divId + widgetID, {\n\t\t\t\t\tchart: {\n\t\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\t\ttype: 'column',\n\t\t\t\t\t\t\t\toptions3d: {\n\t\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\t\talpha: data.alpha || 8,\n\t\t\t\t\t\t\t\t\tbeta: data.beta || 8,\n\t\t\t\t\t\t\t\t\tdepth: data.depth || 200,\n\t\t\t\t\t\t\t\t\tviewDistance: data.viewDistance || 5,\n\t\t\t\t\t\t\t\t\tframe: {\n\t\t\t\t\t\t\t\t\t\tbottom: {\n\t\t\t\t\t\t\t\t\t\tsize: 1,\n\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,0.05)'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\ttext: data.title\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\txAxis: {\n\t\t\t\t\t\t\t\t\tcategories: months [systemLang]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tyAxis: {\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\ttext: unit\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tzAxis: {\n\t\t\t\t\t\t\t  min: 0,\n\t\t\t\t\t\t\t  max: 2,\n\t\t\t\t\t\t\t  labels: {\n\t\t\t\t\t\t\t\ty: 5,\n\t\t\t\t\t\t\t\trotation: 18\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\tcategories: categories\n\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t  plotOptions: {\n\t\t\t\t\t\t\t\t\tcolumn: {\n\t\t\t\t\t\t\t\t\t\tstacking: 'normal'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  series: {\n\t\t\t\t\t\t\tgroupZPadding: 10,\n\t\t\t\t\t\t\tdepth: 50,\n\t\t\t\t\t\t\tgroupPadding: 0.05,\n\t\t\t\t\t\t\tgrouping: false,\n\t\t\t\t\t\t  }\n\t\t\t\t\t  },\n\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\t\t},\n\t\t\t\t\t\texporting: {\n\t\t\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t\t\t},\n\t\t\t\t\t  \n\t\t\t\t\t\ttooltip: {\n\t\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\t\tif (this.point.stackTotal){\n\t\t\t\t\t\t\t\t\treturn '<b>' + this.x + ' ' + this.series.chart.zAxis[0].options.categories[this.series.userOptions.stack] +  '</b><br/>' +\n\t\t\t\t\t\t\t\t\t\tthis.series.name + ': ' + this.y + '<br/>' +\n\t\t\t\t\t\t\t\t\t\t(data.stacklabel || 'Erzeugung:') + ' ' + this.point.stackTotal +\n\t\t\t\t\t\t\t\t\t\t(Array.isArray(targetArray)?'<br/>' +(data.targetName || 'Target') + ': ' + targetArray[this.point.x]:'')\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn '<b>' + this.x + '</b><br/>' +\n\t\t\t\t\t\t\t\t\t\tthis.series.name + ': ' + this.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseries: seriesData,\n\t\t\t\t\t\t\n\t\t\t\t\t\tcredits: {\n\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t}\n\t\t\t\t   });\t\t\t\t\t\t\n\n\t\t\t },0,1,(new Date(year-2, 0, 1)).getTime());\n\t\t\t// subscribe on updates of value\n\t\t\tfunction onChangeSeries1(e, newVal, oldVal) {\n\t\t\t\tif (!chart) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchart.series[4].data[(new Date ()).getMonth()].update((parseFloat(newVal) || 0) * oidList[0].multiplicator); \n\t\t\t};\n\n\t\t\tfunction onChangeSeries2(e, newVal, oldVal) {\n\t\t\t\tif (!chart) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchart.series[5].data[(new Date ()).getMonth()].update((parseFloat(newVal) || 0) * oidList[1].multiplicator); \n\t\t\t};\n\n\n\n\t\t\tif (data.series1currentoid) {\n\t\t\t\tvis.states.bind(data.series1currentoid + '.val', onChangeSeries1);\n\t\t\t\t$div.data('bound', [data.series1currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries1);\n\t\t\t}\t\t\t\n\t\t\tif (data.series2currentoid) {\n\t\t\t\tvis.states.bind(data.series2currentoid + '.val', onChangeSeries2);\n\t\t\t\t$div.data('bound', [data.series2currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries2);\n\t\t\t}\t\t\t\n\t\t},\n\n\t\tcreateYearlyWidget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\n\t\t\tvar fbobj=this;\n\t\t\tconsole.log(' vis-photovoltaikcharts: Create Yearly Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createYearlyWidget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\t\n\t\t\toidList =[\n\t\t\t\t\t\t\t{id:0, historyOID:data.series1historyoid,instance:data.instance1,currentOID:data.series1currentoid,multiplicator:parseFloat(data.multiplicator1) || 1 },\n\t\t\t\t\t\t\t{id:1, historyOID:data.series2historyoid,instance:data.instance2,currentOID:data.series2currentoid,multiplicator:parseFloat(data.multiplicator2) || 1 },\n\t\t\t\t\t\t\t{id:2, historyOID:data.series3historyoid,instance:data.instance3,currentOID:data.series3currentoid,multiplicator:parseFloat(data.multiplicator3) || 1 },\n\t\t\t\t\t\t\t{id:3, historyOID:data.series4historyoid,instance:data.instance4,currentOID:data.series4currentoid,multiplicator:parseFloat(data.multiplicator4) || 1 },\n\t\t\t\t\t\t\t{id:4, historyOID:data.series5historyoid,instance:data.instance5,currentOID:data.series5currentoid,multiplicator:parseFloat(data.multiplicator5) || 1 }\n\t\t\t\t\t\t ];\n\n\t\t\tvar today = new Date();\n\t\t\tvar year = today.getFullYear();\n\t\t\tvar categories = [year-4,year-3,year-2,year-1,year];\n\t\t\t\n\t\t\tseriesData=[{\n\t\t\t\t\tname: data.series1label,\n\t\t\t\t\tdata: [0, 0, 0, 0, 0],\n\t\t\t\t\tcolor: data.series1color || '#2f7ed8',\n\t\t\t\t\topacity: 0.9       \n\n\t\t\t\t}, {\n\t\t\t\t\tname: data.series2label,\n\t\t\t\t\tdata: [0, 0, 0, 0, 0],\n\t\t\t\t\tcolor: data.series2color || '#0d233a',\n\t\t\t\t\topacity: 0.9\n\n\t\t\t\t}, {\n\t\t\t\t\tname: data.series3label,\n\t\t\t\t\tdata: [0, 0, 0, 0, 0],\n\t\t\t\t\tcolor: data.series3color || '#33FF3B',\n\t\t\t\t\topacity: 0.9\n\n\t\t\t\t}, {\n\t\t\t\t\tname: data.series4label,\n\t\t\t\t\tdata: [0, 0, 0, 0, 0],\n\t\t\t\t\tcolor: data.series4color || '#FF8F33',\n\t\t\t\t\topacity: 0.9\n\n\t\t\t\t}, {\n\t\t\t\t\tname: data.series5label,\n\t\t\t\t\tdata: [0, 0, 0, 0, 0],\n\t\t\t\t\tcolor: data.series5color || '#F433FF',\n\t\t\t\t\topacity: 0.9\n\n\t\t\t\t}\n\t\t\t\t];\n\t\t\tvar plotLines=[];\n\t\t\tif (data.target) {\n\t\t\t\tplotLines.push ({color:\"#33FF50\",dashStyle:\"Solid\",label:data.targetName || 'Target',value:parseFloat(data.target),width:2});\n\t\t\t}\n\n\t\t\t_readData(seriesData,oidList,function () {\n\t\t\t\tif (vis.language === 'de') Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\t\tvar unit=data.unit;\n\t\t\t\tchart = Highcharts.chart(divId + widgetID, {\n\t\t\t\t\tchart: {\n\t\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\t\ttype: 'column',\n\t\t\t\t\t\t\t\toptions3d: {\n\t\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\t\talpha: data.alpha || 8,\n\t\t\t\t\t\t\t\t\tbeta: data.beta || 8,\n\t\t\t\t\t\t\t\t\tdepth: data.depth || 50,\n\t\t\t\t\t\t\t\t\tviewDistance: data.viewDistance || 5,\n\t\t\t\t\t\t\t\t\tframe: {\n\t\t\t\t\t\t\t\t\t\tbottom: {\n\t\t\t\t\t\t\t\t\t\tsize: 1,\n\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,0.05)'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\ttext: data.title\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\txAxis: {\n\t\t\t\t\t\t\t\t\tcategories: categories\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tyAxis: {\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\ttext: unit\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tplotLines:plotLines\n\n\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t  series: {\n\t\t\t\t\t\t\tgroupZPadding: 10,\n\t\t\t\t\t\t\tdepth: 50,\n\t\t\t\t\t\t\tgroupPadding: 0.05,\n\t\t\t\t\t\t\tgrouping: false,\n\t\t\t\t\t\t  },\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\t},\n\t\t\t\t\texporting: {\n\t\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t\t},\n\t\t\t\t\t\t  \n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\tif (this.point.stackTotal){\n\t\t\t\t\t\t\t\treturn '<b>' + this.x + ' ' + this.series.chart.zAxis[0].options.categories[this.series.userOptions.stack] +  '</b><br/>' +\n\t\t\t\t\t\t\t\t\tthis.series.name + ': ' + this.y + '<br/>' +\n\t\t\t\t\t\t\t\t\t(data.stacklabel || 'Erzeugung:') + ' ' + this.point.stackTotal +\n\t\t\t\t\t\t\t\t\t(Array.isArray(targetArray)?'<br/>' +(data.targetName || 'Target') + ': ' + targetArray[this.point.x]:'')\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '<b>' + this.x + '</b><br/>' +\n\t\t\t\t\t\t\t\t\tthis.series.name + ': ' + this.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\t\t\t\t\t\t\n\t\t\t\t\tseries: seriesData,\n\t\t\t\t\t\n\t\t\t\t\tcredits: {\n\t\t\t\t\t\tenabled: false\n\t\t\t\t\t}\n\t\t\t\t});\t\t\t\t\t\t\n\n\t\t\t },0,2,(new Date(year-4, 0, 1)).getTime());\n\t\t\t// subscribe on updates of value\n\t\t\tfunction onChangeSeries1(e, newVal, oldVal) {\n\t\t\t\tif (!chart) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchart.series[0].data[4].update((parseFloat(newVal) || 0) * oidList[0].multiplicator); \n\t\t\t};\n\n\t\t\tfunction onChangeSeries2(e, newVal, oldVal) {\n\t\t\t\tif (!chart) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchart.series[1].data[4].update((parseFloat(newVal) || 0) * oidList[1].multiplicator); \n\t\t\t};\n\t\t\tfunction onChangeSeries3(e, newVal, oldVal) {\n\t\t\t\tif (!chart) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchart.series[2].data[4].update((parseFloat(newVal) || 0) * oidList[2].multiplicator); \n\t\t\t};\n\t\t\tfunction onChangeSeries4(e, newVal, oldVal) {\n\t\t\t\tif (!chart) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchart.series[3].data[4].update((parseFloat(newVal) || 0) * oidList[3].multiplicator); \n\t\t\t};\n\n\t\t\tfunction onChangeSeries5(e, newVal, oldVal) {\n\t\t\t\tif (!chart) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchart.series[4].data[4].update((parseFloat(newVal) || 0) * oidList[4].multiplicator); \n\t\t\t};\n\n\n\n\t\t\tif (data.series1currentoid) {\n\t\t\t\tvis.states.bind(data.series1currentoid + '.val', onChangeSeries1);\n\t\t\t\t$div.data('bound', [data.series1currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries1);\n\t\t\t}\t\t\t\n\t\t\tif (data.series2currentoid) {\n\t\t\t\tvis.states.bind(data.series2currentoid + '.val', onChangeSeries2);\n\t\t\t\t$div.data('bound', [data.series2currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries2);\n\t\t\t}\t\t\t\n\t\t\tif (data.series3currentoid) {\n\t\t\t\tvis.states.bind(data.series3currentoid + '.val', onChangeSeries3);\n\t\t\t\t$div.data('bound', [data.series3currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries3);\n\t\t\t}\t\t\t\n\t\t\tif (data.series4currentoid) {\n\t\t\t\tvis.states.bind(data.series4currentoid + '.val', onChangeSeries4);\n\t\t\t\t$div.data('bound', [data.series4currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries4);\n\t\t\t}\t\t\t\n\t\t\tif (data.series5currentoid) {\n\t\t\t\tvis.states.bind(data.series5currentoid + '.val', onChangeSeries5);\n\t\t\t\t$div.data('bound', [data.series5currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries5);\n\t\t\t}\t\t\t\n\t\t},\n\t\t\n\t\tcreateTimeseriesWidget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\t\t\tvar fbobj=this;\n\t\t\tvar loadRunning=false;\n\t\t\tvar refreshRequired=false;\n\t\t\tvar lastEvent=null;\n\t\t\tvar loadWaiting=false;\n\t\t\tvar navigationData=[];\n\t\t\tvar zoomlevel ={\"1d\":0,\"3d\":1,\"7d\":2,\"1m\":3,\"3m\":4,\"6m\":5,\"ytd\":6,\"1y\":7,\"all\":8};\n\t\t\t\n\t\t\tconsole.log(' photovoltaikcharts: Create Timeseries Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createTimeseriesWidget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\t\n\t\t\toidList =[];\n\t\t\tseriesData=[];\n\t\t\tvar j=0;\n\t\t\tvar i;\n\t\t\tfor (i=1;i<7;i++){\n\t\t\t\tif (data['series'+ i + 'historyoid'] && data ['instance'+ i ]){\n\t\t\t\t\toidList.push ({id:j, historyOID:data['series'+ i + 'historyoid'],instance:data ['instance'+ i ],multiplicator:parseFloat(data ['multiplicator'+ i ]) || 1,lastX:0 });\n\t\t\t\t\t\n\t\t\t\t\tseriesData.push ({\n\t\t\t\t\t\tname: data['series' + i +'label'] ,\n\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\tcolor: data['series' + i + 'color'] || '#FF5A33',\n\t\t\t\t\t\tlineWidth: data['series' + i + 'linewidth'] || 1,\n\t\t\t\t\t\tfillOpacity: (data['series' + i + 'opacity']? parseFloat(data['series' + i + 'opacity'])/100 : 0.3),\n\t\t\t\t\t\ttype: data['series' + i + 'Type'] || 'areaspline',\n\t\t\t\t\t\tyAxis:(data['series' + i + 'axis']? parseInt(data['series' + i + 'axis']): 0),\n\t\t\t\t\t\tstep: (data['series' + i +'step'] && data['series' + i +'step']!='no'?data['series' + i +'step']: undefined),\n\t\t\t\t\t\tstacking: (data['series' + i +'stacking'] && data['series' + i +'stacking']!='no' ? data['series' + i +'stacking'] :undefined),\n\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstates: {\t\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tlineWidth: data['series' + i + 'hoverlinewidth'] || 1,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpointInterval:10000\n\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\n\t\t\tvar plotLines=[];\n\t\t\tif (data.target) {\n\t\t\t\tplotLines.push ({color:\"#33FF50\",dashStyle:\"Solid\",label:data.targetName || 'Target',value:parseFloat(data.target),width:2});\n\t\t\t}\n\n\t\t\t\n\t\t\tfunction loadSeriesData (start,end,callback) {\n\t\t\t\tconsole.log ('resize chart to ' + new Date (start) + ' - ' + new Date (end));\n\t\t\t\tloadWaiting=false;\n\t\t\t\tif (start && end){\n\t\t\t\t\tloadRunning=true;\n\t\t\t\t\tvar virtualStart=start;\n\t\t\t\t\tvar virtualEnd=end;\n\t\t\t\t\tchart.showLoading();\n\t\t\t\t\twindow.setTimeout(function (){ \n\t\t\t\t\t\tloadSeriesRange(chart,oidList,0,data.normalizeDate,start,end,virtualStart,virtualEnd,function () {\n\t\t\t\t\t\t\tchart.redraw();\n\t\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t\t\tloadRunning=false;\n\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},10);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\n\t\t\t/**\n\t\t\t * Load new data depending on the selected min and max\n\t\t\t */\n\t\t\t\n\t\t\tif (fbobj.delayedRefreshHandler[widgetID]) window.clearInterval(fbobj.delayedRefreshHandler[widgetID]);\t\t\t\t\t\t\n\t\t\tfbobj.delayedRefreshHandler[widgetID]=window.setInterval( function () {\n\t\t\t\tif (loadRunning==false && refreshRequired==true) {\n   \t\t\t\t   refreshRequired=false;\n  \t\t\t\t   console.log ('Process event ' + new Date (lastEvent.min) + ' - ' + new Date (lastEvent.max));\t\t\t\t   \n\t\t\t\t   loadSeriesData (lastEvent.min,lastEvent.max);\n\t\t\t\t   \n\t\t\t\t} \t\n\t\t\t},500);\n\n\n\t\t\tfunction afterSetExtremes(event) {\n\t\t\t\tconsole.log ('afterSetExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t\tif (event.trigger!=undefined){\n\t\t\t\t\tif (!loadRunning) {\n\t\t\t\t\t\tloadSeriesData (event.min,event.max);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent=event;\n\t\t\t\t\t\tconsole.log ('Save event ' + new Date (event.min) + ' - ' + new Date (event.max));\n\n\t\t\t\t\t\trefreshRequired=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (vis.language === 'de')Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\tvar unit = data.unit;\n\t\t\tchart = Highcharts.stockChart(divId + widgetID, {\n\t\t\t\tchart: {\n\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\trenderTo: divId + widgetID,\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tpanKey: 'shift'\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: data.title\n\t\t\t\t},\n\t\t\t\ttime:{\n\t\t\t\t   timezoneOffset:(data.normalizeDate=='no' ||data.normalizeDate=='hour' ? new Date().getTimezoneOffset() : 0 )\n\t\t\t\t},\n\t\t\t\trangeSelector: {\n\t\t\t\t  buttons: [{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1 Tag',\n\t\t\t\t\t\ttitle: '1 Tag anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3 Tage',\n\t\t\t\t\t\ttitle: '3 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 7,\n\t\t\t\t\t\ttext: '7 Tage',\n\t\t\t\t\t\ttitle: '7 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1M',\n\t\t\t\t\t\ttitle: '1 Monat anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3M',\n\t\t\t\t\t\ttitle: '3 Monate anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 6,\n\t\t\t\t\t\ttext: '6M',\n\t\t\t\t\t\ttitle: '6 Monate anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'ytd',\n\t\t\t\t\t\ttext: 'Aktuelles Jahr',\n\t\t\t\t\t\ttitle: 'Aktuelles Jahr anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'year',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1 Jahr',\n\t\t\t\t\t\ttitle: '1 Jahr anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'all',\n\t\t\t\t\t\ttext: 'Alles',\n\t\t\t\t\t\ttitle: 'Alles anzeigen'\n\t\t\t\t\t}],\n\t\t\t\t\tallButtonsEnabled: true,\n\t\t\t\t\tdropdown:'always',\n\t\t\t\t\theight: 10,\n\t\t\t\t\tselected: zoomlevel[data.zoomDefault],\n\t\t\t\t\tinputDateFormat:'%e. %b %Y'\n\t\t\t\t},\n\t\t\t\tnavigator: {\n\t\t\t\t\tadaptToUpdatedData:false,\n\t\t\t\t\theight: 20,\n\t\t\t\t\tmargin: 10,\n\t\t\t\t\tseries: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpointInterval:10000\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t],\n\t\t\t\t\txAxis:{\n\t\t\t\t\t\tordinal: false\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscrollbar: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tafterSetExtremes: afterSetExtremes\n\t\t\t\t\t},\n\t\t\t\t\tdateTimeLabelFormats:  fbobj.highchartsDateTimeLabelFormats,\n\t\t\t\t\toverscroll: 10000,\n\t\t\t\t\tordinal: false\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tyAxis: [{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + ' ' + unit;\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left'\n\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Produktion'\n\t\t\t\t\t},\n\t\t\t\t\theight: (data.chart1Height? data.chart1Height+'%':'48%'),\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\tresize: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t},\n\n\t\t\t\t\tplotLines:plotLines,\n\t\t\t\t\tmin: (data.yAxis1min?parseFloat(data.yAxis1min):undefined),\n\t\t\t\t\tmax: (data.yAxis1max?parseFloat(data.yAxis1max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis1tickamount?data.yAxis1tickamount:undefined),\n\t\t\t\t\tminorTicks: true\n\t\t\n\t\t\t\t},{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + ' ' + unit;\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left'\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Verbrauch'\n\t\t\t\t\t},\n\t\t\t\t\ttop: (data.chart1Height? parseFloat (data.chart1Height) + ((data.chartspacing? parseFloat(data.chartspacing) :4))+ '%': (48 + (data.chartspacing? parseFloat(data.chartspacing) :5))+'%'),\n\t\t\t\t\theight: (data.chart2Height? data.chart2Height+'%':'48%'),\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\tmin: (data.yAxis2min?parseFloat(data.yAxis2min):undefined),\n\t\t\t\t\tmax: (data.yAxis2max?parseFloat(data.yAxis2max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis2tickamount?data.yAxis2tickamount:undefined),\n\t\t\t\t\tminorTicks: true\n\t\t\t\t}\n\t\t\t\t],\n\n\t\t\t\tplotOptions: {\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\talign: 'left',\n\t\t\t\t\tverticalAlign: 'top',\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 20,\n\t\t\t\t\tfloating: true           \n\t\t\t\t},\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tcredits: {\n\t\t\t\t   enabled: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tpointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b><br/>',\n\t\t\t\t\tvalueDecimals: 2,\n\t\t\t\t\tsplit: true,\n\t\t\t\t\tfollowTouchMove:false,\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\n\t\t\t\t},\n\n\t\t\t\tseries: seriesData\n\t\t\t});\n\n\n\t\t\twindow.setTimeout(function (){\n\t\t\t\tloadSelectorData (navigationData,oidList[0].historyOID,oidList[0].instance,oidList[0].currentOID,oidList[0].multiplicator,data.normalizeDate,(data.navigatorRange? parseInt (data.navigatorRange): 48),function (){\t\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].setData (navigationData);\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].xAxis.min=navigationData[0][0];\n\t\t\t\t\tvar startDate=new Date ();\n\t\t\t\t\tstartDate.setUTCMilliseconds(0);\n\t\t\t\t\tstartDate.setUTCSeconds(0);\t\n\t\t\t\t\tif (data.zoomDefault==\"1d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"7d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-7);\n\t\t\t\t\t} else if (data.zoomDefault==\"3d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"1m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"6m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-6);\n\t\t\t\t\t} else if (data.zoomDefault==\"ytd\"){\n\t\t\t\t\t\tstartDate=new Date (startDate.getFullYear(),0,1);\n\t\t\t\t\t} else if (data.zoomDefault==\"1y\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-12);\n\t\t\t\t\t}else if (data.zoomDefault==\"all\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-120);\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tloadSeriesData (startDate.getTime(),new Date ().getTime());\t\t\t\t\n\n\t\t\t\t\t//add mouse wheel support\n\t\t\t\t\tvar zoomRatio = 0;\n\t\t\t\t\tvar lastX;\n\t\t\t\t\tvar lastY;\n\n\t\t\t\t\t$('#'+ divId + widgetID).mousewheel(function(objEvent, intDelta) {\n\t\t\t\t\t\tif (intDelta > 0) {\n\t\t\t\t\t\t\tzoomRatio = -1 * fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (intDelta < 0) {\n\t\t\t\t\t\t\tzoomRatio = fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar setZoom = function() {\n\n\t\t\t\t\t\tvar xMin = chart.xAxis[0].getExtremes().dataMin;\n\t\t\t\t\t\tvar xMax = chart.xAxis[0].getExtremes().dataMax;\n\t\t\t\t\t\tvar absMin = minDate;\n\t\t\t\t\t\tvar absMax = new Date ().getTime();\n\t\t\t\t\t   \n\t\t\t\t\t\tchart.xAxis[0].setExtremes(Math.max (absMin ,xMin - zoomRatio * (xMax-xMin)), Math.min (absMax, xMax + zoomRatio * (xMax-xMin)), true, true, { trigger: 'zoom' });\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t},10);\n\n\n\n\t\t\t// subscribe on updates of value\n\t\t\t\n\t\t\tfunction onChangeSeries1ts(e, newVal, oldVal) {\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar eventDate=normalizeDate (new Date (),data.normalizeDate);\n\t\t\t\tconsole.log ('add new series 1 value :' + eventDate + '(' + eventDate.getTime() + ') - ' + newVal);\n\t\t\t\tif (chart.navigator.series[0].data && chart.navigator.series[0].data.length>0 && chart.navigator.series[0].data [chart.navigator.series[0].data.length-1]) console.log ('Last old x:' + chart.navigator.series[0].data[chart.navigator.series[0].data.length-1].x);\n\n\t\t\t\tif (chart.navigator.series[0].data && chart.navigator.series[0].data.length>0 && chart.navigator.series[0].data [chart.navigator.series[0].data.length-1] && chart.navigator.series[0].data[chart.navigator.series[0].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\tchart.navigator.series[0].data[chart.navigator.series[0].data.length-1].update((parseFloat(newVal) || 0) * oidList[0].multiplicator);\n\t\t\t\t} else {\n\t\t\t\t\tchart.navigator.series[0].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[0].multiplicator]); \n\t\t\t\t}\n\n\t\t\t\tif (chart.series[0].data && chart.series[0].data[chart.series[0].data.length-1] && chart.series[0].data[chart.series[0].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\tconsole.log ('Update series 1');\t\t\t\n\t\t\t\t\tchart.series[0].data[chart.series[0].data.length-1].update((parseFloat(newVal) || 0) * oidList[0].multiplicator);\n\t\t\t\t} else {\n\t\t\t\t   console.log ('Add new value to series 1');\n   \t\t\t\t\tvar oldExtremes=chart.xAxis[0].getExtremes();\n\t\t\t\t\tconsole.log ('Old extremes: ' + JSON.stringify (oldExtremes));\n\t\t\t\t\tvar oldLastX=(chart.series && chart.series[0].data && chart.series[0].data.length>0 && chart.series[0].data[chart.series[0].data.length-1] && chart.series[0].data[chart.series[0].data.length-1].x? chart.series[0].data[chart.series[0].data.length-1].x:0);\n\t\t\t\t\tconsole.log ('Last X: ' + oldLastX);\n\t\t\t\t\tchart.series[0].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[0].multiplicator]); \n\t\t\t\t\tconsole.log ('CompareX: ' + JSON.stringify (oldExtremes));\n\t\t\t\t\tif (oldExtremes.max > oldLastX-(10*60*1000)){\n\t\t\t\t\t\t//chart.xAxis[0].setExtremes(oldExtremes.min+eventDate.getTime()-oldExtremes.max,eventDate.getTime());\n\t\t\t\t\t\tvar newMaxX=chart.navigator.xAxis.max;\n\t\t\t\t\t\tif (oldLastX!=newMaxX) chart.xAxis[0].setExtremes(oldExtremes.dataMin+newMaxX-oldExtremes.dataMax,newMaxX);\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\n\t\t\tfunction onChangeSeries2ts(e, newVal, oldVal) {\n\t\t\t\tconsole.log ('Update series 2');\t\t\t\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar eventDate=normalizeDate (new Date (),data.normalizeDate);\n\t\t\t\tif (chart.series[1].data && chart.series[1].data[chart.series[1].data.length-1] && chart.series[1].data[chart.series[1].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\tchart.series[1].data[chart.series[1].data.length-1].update((parseFloat(newVal) || 0) * oidList[1].multiplicator);\n\t\t\t\t} else {\n\t\t\t\t\tchart.series[1].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[1].multiplicator]); \n\t\t\t\t}\n\t\t\t};\n\t\t\tfunction onChangeSeries3ts(e, newVal, oldVal) {\n\t\t\t\tconsole.log ('Update series 3');\t\t\t\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar eventDate=normalizeDate (new Date (),data.normalizeDate);\n\t\t\t\tif (chart.series[2].data && chart.series[2].data[chart.series[2].data.length-1] && chart.series[2].data[chart.series[2].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\tchart.series[2].data[chart.series[2].data.length-1].update((parseFloat(newVal) || 0) * oidList[2].multiplicator);\n\t\t\t\t} else {\n\t\t\t\t\tchart.series[2].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[2].multiplicator]); \n\t\t\t\t}\n\t\t\t};\n\t\t\tfunction onChangeSeries4ts(e, newVal, oldVal) {\n\t\t\t\tconsole.log ('Update series 4');\t\t\t\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar eventDate=normalizeDate (new Date (),data.normalizeDate);\n\t\t\t\tif (chart.series[3].data && chart.series[3].data[chart.series[3].data.length-1] && chart.series[3].data[chart.series[3].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\tchart.series[3].data[chart.series[3].data.length-1].update((parseFloat(newVal) || 0) * oidList[3].multiplicator);\n\t\t\t\t} else {\n\t\t\t\t\tchart.series[3].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[3].multiplicator]); \n\t\t\t\t}\n\t\t\t};\n\t\t\tfunction onChangeSeries5ts(e, newVal, oldVal) {\n\t\t\t\tconsole.log ('Update series 5');\t\t\t\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar eventDate=normalizeDate (new Date (),data.normalizeDate);\n\t\t\t\tif (chart.series[4].data && chart.series[4].data[chart.series[4].data.length-1] && chart.series[4].data[chart.series[4].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\tchart.series[4].data[chart.series[4].data.length-1].update((parseFloat(newVal) || 0) * oidList[4].multiplicator);\n\t\t\t\t} else {\n\t\t\t\t\tchart.series[4].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[4].multiplicator]); \n\t\t\t\t}\n\t\t\t};\n\t\t\tfunction onChangeSeries6ts(e, newVal, oldVal) {\n\t\t\t\tconsole.log ('Update series 6');\t\t\t\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar eventDate=normalizeDate (new Date (),data.normalizeDate);\n\t\t\t\tif (chart.series[5].data && chart.series[5].data[chart.series[5].data.length-1] && chart.series[5].data[chart.series[5].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\tchart.series[5].data[chart.series[5].data.length-1].update((parseFloat(newVal) || 0) * oidList[5].multiplicator);\n\t\t\t\t} else {\n\t\t\t\t\tchart.series[5].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[5].multiplicator]); \n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\tif (data.series1currentoid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.series1currentoid);\n\t\t\t\tvis.states.bind(data.series1currentoid + '.val', onChangeSeries1ts);\n\t\t\t\t$div.data('bound', [data.series1currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries1ts);\n\t\t\t}\t\t\t\n\t\t\tif (data.series2currentoid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.series2currentoid);\n\t\t\t\tvis.states.bind(data.series2currentoid + '.val', onChangeSeries2ts);\n\t\t\t\t$div.data('bound', [data.series2currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries2ts);\n\t\t\t}\t\t\t\n\t\t\tif (data.series3currentoid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.series3currentoid);\t\t\t\n\t\t\t\tvis.states.bind(data.series3currentoid + '.val', onChangeSeries3ts);\n\t\t\t\t$div.data('bound', [data.series3currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries3ts);\n\t\t\t}\t\t\t\n\t\t\tif (data.series4currentoid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.series4currentoid);\n\t\t\t\tvis.states.bind(data.series4currentoid + '.val', onChangeSeries4ts);\t\t\t\t\n\t\t\t\t$div.data('bound', [data.series4currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries4ts);\n\t\t\t}\t\t\t\n\t\t\tif (data.series5currentoid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.series5currentoid);\n\t\t\t\tvis.states.bind(data.series5currentoid + '.val', onChangeSeries5ts);\n\t\t\t\t$div.data('bound', [data.series5currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries5ts);\n\t\t\t}\t\t\t\n\t\t\tif (data.series6currentoid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.series6currentoid);\n\t\t\t\tvis.states.bind(data.series6currentoid + '.val', onChangeSeries6ts);\n\t\t\t\t$div.data('bound', [data.series6currentoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeSeries6ts);\n\t\t\t}\t\t\t\n\t\t},\n\t\t\n\t\t\n\t\tcreateTimeseries2Widget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\t\t\tvar fbobj=this;\n\t\t\tvar loadRunning=false;\n\t\t\tvar loadWaiting=false;\n\t\t\tvar refreshRequired=false;\n\t\t\tvar lastEvent=null;\t\t\t\n\t\t\tvar navigationData=[];\n\t\t\tvar zoomlevel ={\"1d\":0,\"3d\":1,\"7d\":2,\"1m\":3,\"3m\":4,\"6m\":5};\n\t\t\t\n\t\t\tconsole.log(' photovoltaikcharts: Create Timeseries2 Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createTimeseries2Widget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\t\n\t\t\tvar navigator={id:0, historyOID:data.navhistoryoid,instance:data.navinstance,multiplicator:parseFloat(data.navmultiplicator) || 1 };\n\t\t\t\n\t\t\toidList =[];\n\t\t\tseriesData=[];\n\t\t\tvar j=0;\n\t\t\tvar i;\n\t\t\tfor (i=1;i<6;i++){\n\t\t\t\tif (data['series'+ i + 'historyoid'] && data ['instance'+ i ]){\n\t\t\t\t\toidList.push ({id:j, historyOID:data['series'+ i + 'historyoid'],instance:data ['instance'+ i ],multiplicator:parseFloat(data ['multiplicator'+ i ]) || 1,lastX:0 });\n\t\t\t\t\t\n\t\t\t\t\tseriesData.push ({\n\t\t\t\t\t\tname: data['series' + i +'label'] ,\n\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\tcolor: data['series' + i + 'color'] || '#FF5A33',\n\t\t\t\t\t\tlineWidth: data['series' + i + 'linewidth'] || 1,\n\t\t\t\t\t\tfillOpacity: (data['series' + i + 'opacity']? parseFloat(data['series' + i + 'opacity'])/100 : 0.3),\n\t\t\t\t\t\ttype: data['series' + i + 'Type'] || 'areaspline',\n\t\t\t\t\t\tyAxis:(data['series' + i + 'axis']? parseInt(data['series' + i + 'axis']): 0),\n\t\t\t\t\t\tstep: (data['series' + i +'step'] && data['series' + i +'step']!='no'?data['series' + i +'step']: undefined),\n\t\t\t\t\t\tstacking: (data['series' + i +'stacking'] && data['series' + i +'stacking']!='no'  ? data['series' + i +'stacking'] :undefined),\n\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstates: {\t\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tlineWidth: data['series' + i + 'hoverlinewidth'] || 1,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpointInterval:10000\n\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\tvar plotLines=[];\n\t\t\tif (data.target) {\n\t\t\t\tplotLines.push ({color:\"#33FF50\",dashStyle:\"Solid\",label:data.targetName || 'Target',value:parseFloat(data.target),width:2});\n\t\t\t}\n\n\t\t\t\n\t\t\tfunction loadSeriesData (start,end,callback) {\n\t\t\t\tconsole.log ('resize chart to ' + new Date (start) + ' - ' + new Date (end));\n\t\t\t\tloadWaiting=false;\n\t\t\t\tif (start && end){\n\t\t\t\t\tloadRunning=true;\n\t\t\t\t\tvar virtualStart=start;\n\t\t\t\t\tvar virtualEnd=end;\n\t\t\t\t\tconsole.log ('virtual chart size ' + new Date (virtualStart) + ' - ' + new Date (virtualEnd));\n\n\t\t\t\t\tchart.showLoading();\n\t\t\t\t\twindow.setTimeout(function (){ \n\t\t\t\t\t\tloadSeriesRange(chart,oidList,0,data.normalizeDate,start,end,virtualStart,virtualEnd,function () {\n\t\t\t\t\t\t\tchart.redraw();\n\t\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t\t\tloadRunning=false;\n\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},10);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\t/**\n\t\t\t * Load new data depending on the selected min and max\n\t\t\t */\n\t\t\tif (fbobj.delayedRefreshHandler[widgetID]) window.clearInterval(fbobj.delayedRefreshHandler[widgetID]);\t\t\t\t\t\t\n\t\t\tfbobj.delayedRefreshHandler[widgetID]=window.setInterval( function () {\n\t\t\t\tif (loadRunning==false && refreshRequired==true) {\n   \t\t\t\t   refreshRequired=false;\n  \t\t\t\t   console.log ('Process event ' + new Date (lastEvent.min) + ' - ' + new Date (lastEvent.max));\t\t\t\t   \n\t\t\t\t   loadSeriesData (lastEvent.min,lastEvent.max);\n\t\t\t\t   \n\t\t\t\t} \t\n\t\t\t},500);\n\n\t\t\tfunction afterSetExtremes(event) {\n\t\t\t\tconsole.log ('afterSetExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t\tif (event.trigger!=undefined){\n\t\t\t\t\tif (!loadRunning) {\n\t\t\t\t\t\tloadSeriesData (event.min,event.max);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent=event;\n\t\t\t\t\t\tconsole.log ('Save event ' + new Date (event.min) + ' - ' + new Date (event.max));\n\n\t\t\t\t\t\trefreshRequired=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif (vis.language === 'de') Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\tvar unit = data.unit;\n\t\t\tchart = Highcharts.stockChart(divId + widgetID, {\n\t\t\t\tchart: {\n\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\trenderTo: divId + widgetID,\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tpanKey: 'shift'\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: data.title\n\t\t\t\t},\n\t\t\t\ttime:{\n\t\t\t\t   useUTC: false\n\t\t\t\t},\n\t\t\t\trangeSelector: {\n\t\t\t\t  buttons: [{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1 Tag',\n\t\t\t\t\t\ttitle: '1 Tag anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3 Tage',\n\t\t\t\t\t\ttitle: '3 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 7,\n\t\t\t\t\t\ttext: '7 Tage',\n\t\t\t\t\t\ttitle: '7 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1M',\n\t\t\t\t\t\ttitle: '1 Monat anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3M',\n\t\t\t\t\t\ttitle: '3 Monate anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 6,\n\t\t\t\t\t\ttext: '6M',\n\t\t\t\t\t\ttitle: '6 Monate anzeigen'\n\t\t\t\t\t}],\n\t\t\t\t\tallButtonsEnabled: true,\n\t\t\t\t\tdropdown:'always',\n\t\t\t\t\theight: 10,\n\t\t\t\t\tselected: zoomlevel[data.zoomDefault],\n\t\t\t\t\tinputDateFormat:'%e. %b %Y'\n\t\t\t\t},\n\t\t\t\tnavigator: {\n\t\t\t\t\tadaptToUpdatedData:false,\n\t\t\t\t\theight: 20,\n\t\t\t\t\tmargin: 10,\n\t\t\t\t\tseries: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpointInterval:10000\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t],\n\t\t\t\t\txAxis:{\n\t\t\t\t\t\tordinal: false\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscrollbar: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tafterSetExtremes: afterSetExtremes,\n\t\t\t\t\t},\n\t\t\t\t\tordinal: false,\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tyAxis: [{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value;\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tx: 1\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: data.xAxisLabel1\n\t\t\t\t\t},\n\t\t\t\t\theight: (data.chart1Height? data.chart1Height+'%':'20%'),\n\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\tresize: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t},\n\t\t\t\t\tcategories:(data.yAxis1Categories? JSON.parse (data.yAxis1Categories): undefined),\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tmin: (data.yAxis1min?parseFloat(data.yAxis1min):undefined),\n\t\t\t\t\tmax: (data.yAxis1max?parseFloat(data.yAxis1max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis1tickamount?data.yAxis1tickamount:undefined),\n\t\t\t\t\tminorTicks: true,\n\t\t\t\t\tstartOnTick:false\t\t\t\t\t\n\t\t\t\t},{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + ' ' + unit;\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tx: 1\n\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: data.xAxisLabel2\n\t\t\t\t\t},\n\t\t\t\t\ttop: (data.chart1Height? (parseFloat(data.chart1Height) + (data.chartspacing? parseFloat(data.chartspacing) :5)) +'%':( 20 + (data.chartspacing? parseFloat(data.chartspacing) :5))+'%'),\n\t\t\t\t\theight: (data.chart2Height? data.chart2Height+'%':'40%'),\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\tresize: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t},\n\t\t\t\t\tcategories:(data.yAxis2Categories? JSON.parse (data.yAxis2Categories): undefined),\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tplotLines:plotLines,\n\t\t\t\t\tmin: (data.yAxis2min?parseFloat(data.yAxis2min):undefined),\n\t\t\t\t\tmax: (data.yAxis2max?parseFloat(data.yAxis2max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis2tickamount?data.yAxis2tickamount:undefined),\n\t\t\t\t\tminorTicks: true\n\t\t\n\t\t\t\t},{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + ' ' + unit\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tx: 1\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: data.xAxisLabel3\n\t\t\t\t\t},\n\t\t\t\t\tcategories:(data.yAxis3Categories? JSON.parse (data.yAxis3Categories): undefined),\n\t\t\t\t\ttop: ((data.chart1Height? parseFloat(data.chart1Height) + (data.chartspacing? parseFloat(data.chartspacing) :5):20 + (data.chartspacing? parseFloat(data.chartspacing) :5)) + (data.chart2Height? parseFloat(data.chart2Height) + (data.chartspacing? parseFloat(data.chartspacing) :5):40 + (data.chartspacing? parseFloat(data.chartspacing) :5)))+'%' ,\n\t\t\t\t\theight: (data.chart3Height? data.chart3Height+'%':'30%'),\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\tmin: (data.yAxis3min?parseFloat(data.yAxis3min):undefined),\n\t\t\t\t\tmax: (data.yAxis3max?parseFloat(data.yAxis3max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis3tickamount?data.yAxis3tickamount:undefined),\n\t\t\t\t\tminorTicks: true\n\t\t\t\t}\n\t\t\t\t],\n\n\t\t\t\tplotOptions: {\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\talign: 'left',\n\t\t\t\t\tverticalAlign: 'top',\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 20,\n\t\t\t\t\tfloating: true           \n\t\t\t\t},\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tcredits: {\n\t\t\t\t   enabled: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tpointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b><br/>',\n\t\t\t\t\tvalueDecimals: 2,\n\t\t\t\t\tsplit: true,\n\t\t\t\t\tfollowTouchMove:false,\t\t\t\t\t\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\t\t\t\t\n\t\t\t\t},\n\n\t\t\t\tseries: seriesData\n\t\t\t});\n\n\n\t\t\tfunction updateSelector(id,instance,multiplicator,start,callback) {\n\n\t\t\t\tvar option = {};\n\t\t\t\tvar eventDate;\n\t\t\t\tvar eventValue;\n\t\t\t\toption.start=start;\n\t\t\t\toption.instance  = instance;\n\t\t\t\toption.aggregate='minmax';\n\t\t\t\t//option.count=2000;\n\t\t\t\toption.limit=300;\n\t\t\t\toption.timeout=12000;\n\t\t\t\tvis.getHistory(id, option, function (err, res) {\n\t\t\t\t\tif (err && Object.keys(err).length > 0) console.error('Error Object: ' + JSON.stringify(err));\n\t\t\t\t\tif (!err && res) {\n\t\t\t\t\t\tconsole.log('got History data. Count:' + res.length);\t\t\n\t\t\t\t\t\tfor (var i = 0; i < res.length; i++) {\n\t\t\t\t\t\t\teventDate=new Date (res[i].ts);\n\t\t\t\t\t\t\teventValue=res[i].val * multiplicator;\n\t\t\t\t\t\t\t//console.log(id +' '+ new Date (res[i].ts)+ ' n ' + eventDate + ':' + res[i].val);\n\t\t\t\t\t\t\tif (res[i].val!=null){\n\t\t\t\t\t\t\t\tif (chart.navigator.series[0].data && chart.navigator.series[0].data.length>0 && chart.navigator.series[0].data [chart.navigator.series[0].data.length-1] && chart.navigator.series[0].data[chart.navigator.series[0].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\t\t\t\t\tchart.navigator.series[0].data[chart.navigator.series[0].data.length-1].update(eventValue);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchart.navigator.series[0].addPoint ([eventDate.getTime(),eventValue]); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} \t\n\t\t\t\t\t\t// free memory\n\t\t\t\t\t\tres = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (callback) callback();\n\t\t\t\t});\n\t\t\t};\n\n\t\t    function updateSeriesData (){\n\t\t\t\tconsole.log ('Start update chart');\n\t\t\t\tif (!chart){\n\t\t\t\t\tif (fbobj.updateIntervalHandler[widgetID]) {\n\t\t\t\t\t\twindow.clearInterval(fbobj.updateIntervalHandler[widgetID]);\n\t\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=null;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar oldExtremes=chart.xAxis[0].getExtremes();\t\t\t\t\n\t\t\t\tvar oldLastX=chart.navigator.xAxis.max;\n\t\t\t\t\n\t\t\t\tconsole.log ('Start UpdateSelector ' + new Date (oldLastX) + ' - ' + (new Date (oldExtremes.dataMax)));\n\t\t\t\tupdateSelector(navigator.historyOID,navigator.instance,navigator.multiplicator,oldLastX+1,function (){\n\t\t\t\t\tif (chart.navigator.series[0].data[chart.navigator.series[0].data.length-1].x > oldLastX && oldExtremes.max > oldLastX-(10*60*1000)){\n\t\t\t\t\t\tvar newMaxX=chart.navigator.xAxis.max;\n\t\t\t\t\t\tchart.xAxis[0].setExtremes(oldExtremes.min+newMaxX-oldExtremes.max,newMaxX, true, true, { trigger: 'zoom' });\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t});\t\t\t\t\n\t\t\t};\n\n\n\t\t\twindow.setTimeout(function (){\n\t\t\t\tloadSelectorData (navigationData,navigator.historyOID,navigator.instance,null,navigator.multiplicator,'no',(data.navigatorRange? parseInt (data.navigatorRange): 3), function (){\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].setData (navigationData);\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].xAxis.min=navigationData[0][0];\n\t\t\t\t\tvar startDate=new Date ();\n\t\t\t\t\tstartDate.setUTCMilliseconds(0);\n\t\t\t\t\tstartDate.setUTCSeconds(0);\t\n\t\t\t\t\tif (data.zoomDefault==\"1d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"7d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-7);\t\t\t\t\t   \n\t\t\t\t\t} else if (data.zoomDefault==\"1m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"6m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-6);\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tloadSeriesData (startDate.getTime(),new Date ().getTime(),function (){\n\t\t\t\t\t\tif (fbobj.updateIntervalHandler[widgetID]) window.clearInterval(fbobj.updateIntervalHandler[widgetID]);\n\t\t\t\t\t\t\n\t\t\t\t\t//add mouse wheel support\n\t\t\t\t\tvar zoomRatio = 0;\n\t\t\t\t\tvar lastX;\n\t\t\t\t\tvar lastY;\n\n\n\t\t\t\t\t$('#'+ divId + widgetID).mousewheel(function(objEvent, intDelta) {\n\t\t\t\t\t\tif (intDelta > 0) {\n\t\t\t\t\t\t\tzoomRatio = -1 * fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (intDelta < 0) {\n\t\t\t\t\t\t\tzoomRatio = fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar setZoom = function() {\n\n\t\t\t\t\t\tvar xMin = chart.xAxis[0].getExtremes().dataMin;\n\t\t\t\t\t\tvar xMax = chart.xAxis[0].getExtremes().dataMax;\n\t\t\t\t\t\tvar absMin = minDate;\n\t\t\t\t\t\tvar absMax = new Date ().getTime();\n\t\t\t\t\t   \n\t\t\t\t\t\tchart.xAxis[0].setExtremes(Math.max (absMin ,xMin - zoomRatio * (xMax-xMin)), Math.min (absMax, xMax + zoomRatio * (xMax-xMin)), true, true, { trigger: 'zoom' });\n\t\t\t\t\t}\n\n\t\t\t\t\t\t\n\t\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=window.setInterval(function () {\n\t\t\t\t\t\t   updateSeriesData ();\n\t\t\t\t\t\t}, 30000);\n\t\t\t\t\t\n\t\t\t\t\t});\t\t\t\t\n\t\t\t\t});\n\t\t\t},10);\t\n\t\t},\n\n\n\t\tcreateTimeseries3Widget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\t\t\tvar fbobj=this;\n\t\t\tvar loadRunning=false;\n\t\t\tvar loadWaiting=false;\n\t\t\tvar refreshRequired=false;\n\t\t\tvar lastEvent=null;\t\t\t\n\t\t\tvar zoomlevel ={\"1d\":0,\"3d\":1,\"7d\":2,\"1m\":3,\"3m\":4,\"6m\":5};\n\t\t\t\n\t\t\tconsole.log(' photovoltaikcharts: Create Timeseries3 Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createTimeseries3Widget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\t\n\t\t\tvar unit=data.unit;\n\n\n\t\t\t\n\t\t\toidList =[];\n\t\t\tseriesData=[];\n\t\t\tvar j=0;\n\t\t\tvar i;\n\t\t\tvar label;\n\t\t\t\n\t\t\tfor (i=1;i<5;i++){\n\t\t\t\tif (data['series'+ i + 'historyoid'] && data ['instance'+ i ]){\n\t\t\t\t\tlabel=data['series' + i +'label'];\t\t\t\t\n\t\t\t\t\toidList.push ({id:j, historyOID:data['series'+ i + 'historyoid'],instance:data ['instance'+ i ],multiplicator:parseFloat(data ['multiplicator'+ i ]) || 1,lastX:0 });\n\t\t\t\t\t\n\t\t\t\t\tseriesData.push ({\n\t\t\t\t\t\tname: label,\n\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\tcolor: data['series' + i + 'color'] || '#FF5A33',\n\t\t\t\t\t\tlineWidth: data['series' + i + 'linewidth'] || 1,\n\t\t\t\t\t\tfillOpacity: (data['series' + i + 'opacity']? parseFloat(data['series' + i + 'opacity'])/100 : 0.3),\n\t\t\t\t\t\ttype: data['series' + i + 'Type'] || 'areaspline',\n\t\t\t\t\t\tstep: (data['series' + i +'step'] && data['series' + i +'step']!='no'? data['series' + i +'step'] : undefined),\n\t\t\t\t\t\tstacking: (data['series' + i +'stacking'] && data['series' + i +'stacking']!='no'  ? data['series' + i +'stacking'] : undefined),\n\n\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\t\n\t\t\t\t\t\tstates: {\t\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tlineWidth: data['series' + i + 'hoverlinewidth'] || 1,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpointInterval:10000\n\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\tvar plotLines=[];\n\t\t\tif (data.target) {\n\t\t\t\tplotLines.push ({color:\"#33FF50\",dashStyle:\"Solid\",label:data.targetName || 'Target',value:parseFloat(data.target),width:2});\n\t\t\t}\n\n\t\t\t\n\t\t\tfunction loadSeriesData (start,end,callback) {\n\t\t\t\tconsole.log ('resize chart to ' + new Date (start) + ' - ' + new Date (end));\n\t\t\t\t// chart.series[0].setData(data);\n\t\t\t\tloadWaiting=false;\n\t\t\t\tif (start && end){\n\t\t\t\t\tloadRunning=true;\n\t\t\t\t\tvar virtualStart=start;\n\t\t\t\t\tvar virtualEnd=end;\n\n\t\t\t\t\tchart.showLoading();\n\t\t\t\t\twindow.setTimeout(function (){ \n\t\t\t\t\t\tloadSeriesRange(chart,oidList,0,data.normalizeDate,start,end,virtualStart,virtualEnd,function () {\n\t\t\t\t\t\t\t//chart.xAxis.min =start;\n\t\t\t\t\t\t\t//chart.xAxis.max=end;\n\t\t\t\t\t\t\tchart.redraw();\n\t\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t\t\tloadRunning=false;\n\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},10);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction addSeriesData (start,end,callback) {\n\t\t\t\tconsole.log ('load and add new Data for ' + new Date (start) + ' - ' + new Date (end));\n\t\t\t\tif (start && end){\n\t\t\t\t\twindow.setTimeout(function (){ \n\t\t\t\t\t\tloadAndAddSeriesRange(chart,oidList,0,data.normalizeDate,start,end,start,function (newMax) {\n\t\t\t\t\t\t\tif (callback) callback(newMax);\n\t\t\t\t\t\t});\n\t\t\t\t\t},10);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t\t\t\t\n\t\t\t/**\n\t\t\t * Load new data depending on the selected min and max\n\t\t\t */\n\t\t\tif (fbobj.delayedRefreshHandler[widgetID]) window.clearInterval(fbobj.delayedRefreshHandler[widgetID]);\t\t\t\t\t\t\n\t\t\tfbobj.delayedRefreshHandler[widgetID]=window.setInterval( function () {\n\t\t\t\tif (loadRunning==false && refreshRequired==true) {\n   \t\t\t\t   refreshRequired=false;\n  \t\t\t\t   console.log ('Process event ' + new Date (lastEvent.min) + ' - ' + new Date (lastEvent.max));\t\t\t\t   \n\t\t\t\t   loadSeriesData (lastEvent.min,lastEvent.max);\n\t\t\t\t   \n\t\t\t\t} \t\n\t\t\t},500);\n\n\t\t\tfunction afterSetExtremes(event) {\n\t\t\t\tconsole.log ('afterSetExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t\tif (event.trigger!=undefined){\n\t\t\t\t\tif (!loadRunning) {\n\t\t\t\t\t\tloadSeriesData (event.min,event.max);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent=event;\n\t\t\t\t\t\tconsole.log ('Save event ' + new Date (event.min) + ' - ' + new Date (event.max));\n\n\t\t\t\t\t\trefreshRequired=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction setExtremes(event) {\n\t\t\t\tconsole.log ('setExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\tif (vis.language === 'de')Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\tvar help= vis.states[data.series1historyoid];\n\t\t\tchart = new Highcharts.stockChart(divId + widgetID, {\n\t\t\t\tchart: {\n\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tpanKey: 'shift',\n\t\t\t\t\trenderTo: divId + widgetID,\n\t\t\t\t\tbackgroundColor: 'rgba(255,255,255,0)'\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: data.title\n\t\t\t\t},\n\t\t\t\ttime:{\n\t\t\t\t   useUTC: false\n\t\t\t\t},\n\t\t\t\trangeSelector: {\n\t\t\t\t  enabled: false,\n\t\t\t\t  buttons: [{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1 Tag',\n\t\t\t\t\t\ttitle: '1 Tag anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3 Tage',\n\t\t\t\t\t\ttitle: '3 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 7,\n\t\t\t\t\t\ttext: '7 Tage',\n\t\t\t\t\t\ttitle: '7 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1M',\n\t\t\t\t\t\ttitle: '1 Monat anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3M',\n\t\t\t\t\t\ttitle: '3 Monate anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 6,\n\t\t\t\t\t\ttext: '6M',\n\t\t\t\t\t\ttitle: '6 Monate anzeigen'\n\t\t\t\t\t}],\n\t\t\t\t\tallButtonsEnabled: true,\n\t\t\t\t\tdropdown:'always',\n\t\t\t\t\theight: 10,\n\t\t\t\t\tinputDateFormat:'%e. %b %Y'\n\t\t\t\t},\n\t\t\t\tnavigator: {\n\t\t\t\t\tenabled:false,\n\t\t\t\t\tseries: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpointInterval:10000\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t],\n\t\t\t\t\txAxis:{\n\t\t\t\t\t\tordinal: false\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscrollbar: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tafterSetExtremes: afterSetExtremes,\n\t\t\t\t\t\tsetExtremes: setExtremes,\n\t\t\t\t\t},\n\t\t\t\t\tordinal: false,\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\n\t\t\t\t\t//overscroll: 10000\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tyAxis: [{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + ' ' + unit;\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tx: 1\n\n\t\t\t\t\t},\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tcategories:(data.yAxis1Categories? JSON.parse (data.yAxis1Categories): undefined),\n\t\t\t\t\tmin: (data.yAxis1min?parseFloat(data.yAxis1min):undefined),\n\t\t\t\t\tmax: (data.yAxis1max?parseFloat(data.yAxis1max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis1tickamount?data.yAxis1tickamount:undefined),\n\t\t\t\t\tminorTicks: true,\n\t\t\t\t\tstartOnTick:false\n\t\t\n\t\t\t\t}\n\t\t\t\t],\n\n\t\t\t\tplotOptions: {\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\talign: 'left',\n\t\t\t\t\tverticalAlign: 'top',\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 2,\n\t\t\t\t\tfloating: true           \n\t\t\t\t},\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tcredits: {\n\t\t\t\t   enabled: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tpointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b><br/>',\n\t\t\t\t\tvalueDecimals: 2,\n\t\t\t\t\tsplit: true,\n\t\t\t\t\tfollowTouchMove:false,\t\t\t\t\t\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\t\t\t\t\t\n\t\t\t\t},\n\n\t\t\t\tseries: seriesData\n\t\t\t});\n\n\n\n\t\t    function updateSeriesData (){\n\t\t\t\tconsole.log ('Start update chart');\n\t\t\t\tif (!chart){\n\t\t\t\t\tif (fbobj.updateIntervalHandler[widgetID]) {\n\t\t\t\t\t\twindow.clearInterval(fbobj.updateIntervalHandler[widgetID]);\n\t\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=null;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar oldExtremes=chart.xAxis[0].getExtremes();\t\t\t\t\n\t\t\t\tif (loadRunning==false && (new Date()).getTime()-(10*60*1000)< oldExtremes.max){\n\t\t\t\t\t\n\t\t\t\t\taddSeriesData (oldExtremes.dataMax,(new Date()).getTime(),function (newMax){\n\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\n\t\t\t\t\t\tchart.xAxis[0].setExtremes(oldExtremes.dataMin + newMax - oldExtremes.dataMax ,newMax);\n\t\t\t\t\t\tconsole.log ('Updated chart data to ' + new Date (oldExtremes.dataMin + newMax - oldExtremes.dataMax) + ' - ' + new Date (newMax));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\n\n\t\t\twindow.setTimeout(function (){\t\t\t\t\n\t\t\t\tvar startDate=new Date ();\n\t\t\t\tstartDate.setUTCMilliseconds(0);\n\t\t\t\tstartDate.setUTCSeconds(0);\t\n\t\t\t\tif (data.zoomoid && vis.states[data.zoomoid + '.val']) {\n\t\t\t\t\tconsole.log ('use range info from zoomid:' + vis.states[data.zoomoid + '.val'] + ' type ' + typeof vis.states[data.zoomoid + '.val']);\n\t\t\t\t\tstartDate=new Date ((new Date ()).getTime() - (vis.states[data.zoomoid + '.val']*1000));\n\t\t\t\t} else {\n\t\t\t\t\tif (data.zoomDefault==\"1d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"7d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-7);\t\t\t\t\t   \n\t\t\t\t\t} else if (data.zoomDefault==\"1m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"6m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-6);\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tloadSeriesData (startDate.getTime(),new Date ().getTime(),function (){\n\t\t\t\t\tchart.xAxis[0].allowZoomOutside = true;\n\t\t\t\t\n\t\t\t\t\t//add mouse wheel support\n\t\t\t\t\tvar zoomRatio = 0;\n\t\t\t\t\tvar lastX;\n\t\t\t\t\tvar lastY;\n\n\n\t\t\t\t\t$('#'+ divId + widgetID).mousewheel(function(objEvent, intDelta) {\n\t\t\t\t\t\tif (intDelta > 0) {\n\t\t\t\t\t\t\tzoomRatio = -1 * fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (intDelta < 0) {\n\t\t\t\t\t\t\tzoomRatio = fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar setZoom = function() {\n\n\t\t\t\t\t\tvar xMin = chart.xAxis[0].getExtremes().dataMin;\n\t\t\t\t\t\tvar xMax = chart.xAxis[0].getExtremes().dataMax;\n\t\t\t\t\t\tvar absMin = minDate;\n\t\t\t\t\t\tvar absMax = new Date ().getTime();\n\t\t\t\t\t   \n\t\t\t\t\t\tchart.xAxis[0].setExtremes(Math.max (absMin ,xMin - zoomRatio * (xMax-xMin)), Math.min (absMax, xMax + zoomRatio * (xMax-xMin)), true, true, { trigger: 'zoom' });\n\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif (fbobj.updateIntervalHandler[widgetID]) window.clearInterval(fbobj.updateIntervalHandler[widgetID]);\n\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=window.setInterval(function () {\n\t\t\t\t\t   updateSeriesData ();\n\t\t\t\t\t}, 30000);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t\n\t\t\t},10);\t\n\t\t\t\n\t\t\t\n\t\t\tfunction onChangeZoom(e, newVal, oldVal) {\n\t\t\t\tconsole.log ('Change zoom');\t\t\t\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (data.zoomoid && vis.states[data.zoomoid + '.val']) {\n\t\t\t\t\tvar currentExtremes=chart.xAxis[0].getExtremes();\t\t\t\t\t\n\t\t\t\t\tvar startDate=new Date ((new Date (currentExtremes.dataMax)).getTime() - (newVal*1000));\n\t\t\t\t\tchart.xAxis[0].setExtremes(startDate.getTime(), currentExtremes.dataMax, true, true, { trigger: 'zoom' });\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tif (data.zoomoid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.zoomoid);\n\t\t\t\tvis.states.bind(data.zoomoid + '.val', onChangeZoom);\n\t\t\t\t$div.data('bound', [data.zoomoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeZoom);\n\t\t\t}\t\n\t\t\t\n\t\t}\n\n\t};\n\t\n\n\tvis.binds.photovoltaikcharts.showVersion();\t\t"]}