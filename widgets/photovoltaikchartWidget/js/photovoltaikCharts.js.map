{"version":3,"sources":["days.js","data.js"],"names":["months","en","de","ru","es","fr","it","pl","pt","nl","days","readOneChart","seriesData","id","instance","currentId","multiplicator","index","callback","mode","startdate","seriesCount","eventDate","option","currentYear","Date","getFullYear","startYear","numberOfYears","start","end","getTime","aggregate","count","timeout","console","log","vis","getHistory","err","res","Object","keys","length","error","JSON","stringify","i","ts","data","getMonth","val","states","_readData","oidList","j","historyOID","currentOID","setTimeout","loadSelectorData","duration","startDate","setMonth","conn","sendTo","result","dbid","rowcount","sql","normalizeDate","push","readOneLineRange","chart","virtualStart","virtualEnd","lastEventDate","series","setData","readAndAddOneLineRange","newMax","addPoint","loadSeriesRange","loadAndAddSeriesRange","date","setMilliseconds","setSeconds","setMinutes","setUTCMilliseconds","setUTCSeconds","setUTCMinutes","setUTCHours","day","getDay","diff","getDate","setDate","setUTCDate","setUTCMonth","minDate","H","Chart","prototype","pan","e","panning","panningOptions","doRedraw","type","this","hoverPoints","chartOptions","options","enabled","fireEvent","originalEvent","forEach","point","setState","xy","isX","spill","axis","axisOpt","horiz","mousePos","mouseDown","startPos","halfPointRange","pointRange","pointRangeDirection","reversed","inverted","extremes","getExtremes","panMin","toValue","panMax","len","flipped","newMin","paddedMin","paddedMax","ordinal","min","max","panningState","startMin","startMax","setExtremes","trigger","redraw","css","container","cursor","zoom","event","hasZoomed","pointer","mouseDownPos","mouseDownX","mouseDownY","displayButton","resetSelection","axes","initiated","xAxis","concat","yAxis","axisData","axisStartPos","left","top","axisEndPos","width","height","isXAxis","isWithinPane","defined","displayBtn","resetZoomButton","showResetZoom","isObject","destroy","pick","animation","pointCount","Axis","maxX","minX","navigator","dataMin","dataMax","Math","evt","allowZoomOutside","zoomed","Pointer","pinch","self","pinchDown","touches","touchesLength","lastValidTouch","hasZoom","transform","fireClickEvent","inClass","target","runTrackerClick","runChartClick","clip","selectionMarker","followTouchMove","cancelable","preventDefault","map","call","normalize","chartX","chartY","x","y","zoomEnabled","bounds","minPixelPadding","toPixels","absMin","absMax","pos","runPointActions","extend","noop","touch","plotBox","pinchTranslate","hasPinched","scaleGroups","reset","Highcharts","types","handler","orgEvent","window","args","slice","arguments","delta","deltaX","deltaY","$","fix","wheelDelta","detail","undefined","HORIZONTAL_AXIS","wheelDeltaY","wheelDeltaX","unshift","handle","apply","special","mousewheel","setup","addEventListener","onmousewheel","teardown","removeEventListener","fn","bind","unmousewheel","unbind","binds","photovoltaikcharts","version","updateIntervalHandler","reloadIntervalHandler","delayedRefreshHandler","showVersion","highchartsOptions","lang","weekdays","shortWeekdays","shortMonths","contextButtonTitle","decimalPoint","downloadCSV","downloadJPEG","downloadPDF","downloadPNG","downloadSVG","downloadXLS","exitFullscreen","hideData","loading","noData","numericSymbols","printChart","resetZoom","resetZoomTitle","viewData","viewFullscreen","exportData","annotationHeader","categoryDatetimeHeader","categoryHeader","highchartsSeriesUnits","highchartsDateTimeLabelFormats","millisecond","second","minute","hour","week","month","year","scrollspeed","getUniqueOID","item","indexOf","findOID","iod","createMonthlyWidget","widgetID","view","style","targetArray","fbobj","$div","systemLang","sysLang","split","k","parseFloat","lastX","today","targetData","categories","toString","name","substr","stack","color","lineWidth","fillOpacity","opacity","Array","isArray","targetName","step","marker","onChangeSeries","newVal","oldVal","ids","update","language","setOptions","unit","zoomType","options3d","alpha","beta","depth","viewDistance","frame","bottom","size","title","text","zAxis","labels","rotation","plotOptions","column","stacking","groupZPadding","groupPadding","grouping","legend","showLegend","exporting","showMenu","tooltip","formatter","stackTotal","userOptions","stacklabel","credits","uniqueOID","createYearlyWidget","defaultData","plotLines","dashStyle","label","value","createTimeseriesWidget","divId","loadRunning","refreshRequired","lastEvent","navigationData","parseInt","dataGrouping","approximation","units","hover","pointInterval","loadSeriesData","showLoading","hideLoading","clearInterval","setInterval","points","oldExtremes","oldLastX","newMaxX","stockChart","renderTo","panKey","time","timezoneOffset","getTimezoneOffset","rangeSelector","buttons","allButtonsEnabled","dropdown","selected","1d","3d","7d","1m","3m","6m","ytd","1y","all","zoomDefault","inputDateFormat","adaptToUpdatedData","margin","scrollbar","events","afterSetExtremes","dateTimeLabelFormats","overscroll","align","chart1Height","resize","yAxis1min","yAxis1max","tickAmount","yAxis1tickamount","minorTicks","chartspacing","chart2Height","offset","yAxis2min","yAxis2max","yAxis2tickamount","verticalAlign","floating","pointFormat","valueDecimals","navigatorRange","zoomRatio","objEvent","intDelta","setZoom","xMin","xMax","createTimeseries2Widget","navhistoryoid","navinstance","navmultiplicator","unit1","xAxisLabel1","yAxis1Categories","parse","startOnTick","updateSeriesData","eventValue","limit","chart2enabled","unit2","xAxisLabel2","yAxis2Categories","chart3enabled","unit3","xAxisLabel3","yAxis3Categories","chart3Height","yAxis3min","yAxis3max","yAxis3tickamount","useUTC","autoreload","reloadSeriesData","createTimeseries3Widget","serieshistoryoid1","onChangeZoom","zoomoid","currentExtremes","backgroundColor","click","storeTimestampSelected","removePlotLine","setValue","hoverPoint","addPlotLine","crosshair","showCrosshairX","showCrosshairY","visible","showYAxis","stepForward","findSelected","playid","onStepForward","stepforwardid","onStepBackward","stepbackid","onPlay","plotLinesAndBands","createPhotovoltaikModuleWidget","getValue","getColor","energyValue","vgValue","modulePower","svg","find","onChangeValue","serieshistoryoid","timestampid","toLocaleString","minimumFractionDigits","attr","serieslabel"],"mappings":"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","file":"photovoltaikCharts.js","sourcesContent":["var months = {\n    'en': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'de': ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n    'ru': ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    'es': ['Jan', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],\n    'fr': ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'it': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'pl': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'pt': ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Set', 'Out', 'Nov', 'Dez'],\n    'nl': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n};\nvar days = {\n    'en': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'de': ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    'ru': ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n    'es': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'fr': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'it': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'pl': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'pt': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'nl': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n};","'use strict';\n\nfunction readOneChart(seriesData,id,instance,currentId,multiplicator, index, callback,mode,startdate,seriesCount) {\n\n    var option = {};\n\tvar eventDate;\n\tvar currentYear=new Date ().getFullYear();\n\tvar startYear=new Date (startdate).getFullYear();\n\t\n\tvar numberOfYears=currentYear - startYear + 1;\n\toption.start=startdate;\n\toption.end=(new Date(currentYear, 11, 31,23,59)).getTime();\n    option.instance  = instance;\n\toption.aggregate='none';\n\toption.count=1000;\n\toption.timeout=12000;\n    console.log(new Date(option.start) + ' - ' + new Date(option.end));\n\tvis.getHistory(id, option, function (err, res) {\n\t\tconsole.log('got History data');\n        if (err && Object.keys(err).length > 0) console.error('Error Object: ' + JSON.stringify(err));\n\n\n        if (!err && res) {\n            for (var i = 0; i < res.length; i++) {\n\t\t\t\teventDate=new Date (res[i].ts);\n\t\t\t\tif (mode===1){\n\t\t\t\t\tseriesData[(eventDate.getFullYear()-startYear)*(seriesCount) + index].data[eventDate.getMonth()]=(res[i].val || 0) * multiplicator;\n\t\t\t\t} else {\n\t\t\t\t\tseriesData[index].data[numberOfYears-1 - currentYear + eventDate.getFullYear()]=(res[i].val || 0) *multiplicator;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} \t\n            // free memory\n            res = null;\n        }\n\n        if (currentId) {\n\t\t\tif (mode===1){\n\t\t\t\tseriesData[(currentYear-startYear)*(seriesCount) + index].data[(new Date ()).getMonth()]=(vis.states[currentId + '.val'] || 0) * multiplicator;\n\t\t\t} else {\n\t\t\t\tseriesData[index].data[numberOfYears-1]=(vis.states[currentId + '.val']|| 0) * multiplicator;\n\t\t\t}\t\t\n\t\t};\n  \t    if (callback) callback();\n    });\n}\n\n\nfunction _readData(seriesData,oidList,callback, j,mode,startdate) {\n    j = j || 0;\n    if (j >= oidList.length) {\n        return callback && callback();\n    } else {\n\t\tif (oidList[j].historyOID && oidList[j].instance) {\n\t\t\treadOneChart(seriesData,oidList[j].historyOID,oidList[j].instance,oidList[j].currentOID,oidList[j].multiplicator,j, function () {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t_readData(seriesData,oidList,callback, j + 1,mode,startdate);\n\t\t\t\t}, 10);\n\t\t\t},mode,startdate,oidList.length);\n\t\t}else{\n            setTimeout(function () {\n                _readData(seriesData,oidList,callback, j + 1,mode,startdate);\n            }, 10);\t\t\t\n\t\t}\n    }\n}\n\n\nfunction loadSelectorData(data,id,instance,currentId,multiplicator,mode,duration,callback) {\n\tvar startDate=new Date ();\n\tstartDate.setMonth (-1 * duration);\n\tvar start=startDate.getTime();\n    if (id && instance){\n\t\tvis.conn.sendTo(instance, 'query', \n\t\t\t\"select id from iobroker.datapoints where name ='\" + id + \"'\"\n\t\t, function (result) {\n\t\t\tif (result.error) {\n\t\t\t\tconsole.error(result.error);\t\t\t\n\t\t\t\tif (callback) callback();\n\t\t\t} else {\n\t\t\t\t// show result\n\t\t\t\tconsole.log('Rows: ' + JSON.stringify(result.result));\n\t\t\t\tif (result.result[0] && result.result[0].id){\n\t\t\t\t\tvar dbid=result.result[0].id;\n\t\t\t\t\tvis.conn.sendTo(instance, 'query', \n\t\t\t\t\t\t\"select COUNT(ts) AS rowcount from iobroker.ts_number where id=\" + dbid + \" and ts>\" + start\n\t\t\t\t\t, function (result) {\n\t\t\t\t\t\tif (result.error) {\n\t\t\t\t\t\t\tconsole.error(result.error);\t\t\t\n\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// show result\n\t\t\t\t\t\t\tconsole.log('Rows: ' + JSON.stringify(result.result));\n\t\t\t\t\t\t\tif (result.result[0] && result.result[0].rowcount){\n\t\t\t\t\t\t\t\tvar rowcount=result.result[0].rowcount;\n\t\t\t\t\t\t\t\tif (rowcount<1000) {\n\t\t\t\t\t\t\t\t\tvar sql = \"SELECT ts,val FROM iobroker.ts_number where id=\" + dbid;\n\t\t\t\t\t\t\t\t} else if (rowcount<10000) {\n\t\t\t\t\t\t\t\t\tvar sql = \"SELECT * FROM ( SELECT @row := @row +1 AS rownum, ts,val FROM (SELECT @row :=0) r, iobroker.ts_number where id=\" + dbid +\" and ts>\" + start +\") ranked WHERE rownum % (\" + rowcount + \" DIV 1000) = 1\";\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else if (rowcount<50000) {\n\t\t\t\t\t\t\t\t\tvar sql = \"SELECT * FROM ( SELECT @row := @row +1 AS rownum, ts,val FROM (SELECT @row :=0) r, iobroker.ts_number where id=\" + dbid +\" and ts>\" + start +\") ranked WHERE rownum % (\" + rowcount + \" DIV 500) = 1\";\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar sql = \"SELECT * FROM ( SELECT @row := @row +1 AS rownum, ts,val FROM (SELECT @row :=0) r, iobroker.ts_number where id=\" + dbid +\" and ts>\" + start +\") ranked WHERE rownum % (\" + rowcount + \" DIV 300) = 1\";\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvis.conn.sendTo(instance, 'query', sql\n\t\t\t\t\t\t\t\t, function (result) {\n\t\t\t\t\t\t\t\t\tif (result.error) {\n\t\t\t\t\t\t\t\t\t\tconsole.error(result.error);\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// show result\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < result.result.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\teventDate=normalizeDate(new Date (result.result[i].ts),mode);\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(eventDate + ':' + result.result[i].val);\n\t\t\t\t\t\t\t\t\t\t\tdata.push ([eventDate.getTime(),(result.result[i].val || 0) * multiplicator]);\n\t\t\t\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t\t\t\t\t// free memory\n\t\t\t\t\t\t\t\t\t\tres = null;\t\t\n\t\t\t\t\t\t\t\t\t\tif (currentId) {\n\t\t\t\t\t\t\t\t\t\t\tdata.push ([normalizeDate(new Date (),mode).getTime(),(vis.states[currentId + '.val'] || 0) * multiplicator]);\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t});\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tif (callback) callback();\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t});\n\t} else {\n\t\tif (callback) callback();\n\t}\n}\n\n\nfunction readOneLineRange(chart,id,instance,currentId,multiplicator, index,mode,start,end,virtualStart,virtualEnd,callback) {\n\n    var option = {};\n\tvar eventDate;\n\tvar lastEventDate=new Date (0);\t\n\tvar currentYear=new Date ().getFullYear();\n\tvar data = [];\n\tif (virtualStart<start) data.push([virtualStart,0]);\n\toption.start=start;\n\toption.end=end;\n    option.instance  = instance;\n\toption.aggregate='minmax';\n\t//option.count=2000;\n\toption.timeout=12000;\n    console.log(JSON.stringify(option));\n    console.log('Load Range for ' + id +' '+ new Date(option.start) + ' - ' + new Date(option.end));\n\tvis.getHistory(id, option, function (err, res) {\n        if (err && Object.keys(err).length > 0) console.error('Error Object: ' + JSON.stringify(err));\n        if (!err && res) {\n\t\t\tconsole.log('got History data. Count:' + res.length);\t\t\n            for (var i = 0; i < res.length; i++) {\n\t\t\t\teventDate=normalizeDate(new Date (res[i].ts),mode);\n\t\t\t\t//console.log(id +' '+ new Date (res[i].ts)+ ' n ' + eventDate + ':' + res[i].val);\n\t\t\t\tif (res[i].val!=null){\n\t\t\t\t\tif (lastEventDate.getTime()==eventDate.getTime()) {\n\t\t\t\t\t\t//console.log('replace ' + new Date (data[data.length-1][0]) + ':' + res[i].val);\t\t\t\t\t\n\t\t\t\t\t\tdata[data.length-1][1]=(res[i].val || 0) * multiplicator;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.push ([eventDate.getTime(),(res[i].val || 0) * multiplicator]);\n\t\t\t\t\t\tlastEventDate=eventDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \t\n            // free memory\n            res = null;\n        }\n\n        if (currentId) {\n\t\t\tconsole.log ('Add current value for ' + currentId + ': date ' + normalizeDate(new Date (),mode).getTime() + 'value ' + vis.states[currentId + '.val']);\n\t\t\tif (data.length>0 && data[data.length-1][0]== normalizeDate(new Date (),mode).getTime()){\n\t\t\t\tdata[data.length-1][1]=(vis.states[currentId + '.val']|| 0) * multiplicator;\n\t\t\t} else {\n\t\t\t\tdata.push ([normalizeDate(new Date (),mode).getTime(),(vis.states[currentId + '.val']|| 0) * multiplicator]);\n\t\t\t}\n\t\t};\n\t\tif (virtualEnd>end) data.push([virtualEnd,0]);\n\t\tchart.series[index].setData (data,false);\n  \t    if (callback) callback();\n    });\n}\n\nfunction readAndAddOneLineRange(chart,id,instance,multiplicator, index,mode,start,end,newMax,callback) {\n\n    var option = {};\n\tvar eventDate;\n\tvar lastEventDate=new Date (0);\t\n\tvar currentYear=new Date ().getFullYear();\n\tvar data = [];\n\toption.start=start;\n\toption.end=end;\n    option.instance  = instance;\n\toption.aggregate='minmax';\n\toption.timeout=12000;\n    console.log('Load Range for ' + id +' '+ new Date(option.start) + ' - ' + new Date(option.end));\n\tvis.getHistory(id, option, function (err, res) {\n        if (err && Object.keys(err).length > 0) console.error('Error Object: ' + JSON.stringify(err));\n        if (!err && res) {\n\t\t\tconsole.log('got History data. Count:' + res.length);\t\t\n            for (var i = 0; i < res.length; i++) {\n\t\t\t\teventDate=normalizeDate(new Date (res[i].ts),mode);\n\t\t\t\tif (res[i].val!=null){\n\t\t\t\t\tif (lastEventDate.getTime()==eventDate.getTime()) {\n\t\t\t\t\t\tdata[data.length-1][1]=(res[i].val || 0) * multiplicator;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.push ([eventDate.getTime(),(res[i].val || 0) * multiplicator]);\n\t\t\t\t\t\tlastEventDate=eventDate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \t\n            // free memory\n            res = null;\n\t\t\tif (data.length>0 && newMax< data[data.length-1][0])newMax=data[data.length-1][0];\n\t\t\tfor (var i=0;i<data.length;i++){\n\t\t\t\t//console.log(' add point to ' + id + ':' + JSON.stringify(data[i]));\t\n\t\t\t\tchart.series[index].addPoint (data[i],false,false,false,false); \t\t\t\t\n\t\t\t};\t\t\t\t\n        }\n  \t    if (callback) callback(newMax);\n    });\n}\n\n\nfunction loadSeriesRange(chart,oidList, j,mode,start, end,virtualStart,virtualEnd, callback) {\n    j = j || 0;\n    if (j >= oidList.length) {\n        return callback && callback();\n    } else {\n\t\tif (oidList[j].historyOID && oidList[j].instance) {\n\t\t\treadOneLineRange(chart,oidList[j].historyOID,oidList[j].instance,oidList[j].currentOID,oidList[j].multiplicator,j,mode,start,end,virtualStart,virtualEnd, function () {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tloadSeriesRange(chart,oidList, j+1,mode,start, end,virtualStart,virtualEnd, callback);\n\t\t\t\t}, 10);\n\t\t\t});\n\t\t}else{\n            setTimeout(function () {\n\t\t\t\t\tloadSeriesRange(chart,oidList, j+1,mode,start, end,virtualStart,virtualEnd, callback);\n            }, 10);\t\t\t\n\t\t}\n    }\n}\n\n\nfunction loadAndAddSeriesRange(chart,oidList, j,mode,start, end, newMax, callback) {\n    j = j || 0;\n    if (j >= oidList.length) {\n        return callback && callback(newMax);\n    } else {\n\t\tif (oidList[j].historyOID && oidList[j].instance) {\n\t\t\treadAndAddOneLineRange(chart,oidList[j].historyOID,oidList[j].instance,oidList[j].multiplicator,j,mode,start,end,newMax, function (newMax) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tloadAndAddSeriesRange(chart,oidList, j+1,mode,start, end,newMax, callback);\n\t\t\t\t}, 10);\n\t\t\t});\n\t\t}else{\n            setTimeout(function () {\n\t\t\t\t\tloadAndAddSeriesRange(chart,oidList, j+1,mode,start, end,newMax, callback);\n            }, 10);\t\t\t\n\t\t}\n    }\n}\n\nfunction normalizeDate (date,mode) {\n\tif (mode=='hour') {\n\t\tdate.setMilliseconds(0);\n\t\tdate.setSeconds(0);\t\n\t\tdate.setMinutes(0);\n\t} else if (mode=='day') {\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\t\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(0);\t\t\n\t} else if (mode=='week') {\n\t\tvar day = date.getDay();\n\t\tvar diff = date.getDate() - day + (day == 0 ? -6:1);\n\t\tdate=new Date(date.setDate(diff));\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\t\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(0);\t\t\t\t\n\t\treturn date;\n\t} else if (mode=='month') {\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\t\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(0);\t\t\n\t\tdate.setUTCDate(1);\n\t} else if (mode=='year') {\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\t\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(0);\t\t\n\t\tdate.setUTCDate(1);\n\t\tdate.setUTCMonth(0);\n\t};\n\treturn date;\n}\n\n\n\n\t\n\t\n\t\n \tvar minDate=new Date (2020,0,1).getTime();\n(function(H) {\n    H.Chart.prototype.pan = function(e, panning) {\n        var chart = this,\n            hoverPoints = chart.hoverPoints,\n            panningOptions, chartOptions = chart.options.chart,\n            doRedraw, type;\n        if (typeof panning === 'object') {\n            panningOptions = panning;\n        } else {\n            panningOptions = {\n                enabled: panning,\n                type: 'x'\n            };\n        }\n        if (chartOptions && chartOptions.panning) {\n            chartOptions.panning = panningOptions;\n        }\n        type = panningOptions.type;\n        H.fireEvent(this, 'pan', {\n            originalEvent: e\n        }, function() {\n            // remove active points for shared tooltip\n            if (hoverPoints) {\n                hoverPoints.forEach(function(point) {\n                    point.setState();\n                });\n            }\n            // panning axis mapping\n            var xy = [1]; // x\n            if (type === 'xy') {\n                xy = [1, 0];\n            } else if (type === 'y') {\n                xy = [0];\n            }\n            xy.forEach(function(isX) {\n                var axis = chart[isX ? 'xAxis' : 'yAxis'][0],\n                    axisOpt = axis.options,\n                    horiz = axis.horiz,\n                    mousePos = e[horiz ? 'chartX' : 'chartY'],\n                    mouseDown = horiz ? 'mouseDownX' : 'mouseDownY',\n                    startPos = chart[mouseDown],\n                    halfPointRange = (axis.pointRange || 0) / 2,\n                    pointRangeDirection = (axis.reversed && !chart.inverted) ||\n                    (!axis.reversed && chart.inverted) ?\n                    -1 :\n                    1,\n                    extremes = axis.getExtremes(),\n                    panMin = axis.toValue(startPos - mousePos, true) +\n                    halfPointRange * pointRangeDirection,\n                    panMax = axis.toValue(startPos + axis.len - mousePos, true) -\n                    halfPointRange * pointRangeDirection,\n                    flipped = panMax < panMin,\n                    newMin = flipped ? panMax : panMin,\n                    newMax = flipped ? panMin : panMax,\n                    \n                    // CHANGE\n                    \n                    paddedMin = minDate,\n                    paddedMax = new Date().getTime(),\n                            \n                    // CHANGE\n                            \n                    spill;\n\n                // It is not necessary to calculate extremes on ordinal axis,\n                // because the are already calculated, so we don't want to\n                // override them.\n                if (!axisOpt.ordinal) {\n                    // If the new range spills over, either to the min or max,\n                    // adjust the new range.\n                    if (isX) {\n                        spill = paddedMin - newMin;\n                        if (spill > 0) {\n                            newMax += spill;\n                            newMin = paddedMin;\n                        }\n                        spill = newMax - paddedMax;\n                        if (spill > 0) {\n                            newMax = paddedMax;\n                            newMin -= spill;\n                        }\n                    }\n                    // Set new extremes if they are actually new\n                    if (axis.series.length &&\n                        newMin !== extremes.min &&\n                        newMax !== extremes.max &&\n                        isX ? true : (axis.panningState &&\n                            newMin >= axis.panningState\n                            .startMin &&\n                            newMax <= axis.panningState\n                            .startMax //\n                        )) {\n                        axis.setExtremes(newMin, newMax, false, false, {\n                            trigger: 'pan'\n                        });\n                        doRedraw = true;\n                    }\n                    // set new reference for next run:\n                    chart[mouseDown] = mousePos;\n                }\n            });\n            if (doRedraw) {\n                chart.redraw(false);\n            }\n            H.css(chart.container, {\n                cursor: 'move'\n            });\n        });\n\t\t\t\t\n    };\n\t\n\t/**\n\t * Zoom into a given portion of the chart given by axis coordinates.\n\t *\n\t * @private\n\t * @function Highcharts.Chart#zoom\n\t * @param {Highcharts.SelectEventObject} event\n\t */\n\tH.Chart.prototype.zoom = function (event) {\n\t\tconsole.log (\"Chart Zoom handler \");\n\t\tvar chart = this,\n\t\t\tpointer = chart.pointer,\n\t\t\tmouseDownPos = chart.inverted ?\n\t\t\t\tpointer.mouseDownX : pointer.mouseDownY;\n\t\tvar displayButton = false,\n\t\t\thasZoomed;\n\t\t// If zoom is called with no arguments, reset the axes\n\t\tif (!event || event.resetSelection) {\n\t\t\tchart.axes.forEach(function (axis) {\n\t\t\t\thasZoomed = axis.zoom();\n\t\t\t});\n\t\t\tpointer.initiated = false; // #6804\n\t\t}\n\t\telse { // else, zoom in on all axes\n\t\t\tevent.xAxis.concat(event.yAxis).forEach(function (axisData) {\n\t\t\t\tvar axis = axisData.axis,\n\t\t\t\t\taxisStartPos = chart.inverted ? axis.left : axis.top,\n\t\t\t\t\taxisEndPos = chart.inverted ?\n\t\t\t\t\t\taxisStartPos + axis.width : axisStartPos + axis.height,\n\t\t\t\t\tisXAxis = axis.isXAxis;\n\t\t\t\tvar isWithinPane = false;\n\t\t\t\t// Check if zoomed area is within the pane (#1289).\n\t\t\t\t// In case of multiple panes only one pane should be zoomed.\n\t\t\t\tif ((!isXAxis &&\n\t\t\t\t\tmouseDownPos >= axisStartPos &&\n\t\t\t\t\tmouseDownPos <= axisEndPos) ||\n\t\t\t\t\tisXAxis ||\n\t\t\t\t\t!H.defined(mouseDownPos)) {\n\t\t\t\t\tisWithinPane = true;\n\t\t\t\t}\n\t\t\t\t// don't zoom more than minRange\n\t\t\t\tif (pointer[isXAxis ? 'zoomX' : 'zoomY'] && isWithinPane) {\n\t\t\t\t\thasZoomed = axis.zoom(axisData.min, axisData.max);\n\t\t\t\t\tif (axis.displayBtn) {\n\t\t\t\t\t\tdisplayButton = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// Show or hide the Reset zoom button\n\t\tvar resetZoomButton = chart.resetZoomButton;\n\t\tif (displayButton && !resetZoomButton) {\n\t\t\tchart.showResetZoom();\n\t\t}\n\t\telse if (!displayButton && H.isObject(resetZoomButton)) {\n\t\t\tchart.resetZoomButton = resetZoomButton.destroy();\n\t\t}\n\t\t// Redraw\n\t\tif (hasZoomed) {\n\t\t\tchart.redraw(H.pick(chart.options.chart.animation, event && event.animation, chart.pointCount < 100));\n\t\t}\n\t};\n\t\t\n\t\t\n\tH.Axis.prototype.zoom = function (newMin, newMax) {\n\t\tconsole.log (\"Axis Zoom handler min:\"+ new Date(newMin) + \" max:\" + new Date (newMax));\n\t\tvar chart = this\n\t\tvar maxX,minX;\n\t\tvar chart=this.chart;\n\t\tif (chart && chart.navigator && chart.navigator.xAxis) {\n\t\t\tminX=chart.navigator.xAxis.min;\n\t\t\tmaxX=chart.navigator.xAxis.max;\n\t\t}\n\t\tvar axis = this,\n\t\t\tdataMin = this.dataMin,\n\t\t\tdataMax = this.dataMax,\n\t\t\toptions = this.options,\n\t\t\tmin = Math.min(dataMin,\n\t\t\tH.pick(options.min,\n\t\t\tdataMin),minX),\n\t\t\tmax = Math.max(dataMax,\n\t\t\tH.pick(options.max,\n\t\t\tdataMax),maxX),\n\t\t\tevt = {\n\t\t\t\tnewMin: newMin,\n\t\t\t\tnewMax: newMax\n\t\t\t};\n\t\tH.fireEvent(this, 'zoom', evt, function (e) {\n\t\t\t// Use e.newMin and e.newMax - event handlers may have altered them\n\t\t\tvar newMin = e.newMin,\n\t\t\t\tnewMax = e.newMax;\n\t\t\tif (newMin !== axis.min || newMax !== axis.max) { // #5790\n\t\t\t\t// Prevent pinch zooming out of range. Check for defined is for\n\t\t\t\t// #1946. #1734.\n\t\t\t\tif (!axis.allowZoomOutside) {\n\t\t\t\t\t// #6014, sometimes newMax will be smaller than min (or\n\t\t\t\t\t// newMin will be larger than max).\n\t\t\t\t\tif (H.defined(dataMin)) {\n\t\t\t\t\t\tif (newMin < min) {\n\t\t\t\t\t\t\tnewMin = min;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (newMin > max) {\n\t\t\t\t\t\t\tnewMin = max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (H.defined(dataMax)) {\n\t\t\t\t\t\tif (newMax < min) {\n\t\t\t\t\t\t\tnewMax = min;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (newMax > max) {\n\t\t\t\t\t\t\tnewMax = max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// In full view, displaying the reset zoom button is not\n\t\t\t\t// required\n\t\t\t\t//axis.displayBtn = (typeof newMin !== 'undefined' ||\n\t\t\t\t//\ttypeof newMax !== 'undefined');\n\t\t\t\taxis.displayBtn = false;\n\t\t\t\t// Do it\n\t\t\t\taxis.setExtremes(newMin, newMax, false, void 0, { trigger: 'zoom' });\n\t\t\t}\n\t\t\te.zoomed = true;\n\t\t});\n\t\treturn evt.zoomed;\n\t};\n\t\t\n\t/**\n\t * Handle touch events with two touches\n\t * @private\n\t * @function Highcharts.Pointer#pinch\n\t */\n\tH.Pointer.prototype.pinch = function (e) {\n\t\tconsole.log (\"Pointer pinch handler \");\n\t\n\t\tvar self = this,\n\t\t\tchart = self.chart,\n\t\t\tpinchDown = self.pinchDown,\n\t\t\ttouches = (e.touches || []),\n\t\t\ttouchesLength = touches.length,\n\t\t\tlastValidTouch = self.lastValidTouch,\n\t\t\thasZoom = self.hasZoom,\n\t\t\ttransform = {},\n\t\t\tfireClickEvent = touchesLength === 1 && ((self.inClass(e.target, 'highcharts-tracker') &&\n\t\t\t\tchart.runTrackerClick) ||\n\t\t\t\tself.runChartClick),\n\t\t\tclip = {};\n\t\tvar selectionMarker = self.selectionMarker;\n\t\t// Don't initiate panning until the user has pinched. This prevents us\n\t\t// from blocking page scrolling as users scroll down a long page\n\t\t// (#4210).\n\t\tif (touchesLength > 1) {\n\t\t\tself.initiated = true;\n\t\t}\n\t\telse if (touchesLength === 1 && this.followTouchMove) {\n\t\t\t// #16119: Prevent blocking scroll when single-finger panning is\n\t\t\t// not enabled\n\t\t\tself.initiated = false;\n\t\t}\n\t\t// On touch devices, only proceed to trigger click if a handler is\n\t\t// defined\n\t\tif (hasZoom &&\n\t\t\tself.initiated &&\n\t\t\t!fireClickEvent &&\n\t\t\te.cancelable !== false) {\n\t\t\te.preventDefault();\n\t\t}\n\t\t// Normalize each touch\n\t\t[].map.call(touches, function (e) {\n\t\t\treturn self.normalize(e);\n\t\t});\n\t\t// Register the touch start position\n\t\tif (e.type === 'touchstart') {\n\t\t\t[].forEach.call(touches, function (e, i) {\n\t\t\t\tpinchDown[i] = { chartX: e.chartX, chartY: e.chartY };\n\t\t\t});\n\t\t\tlastValidTouch.x = [pinchDown[0].chartX, pinchDown[1] &&\n\t\t\t\t\tpinchDown[1].chartX];\n\t\t\tlastValidTouch.y = [pinchDown[0].chartY, pinchDown[1] &&\n\t\t\t\t\tpinchDown[1].chartY];\n\t\t\t// Identify the data bounds in pixels\n\t\t\tchart.axes.forEach(function (axis) {\n\t\t\t\tif (axis.zoomEnabled) {\n\t\t\t\t\tvar bounds = chart.bounds[axis.horiz ? 'h' : 'v'],\n\t\t\t\t\t\tminPixelPadding = axis.minPixelPadding,\n\t\t\t\t\t\tmin = axis.toPixels(Math.min(H.pick(axis.options.min,\n\t\t\t\t\t\taxis.dataMin),\n\t\t\t\t\t\taxis.dataMin,minDate)),\n\t\t\t\t\t\tmax = axis.toPixels(Math.max(H.pick(axis.options.max,\n\t\t\t\t\t\taxis.dataMax),\n\t\t\t\t\t\taxis.dataMax,new Date().getTime())),\n\t\t\t\t\t\tabsMin = Math.min(min,\n\t\t\t\t\t\tmax),\n\t\t\t\t\t\tabsMax = Math.max(min,\n\t\t\t\t\t\tmax);\n\t\t\t\t\t// Store the bounds for use in the touchmove handler\n\t\t\t\t\tbounds.min = Math.min(axis.pos, absMin - minPixelPadding);\n\t\t\t\t\tbounds.max = Math.max(axis.pos + axis.len, absMax + minPixelPadding);\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.res = true; // reset on next move\n\t\t\t// Optionally move the tooltip on touchmove\n\t\t}\n\t\telse if (self.followTouchMove && touchesLength === 1) {\n\t\t\tthis.runPointActions(self.normalize(e));\n\t\t\t// Event type is touchmove, handle panning and pinching\n\t\t}\n\t\telse if (pinchDown.length) { // can be 0 when releasing, if touchend\n\t\t\t// fires first\n\t\t\tH.fireEvent(chart, 'touchpan', { originalEvent: e }, function () {\n\t\t\t\t// Set the marker\n\t\t\t\tif (!selectionMarker) {\n\t\t\t\t\t// @todo It's a mock object, so maybe we need a separate\n\t\t\t\t\t// interface\n\t\t\t\t\tself.selectionMarker = selectionMarker = extend({\n\t\t\t\t\t\tdestroy: H.noop,\n\t\t\t\t\t\ttouch: true\n\t\t\t\t\t}, chart.plotBox);\n\t\t\t\t}\n\t\t\t\tself.pinchTranslate(pinchDown, touches, transform, selectionMarker, clip, lastValidTouch);\n\t\t\t\tself.hasPinched = hasZoom;\n\t\t\t\t// Scale and translate the groups to provide visual feedback\n\t\t\t\t// during pinching\n\t\t\t\tself.scaleGroups(transform, clip);\n\t\t\t});\n\t\t\tif (self.res) {\n\t\t\t\tself.res = false;\n\t\t\t\tthis.reset(false, 0);\n\t\t\t}\n\t\t}\n\t};\n\t\n}(Highcharts));\n \n\nvar types = ['DOMMouseScroll', 'mousewheel'];\n\n$.event.special.mousewheel = {\n    setup: function() {\n        if ( this.addEventListener ) {\n            for ( var i=types.length; i; ) {\n                this.addEventListener( types[--i], handler, false );\n            }\n        } else {\n            this.onmousewheel = handler;\n        }\n    },\n    \n    teardown: function() {\n        if ( this.removeEventListener ) {\n            for ( var i=types.length; i; ) {\n                this.removeEventListener( types[--i], handler, false );\n            }\n        } else {\n            this.onmousewheel = null;\n        }\n    }\n};\n\n$.fn.extend({\n    mousewheel: function(fn) {\n        return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n    },\n    \n    unmousewheel: function(fn) {\n        return this.unbind(\"mousewheel\", fn);\n    }\n});\n\n\nfunction handler(event) {\n    var orgEvent = event || window.event, args = [].slice.call( arguments, 1 ), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;\n    event = $.event.fix(orgEvent);\n    event.type = \"mousewheel\";\n    \n    // Old school scrollwheel delta\n    if ( event.wheelDelta ) { delta = event.wheelDelta/120; }\n    if ( event.detail     ) { delta = -event.detail/3; }\n    \n    // New school multidimensional scroll (touchpads) deltas\n    deltaY = delta;\n    \n    // Gecko\n    if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n        deltaY = 0;\n        deltaX = -1*delta;\n    }\n    \n    // Webkit\n    if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY/120; }\n    if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = -1*orgEvent.wheelDeltaX/120; }\n    \n    // Add event and delta to the front of the arguments\n    args.unshift(event, delta, deltaX, deltaY);\n    \n    return $.event.handle.apply(this, args);\n}\n  \n \n\n\t  \n\tvis.binds.photovoltaikcharts = {\n\t\tversion: \"1.0.9\",\n\t\tupdateIntervalHandler:[],\n\t\treloadIntervalHandler:[],\n\t\tdelayedRefreshHandler:[],\n\t\t\n\t\tshowVersion: function () {\n\t\t\tif (vis.binds.photovoltaikcharts.version) {\n\t\t\t\tconsole.log('Version vis-photovoltaikcharts: ' + vis.binds.photovoltaikcharts.version);\n\t\t\t\tvis.binds.photovoltaikcharts.version = null;\n\t\t\t}\n\t\t},\n\t\t\n\t\thighchartsOptions:{\n\t\t\t\tlang: {\n\t\t\t\t\tmonths: [\n\t\t\t\t\t\t'Januar', 'Februar', 'März', 'April',\n\t\t\t\t\t\t'Mai', 'Juni', 'Juli', 'August',\n\t\t\t\t\t\t'September', 'Oktober', 'November', 'Dezember'\n\t\t\t\t\t],\n\t\t\t\t\tweekdays: [\n\t\t\t\t\t\t'Sonntag', 'Montag', 'Dienstag', 'Mittwoch',\n\t\t\t\t\t\t'Donnerstag', 'Freitag', 'Samstag'\n\t\t\t\t\t],\n\t\t\t\t\tshortWeekdays:[\n\t\t\t\t\t\t'So', 'Mo', 'Di', 'Mi',\n\t\t\t\t\t\t'Do', 'Fr', 'Sa'\n\t\t\t\t\t],\n\t\t\t\t\tshortMonths:[\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\",\n\t\t\t\t\t\t\t\t\t\t\t\"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"],\n\t\t\t\t\tcontextButtonTitle: 'Kontextmenü',\n\t\t\t\t\tdecimalPoint:',',\n\t\t\t\t\tdownloadCSV:'CSV-Datei herunterladen',\n\t\t\t\t\tdownloadJPEG:'JPG-Datei herunterladen',\n\t\t\t\t\tdownloadPDF:'PDF-Datei herunterladen',\n\t\t\t\t\tdownloadPNG:'PNG-Datei herunterladen',\n\t\t\t\t\tdownloadSVG:'SVG-Datei herunterladen',\n\t\t\t\t\tdownloadXLS:'XLS-Datei herunterladen',\n\t\t\t\t\texitFullscreen:'Vollbildanzeige beenden',\n\t\t\t\t\thideData: 'Datentabellen ausblenden',\n\t\t\t\t\tloading:'Laden...',\n\t\t\t\t\tnoData:'Keine Daten',\n\t\t\t\t\tnumericSymbols:[\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"],\n\t\t\t\t\tprintChart:'Diagramm drucken',\n\t\t\t\t\tresetZoom: 'Zoom zurücksetzen',\n\t\t\t\t\tresetZoomTitle: 'Zoom auf 1:1 zurücksetzen',\n\t\t\t\t\tviewData: 'Datentabelle anzeigen',\n\t\t\t\t\tviewFullscreen:'Als Vollbild anzeigen',\n\t\t\t\t\texportData:{\n\t\t\t\t\t\tannotationHeader:'Anmerkungen',\n\t\t\t\t\t  categoryDatetimeHeader:'Datum/Zeit',\n\t\t\t\t\t  categoryHeader:'Kategorie'\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t},\n\t\t\n\t\thighchartsSeriesUnits:[[\n\t\t\t\t\t\t\t\t\t'second',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'minute',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'hour',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'day',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'week',\n\t\t\t\t\t\t\t\t\t[1]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'month',\n\t\t\t\t\t\t\t\t\t[1, 3, 6]\n\t\t\t\t\t\t\t\t], [\n\t\t\t\t\t\t\t\t\t'year',\n\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t]],\n\t\t\t\t\t\t\t\t\n\t\thighchartsDateTimeLabelFormats:{\n\t\t\t\t\t\tmillisecond: '%H:%M:%S.%L',\n\t\t\t\t\t\tsecond: '%H:%M:%S',\n\t\t\t\t\t\tminute: '%H:%M',\n\t\t\t\t\t\thour: '%H:%M',\n\t\t\t\t\t\tday: '%e. %b',\n\t\t\t\t\t\tweek: '%e. %b',\n\t\t\t\t\t\tmonth: '%b \\'%y',\n\t\t\t\t\t\tyear: '%Y'      \n\t\t\t\t\t},\n\t\tscrollspeed:0.3,\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\tgetUniqueOID: function (oidList) {\n\t\t\tvar result = [];\n\t\t\toidList.forEach(function(item) {\n\t\t\t\t if(result.indexOf(item.currentOID) < 0) {\n\t\t\t\t\t result.push(item.currentOID);\n\t\t\t\t }\n\t\t\t});\n\t\t\treturn result;\n\t\t},\n\t\t\n\t\tfindOID: function findOid (oidList,iod){\t\t\t\t\n\t\t\tvar result = [];\n\t\t\tfor (var i=0;i<\toidList.length;i++){\n\t\t\t\tif (oidList[i].currentOID + '.val'==iod) result.push (i);\n\t\t\t}\n\t\t\treturn result;\t\t\t\n\t\t},\n\n\t\tcreateMonthlyWidget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\n\t\t\tvar fbobj=this;\n\t\t\tconsole.log(' vis-photovoltaikcharts: Create Monthly Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createMonthlyWidget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\tif (data.target) {\n\t\t\t\ttargetArray =data.target.split (',');\n\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\toidList =[];\n\t\t\tseriesData=[];\n\t\t\tvar j=0;\n\t\t\tvar k;\n\t\t\tfor (k=1;k<=data.seriesCount;k++){\n\t\t\t\tif (data['serieshistoryoid'+k] && data ['instance'+ k ]){\n\t\t\t\t\toidList.push ({id:j, historyOID:data['serieshistoryoid' + k],instance:data ['instance'+ k ],currentOID:data ['seriescurrentoid' + k],  multiplicator:parseFloat(data ['multiplicator'+ k ]) || 1,lastX:0 });\t\t\t\t\t\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar today = new Date();\n\t\t\tvar numberOfYears=data.numberOfYears || 3;\n\n\t\t\tvar year = today.getFullYear();\n\t\t\tvar targetData = [[0,0,0],[0.8,0,0],[1.7,0,0],[2.6,0,0],[3.5,0,0],[4.7,0,0],[5.7,0,0],[6.7,0,0],[7.6,0,0],[8.6,0,0],[9.5,0,0],[10.4,0,0],[11.4,0,0]];\n\t\t\tvar categories = [year.toString(), (year-1).toString(), (year-2).toString()];\n\t\t\tvar categories = [];\n\t\t\tseriesData=[];\n\t\t\tfor (var i=0;i<numberOfYears;i++){\n\t\t\t\tcategories.push (year-i);\n\t\t\t\t\n\t\t\t\tfor (k=1;k<=data.seriesCount;k++){\n\t\t\t\t\tif (data['serieshistoryoid'+k] && data ['instance'+ k ]){\n\t\t\t\t\t\tseriesData.push ({\n\t\t\t\t\t\t\tname: (data['serieslabel' + k] || '') + ' ' + (year-numberOfYears+i+1).toString().substr(-2),\n\t\t\t\t\t\t\tdata: [0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0],\n\t\t\t\t\t\t\tstack: numberOfYears-i-1,\n\t\t\t\t\t\t\tcolor: data['yearcolor'+ k + (numberOfYears-i) ] || undefined,\n\t\t\t\t\t\t\tlineWidth: data['serieslinewidth'+ k] || 1,\n\t\t\t\t\t\t\tfillOpacity: (data['seriesopacity'+k]? parseFloat(data['seriesopacity'+k])/100 : 0.3),\n\t\t\t\t\t\t\ttype: data['seriesType'+k] || 'column',\n\t\t\t\t\t\t\topacity: 0.9\n\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tif (Array.isArray(targetArray)) {\n\t\t\t\tfor (var index = 0; index < targetArray.length; index++) {\n\t\t\t\t\ttargetData [index][1]=parseFloat(targetArray[index]);\n\t\t\t\t}\t\t\n\t\t\t\t\n\t\t\t\tseriesData.push (\n\t\t\t\t{\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tlineWidth:2,\n\t\t\t\t\t\t\tname: data.targetName || 'Target',\n\t\t\t\t\t\t\tstep: 'left',\n\t\t\t\t\t\t\tdata: targetData,\n\t\t\t\t\t\t\tcolor: '#A4A4A4',\n\t\t\t\t\t\t\tmarker: {\n\t\t\t\t\t\t\t\tenabled:false\n\t\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (vis.language === 'de') Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\t_readData(seriesData,oidList,function () {\n\t\t\t\t\tvar unit=data.unit;\n\t\t\t\t\tchart = Highcharts.chart(divId + widgetID, {\n\t\t\t\t\tchart: {\n\t\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\t\ttype: 'column',\n\t\t\t\t\t\t\t\toptions3d: {\n\t\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\t\talpha: data.alpha || 8,\n\t\t\t\t\t\t\t\t\tbeta: data.beta || 8,\n\t\t\t\t\t\t\t\t\tdepth: data.depth || 200,\n\t\t\t\t\t\t\t\t\tviewDistance: data.viewDistance || 5,\n\t\t\t\t\t\t\t\t\tframe: {\n\t\t\t\t\t\t\t\t\t\tbottom: {\n\t\t\t\t\t\t\t\t\t\tsize: 1,\n\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,0.05)'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\ttext: data.title\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\txAxis: {\n\t\t\t\t\t\t\t\t\tcategories: months [systemLang]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tyAxis: {\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\ttext: unit\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tzAxis: {\n\t\t\t\t\t\t\t  min: 0,\n\t\t\t\t\t\t\t  max: 2,\n\t\t\t\t\t\t\t  labels: {\n\t\t\t\t\t\t\t\ty: 5,\n\t\t\t\t\t\t\t\trotation: 18\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\tcategories: categories\n\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t  plotOptions: {\n\t\t\t\t\t\t\t\t\tcolumn: {\n\t\t\t\t\t\t\t\t\t\tstacking: 'normal'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  series: {\n\t\t\t\t\t\t\tgroupZPadding: 10,\n\t\t\t\t\t\t\tdepth: 50,\n\t\t\t\t\t\t\tgroupPadding: 0.05,\n\t\t\t\t\t\t\tgrouping: false,\n\t\t\t\t\t\t  }\n\t\t\t\t\t  },\n\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\t\t},\n\t\t\t\t\t\texporting: {\n\t\t\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t\t\t},\n\t\t\t\t\t  \n\t\t\t\t\t\ttooltip: {\n\t\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\t\tif (this.point.stackTotal){\n\t\t\t\t\t\t\t\t\treturn '<b>' + this.x + ' ' + this.series.chart.zAxis[0].options.categories[this.series.userOptions.stack] +  '</b><br/>' +\n\t\t\t\t\t\t\t\t\t\tthis.series.name + ': ' + this.y + '<br/>' +\n\t\t\t\t\t\t\t\t\t\t(data.stacklabel || 'Erzeugung:') + ' ' + this.point.stackTotal +\n\t\t\t\t\t\t\t\t\t\t(Array.isArray(targetArray)?'<br/>' +(data.targetName || 'Target') + ': ' + targetArray[this.point.x]:'')\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn '<b>' + this.x + '</b><br/>' +\n\t\t\t\t\t\t\t\t\t\tthis.series.name + ': ' + this.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseries: seriesData,\n\t\t\t\t\t\t\n\t\t\t\t\t\tcredits: {\n\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t}\n\t\t\t\t   });\t\t\t\t\t\t\n\n\t\t\t },0,1,(new Date(year-numberOfYears+1, 0, 1)).getTime());\n\n\t\t\tfunction getUniqueOID (oidList) {\n\t\t\t\tvar result = [];\n\t\t\t\toidList.forEach(function(item) {\n\t\t\t\t\t if(result.indexOf(item.currentOID) < 0) {\n\t\t\t\t\t\t result.push(item.currentOID);\n\t\t\t\t\t }\n\t\t\t\t});\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n            function findOid (oidList,iod){\t\t\t\t\n\t\t\t\tfor (var i=0;i<\toidList.length;i++){\n\t\t\t\t\tif (oidList[i].currentOID + '.val'==iod) return i;\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\n\t\t\t// subscribe on updates of value\n\t\t\t\n\t\t\tfunction onChangeSeries (e, newVal, oldVal) {\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar ids=fbobj.findOID(oidList,e.type);\n\t\t\t\tfor (var i=0;i<ids.length;i++){\t\t\t\t\n\t\t\t\t\tchart.series[(numberOfYears-1)* oidList.length +ids[i]].data[(new Date ()).getMonth()].update((parseFloat(newVal) || 0) * oidList[ids[i]].multiplicator);\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\n\n\t\t\tvar uniqueOID=fbobj.getUniqueOID (oidList);\n\t\t\tfor (var i=0;i<uniqueOID.length;i++){\n\t\t\t\tif (uniqueOID[i]) {\n\t\t\t\t\tconsole.log ('register on changes for ' + uniqueOID[i]);\n\t\t\t\t\tvis.states.bind(uniqueOID[i] + '.val', onChangeSeries);\n\t\t\t\t\t$div.data('bound', [uniqueOID[i] + '.val']);\n\t\t\t\t\t$div.data('bindHandler', onChangeSeries);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\n\t\t},\n\n\t\tcreateYearlyWidget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\n\t\t\tvar fbobj=this;\n\t\t\tconsole.log(' vis-photovoltaikcharts: Create Yearly Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createYearlyWidget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\n\t\t\tvar numberOfYears=data.numberOfYears || 4;\n\t\t\tvar today = new Date();\n\t\t\tvar year = today.getFullYear();\n\t\t\tvar categories = [];\n\t\t\tvar defaultData = [];\n\t\t\tfor (var i=numberOfYears-1;i>=0;i--){\n\t\t\t\tcategories.push (year-i);\n\t\t\t\tdefaultData.push (0);\n\t\t\t};\n\n\t\t\toidList =[];\n\t\t\tseriesData=[];\n\t\t\tvar j=0;\n\t\t\tvar i;\n\t\t\tfor (i=1;i<=data.seriesCount;i++){\n\t\t\t\tif (data['serieshistoryoid'+i] && data ['instance'+ i ]){\n\t\t\t\t\toidList.push ({id:j, historyOID:data['serieshistoryoid'+i],instance:data ['instance'+ i ],currentOID:data ['seriescurrentoid'+i],  multiplicator:parseFloat(data ['multiplicator'+ i ]) || 1,lastX:0 });\n\t\t\t\t\tseriesData.push ({\n\t\t\t\t\t\tname: data['serieslabel'+i] ,\n\t\t\t\t\t\tdata: defaultData.slice(0),\n\t\t\t\t\t\tcolor: data['seriescolor'+i] || undefined,\n\t\t\t\t\t\tlineWidth: data['serieslinewidth'+i] || 1,\n\t\t\t\t\t\tfillOpacity: (data['seriesopacity'+i]? parseFloat(data['seriesopacity'+i])/100 : 0.3),\n\t\t\t\t\t\ttype: data['seriesType'+i] || 'column',\n\t\t\t\t\t\topacity: 0.9\n\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\tvar plotLines=[];\n\t\t\tif (data.target) {\n\t\t\t\tplotLines.push ({color:\"#33FF50\",dashStyle:\"Solid\",label:data.targetName || 'Target',value:parseFloat(data.target),width:2});\n\t\t\t}\n\n\t\t\t_readData(seriesData,oidList,function () {\n\t\t\t\tif (vis.language === 'de') Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\t\tvar unit=data.unit;\n\t\t\t\tchart = Highcharts.chart(divId + widgetID, {\n\t\t\t\t\tchart: {\n\t\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\t\ttype: 'column',\n\t\t\t\t\t\t\t\toptions3d: {\n\t\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\t\talpha: data.alpha || 8,\n\t\t\t\t\t\t\t\t\tbeta: data.beta || 8,\n\t\t\t\t\t\t\t\t\tdepth: data.depth || 50,\n\t\t\t\t\t\t\t\t\tviewDistance: data.viewDistance || 5,\n\t\t\t\t\t\t\t\t\tframe: {\n\t\t\t\t\t\t\t\t\t\tbottom: {\n\t\t\t\t\t\t\t\t\t\tsize: 1,\n\t\t\t\t\t\t\t\t\t\tcolor: 'rgba(0,0,0,0.05)'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\ttext: data.title\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\txAxis: {\n\t\t\t\t\t\t\t\t\tcategories: categories\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tyAxis: {\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\ttext: unit\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tplotLines:plotLines\n\n\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t  series: {\n\t\t\t\t\t\t\tgroupZPadding: 10,\n\t\t\t\t\t\t\tdepth: 50,\n\t\t\t\t\t\t\tgroupPadding: 0.05,\n\t\t\t\t\t\t\tgrouping: false,\n\t\t\t\t\t\t  },\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\t},\n\t\t\t\t\texporting: {\n\t\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t\t},\n\t\t\t\t\t\t  \n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\tif (this.point.stackTotal){\n\t\t\t\t\t\t\t\treturn '<b>' + this.x + ' ' + this.series.chart.zAxis[0].options.categories[this.series.userOptions.stack] +  '</b><br/>' +\n\t\t\t\t\t\t\t\t\tthis.series.name + ': ' + this.y + '<br/>' +\n\t\t\t\t\t\t\t\t\t(data.stacklabel || 'Erzeugung:') + ' ' + this.point.stackTotal +\n\t\t\t\t\t\t\t\t\t(Array.isArray(targetArray)?'<br/>' +(data.targetName || 'Target') + ': ' + targetArray[this.point.x]:'')\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn '<b>' + this.x + '</b><br/>' +\n\t\t\t\t\t\t\t\t\tthis.series.name + ': ' + this.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\t\t\t\t\t\t\n\t\t\t\t\tseries: seriesData,\n\t\t\t\t\t\n\t\t\t\t\tcredits: {\n\t\t\t\t\t\tenabled: false\n\t\t\t\t\t}\n\t\t\t\t});\t\t\t\t\t\t\n\n\t\t\t },0,2,(new Date(year-numberOfYears+1, 0, 1)).getTime());\n\n  \n\n\t\t\t// subscribe on updates of value\n\t\t\t\n\t\t\tfunction onChangeSeries (e, newVal, oldVal) {\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar ids=fbobj.findOID(oidList,e.type);\n\t\t\t\tvar eventDate=normalizeDate (new Date (),data.normalizeDate);\n\t\t\t\tfor (var i=0;i<ids.length;i++){\t\t\t\t\n\t\t\t\t\tconsole.log ('add new series ' + (ids[i]+1) + ' value :' + eventDate + '(' + eventDate.getTime() + ') - ' + newVal);\n\t\t\t\t\tchart.series[ids[i]].data[numberOfYears-1].update((parseFloat(newVal) || 0) * oidList[ids[i]].multiplicator);\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tvar uniqueOID=fbobj.getUniqueOID (oidList);\n\t\t\tfor (var i=0;i<uniqueOID.length;i++){\n\t\t\t\tif (uniqueOID[i]) {\n\t\t\t\t\tconsole.log ('register on changes for ' + uniqueOID[i]);\n\t\t\t\t\tvis.states.bind(uniqueOID[i] + '.val', onChangeSeries);\n\t\t\t\t\t$div.data('bound', [uniqueOID[i] + '.val']);\n\t\t\t\t\t$div.data('bindHandler', onChangeSeries);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\t \t\t\t \n\t\t},\n\t\t\n\t\tcreateTimeseriesWidget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\t\t\tvar fbobj=this;\n\t\t\tvar loadRunning=false;\n\t\t\tvar refreshRequired=false;\n\t\t\tvar lastEvent=null;\n\t\t\tvar loadWaiting=false;\n\t\t\tvar navigationData=[];\n\t\t\tvar zoomlevel ={\"1d\":0,\"3d\":1,\"7d\":2,\"1m\":3,\"3m\":4,\"6m\":5,\"ytd\":6,\"1y\":7,\"all\":8};\n\t\t\t\n\t\t\tconsole.log(' photovoltaikcharts: Create Timeseries Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createTimeseriesWidget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\t\n\t\t\toidList =[];\n\t\t\tseriesData=[];\n\t\t\tvar j=0;\n\t\t\tvar i;\n\t\t\tfor (i=1;i<=data.seriesCount;i++){\n\t\t\t\tif (data['serieshistoryoid'+i] && data ['instance'+ i ]){\n\t\t\t\t\toidList.push ({id:j, historyOID:data['serieshistoryoid'+i],instance:data ['instance'+ i ],currentOID:data ['seriescurrentoid'+i],  multiplicator:parseFloat(data ['multiplicator'+ i ]) || 1,lastX:0 });\n\t\t\t\t\tseriesData.push ({\n\t\t\t\t\t\tname: data['serieslabel'+i] ,\n\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\tcolor: data['seriescolor'+i] || '#FF5A33',\n\t\t\t\t\t\tlineWidth: data['serieslinewidth'+i] || 1,\n\t\t\t\t\t\tfillOpacity: (data['seriesopacity'+i]? parseFloat(data['seriesopacity'+i])/100 : 0.3),\n\t\t\t\t\t\ttype: data['seriesType'+i] || 'areaspline',\n\t\t\t\t\t\tyAxis:(data['seriesaxis'+i]? parseInt(data['seriesaxis'+i]): 0),\n\t\t\t\t\t\tstep: (data['seriesstep'+i] && data['seriesstep'+i]!='no'?data['seriesstep'+i]: undefined),\n\t\t\t\t\t\tstacking: (data['seriesstacking'+i] && data['seriesstacking'+i]!='no' ? data['seriesstacking'+i] :undefined),\n\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\tenabled: (data['seriesType'+i]!='column' ? true: false),\n\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\tunits:(data['seriesType'+i]!='column' ? fbobj.highchartsSeriesUnits:undefined)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstates: {\t\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tlineWidth: data['serieshoverlinewidth'+i] || 1,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpointInterval:10000\n\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\n\t\t\tvar plotLines=[];\n\t\t\tif (data.target) {\n\t\t\t\tplotLines.push ({color:\"#33FF50\",dashStyle:\"Solid\",label:data.targetName || 'Target',value:parseFloat(data.target),width:2});\n\t\t\t}\n\n\t\t\t\n\t\t\tfunction loadSeriesData (start,end,callback) {\n\t\t\t\tconsole.log ('resize chart to ' + new Date (start) + ' - ' + new Date (end));\n\t\t\t\tloadWaiting=false;\n\t\t\t\tif (start && end){\n\t\t\t\t\tloadRunning=true;\n\t\t\t\t\tvar virtualStart=start;\n\t\t\t\t\tvar virtualEnd=end;\n\t\t\t\t\tchart.showLoading();\n\t\t\t\t\twindow.setTimeout(function (){ \n\t\t\t\t\t\tloadSeriesRange(chart,oidList,0,data.normalizeDate,start,end,virtualStart,virtualEnd,function () {\n\t\t\t\t\t\t\tchart.redraw();\n\t\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t\t\tloadRunning=false;\n\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},10);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\n\t\t\t/**\n\t\t\t * Load new data depending on the selected min and max\n\t\t\t */\n\t\t\t\n\t\t\tif (fbobj.delayedRefreshHandler[widgetID]) window.clearInterval(fbobj.delayedRefreshHandler[widgetID]);\t\t\t\t\t\t\n\t\t\tfbobj.delayedRefreshHandler[widgetID]=window.setInterval( function () {\n\t\t\t\tif (loadRunning==false && refreshRequired==true) {\n   \t\t\t\t   refreshRequired=false;\n  \t\t\t\t   console.log ('Process event ' + new Date (lastEvent.min) + ' - ' + new Date (lastEvent.max));\t\t\t\t   \n\t\t\t\t   loadSeriesData (lastEvent.min,lastEvent.max);\n\t\t\t\t   \n\t\t\t\t} \t\n\t\t\t},500);\n\n\n\t\t\tfunction afterSetExtremes(event) {\n\t\t\t\tconsole.log ('afterSetExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t\tif (event.trigger!=undefined){\n\t\t\t\t\tif (!loadRunning) {\n\t\t\t\t\t\tloadSeriesData (event.min,event.max);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent=event;\n\t\t\t\t\t\tconsole.log ('Save event ' + new Date (event.min) + ' - ' + new Date (event.max));\n\n\t\t\t\t\t\trefreshRequired=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction setExtremes(event) {\n\t\t\t\tconsole.log ('setExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t}\n\t\t\t\n\t\t\tif (vis.language === 'de')Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\tvar unit = data.unit;\n\t\t\tchart = Highcharts.stockChart(divId + widgetID, {\n\t\t\t\tchart: {\n\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\trenderTo: divId + widgetID,\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tpanKey: 'shift'\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: data.title\n\t\t\t\t},\n\t\t\t\ttime:{\n\t\t\t\t   timezoneOffset:(data.normalizeDate=='no' ||data.normalizeDate=='hour' ? new Date().getTimezoneOffset() : 0 )\n\t\t\t\t},\n\t\t\t\trangeSelector: {\n\t\t\t\t  buttons: [{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1 Tag',\n\t\t\t\t\t\ttitle: '1 Tag anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3 Tage',\n\t\t\t\t\t\ttitle: '3 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 7,\n\t\t\t\t\t\ttext: '7 Tage',\n\t\t\t\t\t\ttitle: '7 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1M',\n\t\t\t\t\t\ttitle: '1 Monat anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3M',\n\t\t\t\t\t\ttitle: '3 Monate anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 6,\n\t\t\t\t\t\ttext: '6M',\n\t\t\t\t\t\ttitle: '6 Monate anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'ytd',\n\t\t\t\t\t\ttext: 'Aktuelles Jahr',\n\t\t\t\t\t\ttitle: 'Aktuelles Jahr anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'year',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1 Jahr',\n\t\t\t\t\t\ttitle: '1 Jahr anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'all',\n\t\t\t\t\t\ttext: 'Alles',\n\t\t\t\t\t\ttitle: 'Alles anzeigen'\n\t\t\t\t\t}],\n\t\t\t\t\tallButtonsEnabled: true,\n\t\t\t\t\tdropdown:'always',\n\t\t\t\t\theight: 10,\n\t\t\t\t\tselected: zoomlevel[data.zoomDefault],\n\t\t\t\t\tinputDateFormat:'%e. %b %Y'\n\t\t\t\t},\n\t\t\t\tnavigator: {\n\t\t\t\t\tadaptToUpdatedData:false,\n\t\t\t\t\theight: 20,\n\t\t\t\t\tmargin: 10,\n\t\t\t\t\tseries: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpointInterval:10000\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t],\n\t\t\t\t\txAxis:{\n\t\t\t\t\t\tordinal: false\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscrollbar: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tafterSetExtremes: afterSetExtremes,\n\t\t\t\t\t\tsetExtremes: setExtremes\n\t\t\t\t\t},\n\t\t\t\t\tdateTimeLabelFormats:  fbobj.highchartsDateTimeLabelFormats,\n\t\t\t\t\toverscroll: 10000,\n\t\t\t\t\tordinal: false\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tyAxis: [{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + (unit ? ' ' + unit : '');\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left'\n\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Produktion'\n\t\t\t\t\t},\n\t\t\t\t\theight: (data.chart1Height? data.chart1Height+'%':'48%'),\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\tresize: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t},\n\n\t\t\t\t\tplotLines:plotLines,\n\t\t\t\t\tmin: (data.yAxis1min?parseFloat(data.yAxis1min):undefined),\n\t\t\t\t\tmax: (data.yAxis1max?parseFloat(data.yAxis1max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis1tickamount?data.yAxis1tickamount:undefined),\n\t\t\t\t\tminorTicks: true\n\t\t\n\t\t\t\t},{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + ' ' + unit;\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left'\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Verbrauch'\n\t\t\t\t\t},\n\t\t\t\t\ttop: (data.chart1Height? parseFloat (data.chart1Height) + ((data.chartspacing? parseFloat(data.chartspacing) :4))+ '%': (48 + (data.chartspacing? parseFloat(data.chartspacing) :5))+'%'),\n\t\t\t\t\theight: (data.chart2Height? data.chart2Height+'%':'48%'),\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\tmin: (data.yAxis2min?parseFloat(data.yAxis2min):undefined),\n\t\t\t\t\tmax: (data.yAxis2max?parseFloat(data.yAxis2max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis2tickamount?data.yAxis2tickamount:undefined),\n\t\t\t\t\tminorTicks: true\n\t\t\t\t}\n\t\t\t\t],\n\n\t\t\t\tplotOptions: {\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\talign: 'left',\n\t\t\t\t\tverticalAlign: 'top',\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 20,\n\t\t\t\t\tfloating: true           \n\t\t\t\t},\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tcredits: {\n\t\t\t\t   enabled: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tpointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b><br/>',\n\t\t\t\t\tvalueDecimals: 2,\n\t\t\t\t\tsplit: true,\n\t\t\t\t\tfollowTouchMove:false,\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\n\t\t\t\t},\n\n\t\t\t\tseries: seriesData\n\t\t\t});\n\n\n\t\t\twindow.setTimeout(function (){\n\t\t\t\tloadSelectorData (navigationData,oidList[0].historyOID,oidList[0].instance,oidList[0].currentOID,oidList[0].multiplicator,data.normalizeDate,(data.navigatorRange? parseInt (data.navigatorRange): 48),function (){\t\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].setData (navigationData);\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].xAxis.min=navigationData[0][0];\n\t\t\t\t\tvar startDate=new Date ();\n\t\t\t\t\tstartDate.setUTCMilliseconds(0);\n\t\t\t\t\tstartDate.setUTCSeconds(0);\t\n\t\t\t\t\tif (data.zoomDefault==\"1d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"7d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-7);\n\t\t\t\t\t} else if (data.zoomDefault==\"3d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"1m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"6m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-6);\n\t\t\t\t\t} else if (data.zoomDefault==\"ytd\"){\n\t\t\t\t\t\tstartDate=new Date (startDate.getFullYear(),0,1);\n\t\t\t\t\t} else if (data.zoomDefault==\"1y\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-12);\n\t\t\t\t\t}else if (data.zoomDefault==\"all\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-120);\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tloadSeriesData (startDate.getTime(),new Date ().getTime());\t\t\t\t\n\n\t\t\t\t\t//add mouse wheel support\n\t\t\t\t\tvar zoomRatio = 0;\n\t\t\t\t\tvar lastX;\n\t\t\t\t\tvar lastY;\n\n\t\t\t\t\t$('#'+ divId + widgetID).mousewheel(function(objEvent, intDelta) {\n\t\t\t\t\t\tif (intDelta > 0) {\n\t\t\t\t\t\t\tzoomRatio = -1 * fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (intDelta < 0) {\n\t\t\t\t\t\t\tzoomRatio = fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar setZoom = function() {\n\n\t\t\t\t\t\tvar xMin = chart.xAxis[0].getExtremes().dataMin;\n\t\t\t\t\t\tvar xMax = chart.xAxis[0].getExtremes().dataMax;\n\t\t\t\t\t\tvar absMin = minDate;\n\t\t\t\t\t\tvar absMax = new Date ().getTime();\n\t\t\t\t\t   \n\t\t\t\t\t\tchart.xAxis[0].setExtremes(Math.max (absMin ,xMin - zoomRatio * (xMax-xMin)), Math.min (absMax, xMax + zoomRatio * (xMax-xMin)), true, true, { trigger: 'zoom' });\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t},10);\n\n\t\t\t\n\n\t\t\t// subscribe on updates of value\n\t\t\t\n\t\t\tfunction onChangeSeries (e, newVal, oldVal) {\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar ids=fbobj.findOID(oidList,e.type);\n\t\t\t\tvar eventDate=normalizeDate (new Date (),data.normalizeDate);\n\t\t\t\tfor (var i=0;i<ids.length;i++){\t\t\t\t\n\t\t\t\t\tconsole.log ('add new series ' + (ids[i]+1) + ' value :' + eventDate + '(' + eventDate.getTime() + ') - ' + newVal);\n\t\t\t\t\tif (ids[i]==0) {\n\n\t\t\t\t\t\tif (chart.navigator.series[0].points && chart.navigator.series[0].points.length>0 && chart.navigator.series[0].points [chart.navigator.series[0].points.length-1]) console.log ('Last old x:' + chart.navigator.series[0].points[chart.navigator.series[0].points.length-1].x);\n\n\t\t\t\t\t\tif (chart.navigator.series[0].points && chart.navigator.series[0].points.length>0 && chart.navigator.series[0].points [chart.navigator.series[0].points.length-1] && chart.navigator.series[0].points[chart.navigator.series[0].points.length-1].x==eventDate.getTime()){\n\t\t\t\t\t\t\tchart.navigator.series[0].points[chart.navigator.series[0].points.length-1].update((parseFloat(newVal) || 0) * oidList[ids[i]].multiplicator);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchart.navigator.series[0].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[ids[i]].multiplicator]); \n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (chart.series[ids[i]].points && chart.series[ids[i]].points[chart.series[ids[i]].points.length-1] && chart.series[ids[i]].points[chart.series[ids[i]].points.length-1].x==eventDate.getTime()){\n\t\t\t\t\t\t\tconsole.log ('Update series ' + (ids[i]+1));\t\t\t\n\t\t\t\t\t\t\tchart.series[ids[i]].points[chart.series[ids[i]].points.length-1].update((parseFloat(newVal) || 0) * oidList[ids[i]].multiplicator);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log ('Add new value to series 1');\n\t\t\t\t\t\t\tif (chart && chart.xAxis && typeof chart.xAxis[0] != 'undefined') {\n\t\t\t\t\t\t\t\tvar oldExtremes=chart.xAxis[0].getExtremes();\n\t\t\t\t\t\t\t\tconsole.log ('Old extremes: ' + JSON.stringify (oldExtremes));\n\t\t\t\t\t\t\t\tvar oldLastX=chart.navigator.xAxis.max ;\n\t\t\t\t\t\t\t\tconsole.log ('Last X: ' + new Date (oldLastX));\n\t\t\t\t\t\t\t\tconsole.log ('CompareX: ' + JSON.stringify (oldExtremes));\n\t\t\t\t\t\t\t\tconsole.log ('oldExtremes max: ' + new Date (oldExtremes.max));\n\t\t\t\t\t\t\t\tif (oldExtremes.max > oldLastX-(10*60*1000)){\n\t\t\t\t\t\t\t\t\t//chart.xAxis[0].setExtremes(oldExtremes.min+eventDate.getTime()-oldExtremes.max,eventDate.getTime());\n\t\t\t\t\t\t\t\t\tchart.series[ids[i]].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[ids[i]].multiplicator]); \n\t\t\t\t\t\t\t\t\tvar newMaxX=chart.navigator.xAxis.max;\n\t\t\t\t\t\t\t\t\tif (oldLastX!=newMaxX) chart.xAxis[0].setExtremes(oldExtremes.min+newMaxX-oldExtremes.max,newMaxX);\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (chart.series[ids[i]].points && chart.series[ids[i]].points[chart.series[ids[i]].points.length-1] && chart.series[ids[i]].points[chart.series[ids[i]].points.length-1].x==eventDate.getTime()){\n\t\t\t\t\t\t\tchart.series[ids[i]].points[chart.series[ids[i]].points.length-1].update((parseFloat(newVal) || 0) * oidList[ids[i]].multiplicator);\n\t\t\t\t\t\t} else {   \t\t\t\t\n\t\t\t\t\t\t\tif (chart && chart.xAxis && typeof chart.xAxis[1] != 'undefined') {\n\t\t\t\t\t\t\t\tvar oldExtremes=chart.xAxis[1].getExtremes();\n\t\t\t\t\t\t\t\tvar oldLastX=(chart.series && chart.series[ids[i]].points && chart.series[ids[i]].points.length>0 && chart.series[ids[i]].points[chart.series[ids[i]].points.length-1] && chart.series[ids[i]].points[chart.series[ids[i]].points.length-1].x? chart.series[ids[i]].points[chart.series[ids[i]].points.length-1].x:0);\n\t\t\t\t\t\t\t\tif (oldExtremes.max > oldLastX-(10*60*1000)){\n\t\t\t\t\t\t\t\t\tchart.series[ids[i]].addPoint ([eventDate.getTime(),(parseFloat(newVal) || 0) * oidList[ids[i]].multiplicator]); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\tvar uniqueOID=fbobj.getUniqueOID (oidList);\n\t\t\tfor (var i=0;i<uniqueOID.length;i++){\n\t\t\t\tif (uniqueOID[i]) {\n\t\t\t\t\tconsole.log ('register on changes for ' + uniqueOID[i]);\n\t\t\t\t\tvis.states.bind(uniqueOID[i] + '.val', onChangeSeries);\n\t\t\t\t\t$div.data('bound', [uniqueOID[i] + '.val']);\n\t\t\t\t\t$div.data('bindHandler', onChangeSeries);\n\t\t\t\t}\t\t\t\n\t\t\t}\t\t\t\n\t\t},\n\t\t\n\t\t\n\t\tcreateTimeseries2Widget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\t\t\tvar fbobj=this;\n\t\t\tvar loadRunning=false;\n\t\t\tvar loadWaiting=false;\n\t\t\tvar refreshRequired=false;\n\t\t\tvar lastEvent=null;\t\t\t\n\t\t\tvar navigationData=[];\n\t\t\tvar zoomlevel ={\"1d\":0,\"3d\":1,\"7d\":2,\"1m\":3,\"3m\":4,\"6m\":5};\n\t\t\t\n\t\t\tconsole.log(' photovoltaikcharts: Create Timeseries2 Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createTimeseries2Widget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\t\n\t\t\tvar navigator={id:0, historyOID:data.navhistoryoid,instance:data.navinstance,multiplicator:parseFloat(data.navmultiplicator) || 1 };\n\t\t\t\n\t\t\toidList =[];\n\t\t\tseriesData=[];\n\t\t\tvar j=0;\n\t\t\tvar i;\n\t\t\tfor (i=1;i<=data.seriesCount;i++){\n\t\t\t\tif (data['serieshistoryoid'+i] && data ['instance'+ i ]){\n\t\t\t\t\toidList.push ({id:j, historyOID:data['serieshistoryoid'+ i],instance:data ['instance'+ i ],multiplicator:parseFloat(data ['multiplicator'+ i ]) || 1,lastX:0 });\n\t\t\t\t\t\n\t\t\t\t\tseriesData.push ({\n\t\t\t\t\t\tname: data['serieslabel'+ i] ,\n\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\tcolor: data['seriescolor'+ i] || '#FF5A33',\n\t\t\t\t\t\tlineWidth: data['serieslinewidth'+ i] || 1,\n\t\t\t\t\t\tfillOpacity: (data['seriesopacity'+ i]? parseFloat(data['seriesopacity'+ i])/100 : 0.3),\n\t\t\t\t\t\ttype: data['seriesType'+ i] || 'areaspline',\n\t\t\t\t\t\tyAxis:(data['seriesaxis'+ i]? parseInt(data['seriesaxis'+i]): 0),\n\t\t\t\t\t\tstep: (data['seriesstep'+ i] && data['seriesstep'+i]!='no'?data['seriesstep'+ i]: undefined),\n\t\t\t\t\t\tstacking: (data['seriesstacking'+ i] && data['seriesstacking'+ i]!='no'  ? data['seriesstacking'+ i] :undefined),\n\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\tenabled: (data['seriesType'+i]!='column' ? true: false),\n\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\tunits:(data['seriesType'+i]!='column' ? fbobj.highchartsSeriesUnits:undefined)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstates: {\t\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tlineWidth: data['serieshoverlinewidth'+ i] || 1,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpointInterval:10000\n\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\tvar plotLines=[];\n\t\t\tif (data.target) {\n\t\t\t\tplotLines.push ({color:\"#33FF50\",dashStyle:\"Solid\",label:data.targetName || 'Target',value:parseFloat(data.target),width:2});\n\t\t\t}\n\n\t\t\t\n\t\t\tfunction loadSeriesData (start,end,callback) {\n\t\t\t\tconsole.log ('resize chart to ' + new Date (start) + ' - ' + new Date (end));\n\t\t\t\tloadWaiting=false;\n\t\t\t\tif (start && end){\n\t\t\t\t\tloadRunning=true;\n\t\t\t\t\tvar virtualStart=start;\n\t\t\t\t\tvar virtualEnd=end;\n\t\t\t\t\tconsole.log ('virtual chart size ' + new Date (virtualStart) + ' - ' + new Date (virtualEnd));\n\n\t\t\t\t\tchart.showLoading();\n\t\t\t\t\twindow.setTimeout(function (){ \n\t\t\t\t\t\tloadSeriesRange(chart,oidList,0,data.normalizeDate,start,end,virtualStart,virtualEnd,function () {\n\t\t\t\t\t\t\tchart.redraw();\n\t\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t\t\tloadRunning=false;\n\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},10);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\t/**\n\t\t\t * Load new data depending on the selected min and max\n\t\t\t */\n\t\t\tif (fbobj.delayedRefreshHandler[widgetID]) window.clearInterval(fbobj.delayedRefreshHandler[widgetID]);\t\t\t\t\t\t\n\t\t\tfbobj.delayedRefreshHandler[widgetID]=window.setInterval( function () {\n\t\t\t\tif (loadRunning==false && refreshRequired==true) {\n   \t\t\t\t   refreshRequired=false;\n  \t\t\t\t   console.log ('Process event ' + new Date (lastEvent.min) + ' - ' + new Date (lastEvent.max));\t\t\t\t   \n\t\t\t\t   loadSeriesData (lastEvent.min,lastEvent.max);\n\t\t\t\t   \n\t\t\t\t} \t\n\t\t\t},500);\n\n\t\t\tfunction afterSetExtremes(event) {\n\t\t\t\tconsole.log ('afterSetExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t\tif (event.trigger!=undefined){\n\t\t\t\t\tif (!loadRunning) {\n\t\t\t\t\t\tloadSeriesData (event.min,event.max);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent=event;\n\t\t\t\t\t\tconsole.log ('Save event ' + new Date (event.min) + ' - ' + new Date (event.max));\n\n\t\t\t\t\t\trefreshRequired=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction setExtremes(event) {\n\t\t\t\tconsole.log ('setExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif (vis.language === 'de') Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\tvar yAxis = [{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + (data.unit1 ? ' ' + data.unit1 : '')\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tx: 1\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: data.xAxisLabel1\n\t\t\t\t\t},\n\t\t\t\t\theight: (data.chart1Height? data.chart1Height+'%':'20%'),\n\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\tresize: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t},\n\t\t\t\t\tcategories:(data.yAxis1Categories? JSON.parse (data.yAxis1Categories): undefined),\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tmin: (data.yAxis1min?parseFloat(data.yAxis1min):undefined),\n\t\t\t\t\tmax: (data.yAxis1max?parseFloat(data.yAxis1max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis1tickamount?data.yAxis1tickamount:undefined),\n\t\t\t\t\tminorTicks: true,\n\t\t\t\t\tstartOnTick:false\t\t\t\t\t\n\t\t\t\t}];\n\t\t\tif (data.chart2enabled!=false){\n\t\t\t\tyAxis.push({\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + (data.unit2 ? ' ' + data.unit2 : '');\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tx: 1\n\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: data.xAxisLabel2\n\t\t\t\t\t},\n\t\t\t\t\ttop: (data.chart1Height? (parseFloat(data.chart1Height) + (data.chartspacing? parseFloat(data.chartspacing) :5)) +'%':( 20 + (data.chartspacing? parseFloat(data.chartspacing) :5))+'%'),\n\t\t\t\t\theight: (data.chart2Height? data.chart2Height+'%':'40%'),\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\tresize: {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t},\n\t\t\t\t\tcategories:(data.yAxis2Categories? JSON.parse (data.yAxis2Categories): undefined),\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tplotLines:plotLines,\n\t\t\t\t\tmin: (data.yAxis2min?parseFloat(data.yAxis2min):undefined),\n\t\t\t\t\tmax: (data.yAxis2max?parseFloat(data.yAxis2max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis2tickamount?data.yAxis2tickamount:undefined),\n\t\t\t\t\tminorTicks: true\n\t\t\n\t\t\t\t});\n\t\t\t};\n\t\t\tif (data.chart3enabled!=false){\n\t\t\t\tyAxis.push({\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + (data.unit3 ? ' ' + data.unit3 : '')\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tx: 1\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: data.xAxisLabel3\n\t\t\t\t\t},\n\t\t\t\t\tcategories:(data.yAxis3Categories? JSON.parse (data.yAxis3Categories): undefined),\n\t\t\t\t\ttop: ((data.chart1Height? parseFloat(data.chart1Height) + (data.chartspacing? parseFloat(data.chartspacing) :5):20 + (data.chartspacing? parseFloat(data.chartspacing) :5)) + (data.chart2Height? parseFloat(data.chart2Height) + (data.chartspacing? parseFloat(data.chartspacing) :5):40 + (data.chartspacing? parseFloat(data.chartspacing) :5)))+'%' ,\n\t\t\t\t\theight: (data.chart3Height? data.chart3Height+'%':'30%'),\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\tmin: (data.yAxis3min?parseFloat(data.yAxis3min):undefined),\n\t\t\t\t\tmax: (data.yAxis3max?parseFloat(data.yAxis3max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis3tickamount?data.yAxis3tickamount:undefined),\n\t\t\t\t\tminorTicks: true\n\t\t\t\t});\t\n\t\t\t};\n\t\t\t\n\t\t\tchart = Highcharts.stockChart(divId + widgetID, {\n\t\t\t\tchart: {\n\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\trenderTo: divId + widgetID,\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tpanKey: 'shift'\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: data.title\n\t\t\t\t},\n\t\t\t\ttime:{\n\t\t\t\t   useUTC: false\n\t\t\t\t},\n\t\t\t\trangeSelector: {\n\t\t\t\t  buttons: [{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1 Tag',\n\t\t\t\t\t\ttitle: '1 Tag anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3 Tage',\n\t\t\t\t\t\ttitle: '3 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 7,\n\t\t\t\t\t\ttext: '7 Tage',\n\t\t\t\t\t\ttitle: '7 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1M',\n\t\t\t\t\t\ttitle: '1 Monat anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3M',\n\t\t\t\t\t\ttitle: '3 Monate anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 6,\n\t\t\t\t\t\ttext: '6M',\n\t\t\t\t\t\ttitle: '6 Monate anzeigen'\n\t\t\t\t\t}],\n\t\t\t\t\tallButtonsEnabled: true,\n\t\t\t\t\tdropdown:'always',\n\t\t\t\t\theight: 10,\n\t\t\t\t\tselected: zoomlevel[data.zoomDefault],\n\t\t\t\t\tinputDateFormat:'%e. %b %Y'\n\t\t\t\t},\n\t\t\t\tnavigator: {\n\t\t\t\t\tadaptToUpdatedData:false,\n\t\t\t\t\theight: 20,\n\t\t\t\t\tmargin: 10,\n\t\t\t\t\tseries: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpointInterval:10000\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t],\n\t\t\t\t\txAxis:{\n\t\t\t\t\t\tordinal: false\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscrollbar: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tafterSetExtremes: afterSetExtremes,\n\t\t\t\t\t\tsetExtremes: setExtremes\n\t\t\t\t\t},\n\t\t\t\t\tordinal: false,\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tyAxis: yAxis,\n\n\t\t\t\tplotOptions: {\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\talign: 'left',\n\t\t\t\t\tverticalAlign: 'top',\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 20,\n\t\t\t\t\tfloating: true           \n\t\t\t\t},\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tcredits: {\n\t\t\t\t   enabled: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tpointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b><br/>',\n\t\t\t\t\tvalueDecimals: 2,\n\t\t\t\t\tsplit: true,\n\t\t\t\t\tfollowTouchMove:false,\t\t\t\t\t\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\t\t\t\t\n\t\t\t\t},\n\n\t\t\t\tseries: seriesData\n\t\t\t});\n\n\n\t\t\tfunction updateSelector(id,instance,multiplicator,start,callback) {\n\n\t\t\t\tvar option = {};\n\t\t\t\tvar eventDate;\n\t\t\t\tvar eventValue;\n\t\t\t\toption.start=start;\n\t\t\t\toption.instance  = instance;\n\t\t\t\toption.aggregate='minmax';\n\t\t\t\t//option.count=2000;\n\t\t\t\toption.limit=300;\n\t\t\t\toption.timeout=12000;\n\t\t\t\tvis.getHistory(id, option, function (err, res) {\n\t\t\t\t\tif (err && Object.keys(err).length > 0) console.error('Error Object: ' + JSON.stringify(err));\n\t\t\t\t\tif (!err && res) {\n\t\t\t\t\t\tconsole.log('got History data. Count:' + res.length);\t\t\n\t\t\t\t\t\tfor (var i = 0; i < res.length; i++) {\n\t\t\t\t\t\t\teventDate=new Date (res[i].ts);\n\t\t\t\t\t\t\teventValue=res[i].val * multiplicator;\n\t\t\t\t\t\t\t//console.log(id +' '+ new Date (res[i].ts)+ ' n ' + eventDate + ':' + res[i].val);\n\t\t\t\t\t\t\tif (res[i].val!=null){\n\t\t\t\t\t\t\t\tif (chart.navigator.series[0].data && chart.navigator.series[0].data.length>0 && chart.navigator.series[0].data [chart.navigator.series[0].data.length-1] && chart.navigator.series[0].data[chart.navigator.series[0].data.length-1].x==eventDate.getTime()){\n\t\t\t\t\t\t\t\t\tchart.navigator.series[0].data[chart.navigator.series[0].data.length-1].update(eventValue);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchart.navigator.series[0].addPoint ([eventDate.getTime(),eventValue]); \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} \t\n\t\t\t\t\t\t// free memory\n\t\t\t\t\t\tres = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (callback) callback();\n\t\t\t\t});\n\t\t\t};\n\n\t\t    function updateSeriesData (){\n\t\t\t\tconsole.log ('Start update chart');\n\t\t\t\tif (!chart){\n\t\t\t\t\tif (fbobj.updateIntervalHandler[widgetID]) {\n\t\t\t\t\t\twindow.clearInterval(fbobj.updateIntervalHandler[widgetID]);\n\t\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=null;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar oldExtremes=chart.xAxis[0].getExtremes();\t\t\t\t\n\t\t\t\tvar oldLastX=chart.navigator.xAxis.max;\n\t\t\t\t\n\t\t\t\tconsole.log ('Start UpdateSelector ' + new Date (oldLastX) + ' - ' + (new Date (oldExtremes.dataMax)));\n\t\t\t\tupdateSelector(navigator.historyOID,navigator.instance,navigator.multiplicator,oldLastX+1,function (){\n\t\t\t\t\tif (chart.navigator.series[0].data.length>0 && chart.navigator.series[0].data[chart.navigator.series[0].data.length-1].x > oldLastX && oldExtremes.max > oldLastX-(10*60*1000)){\n\t\t\t\t\t\tvar newMaxX=chart.navigator.xAxis.max;\n\t\t\t\t\t\tchart.xAxis[0].setExtremes(oldExtremes.min+newMaxX-oldExtremes.max,newMaxX, true, true, { trigger: 'zoom' });\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t});\t\t\t\t\n\t\t\t};\n\n\t\t    function reloadSeriesData (){\n\t\t\t\tconsole.log ('Start reload chart');\n\t\t\t\tif (!chart){\n\t\t\t\t\tif (fbobj.reloadIntervalHandler[widgetID]) {\n\t\t\t\t\t\twindow.clearInterval(fbobj.reloadIntervalHandler[widgetID]);\n\t\t\t\t\t\tfbobj.reloadIntervalHandler[widgetID]=null;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar oldExtremes=chart.xAxis[0].getExtremes();\t\t\t\t\n\t\t\t\tvar oldLastX=chart.navigator.xAxis.max;\n\t\t\t\tnavigationData=[];\n\t\t\t\tloadSelectorData (navigationData,navigator.historyOID,navigator.instance,null,navigator.multiplicator,'no',(data.navigatorRange? parseInt (data.navigatorRange): 3), function (){\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].setData (navigationData);\t\t\t\t\n\t\t\t\t\tvar newMaxX=chart.navigator.xAxis.max;\n\t\t\t\t\tchart.xAxis[0].setExtremes(oldExtremes.min+newMaxX-oldExtremes.max,newMaxX, true, true, { trigger: 'zoom' });\n\n\t\t\t\t});\n\t\t\t};\n\n\n\t\t\twindow.setTimeout(function (){\n\t\t\t\tloadSelectorData (navigationData,navigator.historyOID,navigator.instance,null,navigator.multiplicator,'no',(data.navigatorRange? parseInt (data.navigatorRange): 3), function (){\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].setData (navigationData);\t\t\t\t\n\t\t\t\t\tchart.navigator.series[0].xAxis.min=navigationData[0][0];\n\t\t\t\t\tvar startDate=new Date ();\n\t\t\t\t\tstartDate.setUTCMilliseconds(0);\n\t\t\t\t\tstartDate.setUTCSeconds(0);\t\n\t\t\t\t\tif (data.zoomDefault==\"1d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"7d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-7);\t\t\t\t\t   \n\t\t\t\t\t} else if (data.zoomDefault==\"1m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"6m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-6);\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tloadSeriesData (startDate.getTime(),new Date ().getTime(),function (){\n\t\t\t\t\t\tif (fbobj.updateIntervalHandler[widgetID]) window.clearInterval(fbobj.updateIntervalHandler[widgetID]);\n\t\t\t\t\t\tif (fbobj.reloadIntervalHandler[widgetID]) window.clearInterval(fbobj.reloadIntervalHandler[widgetID]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t//add mouse wheel support\n\t\t\t\t\t\tvar zoomRatio = 0;\n\t\t\t\t\t\tvar lastX;\n\t\t\t\t\t\tvar lastY;\n\n\n\t\t\t\t\t\t$('#'+ divId + widgetID).mousewheel(function(objEvent, intDelta) {\n\t\t\t\t\t\t\tif (intDelta > 0) {\n\t\t\t\t\t\t\t\tzoomRatio = -1 * fbobj.scrollspeed;\n\t\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (intDelta < 0) {\n\t\t\t\t\t\t\t\tzoomRatio = fbobj.scrollspeed;\n\t\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tvar setZoom = function() {\n\n\t\t\t\t\t\t\tvar xMin = chart.xAxis[0].getExtremes().dataMin;\n\t\t\t\t\t\t\tvar xMax = chart.xAxis[0].getExtremes().dataMax;\n\t\t\t\t\t\t\tvar absMin = minDate;\n\t\t\t\t\t\t\tvar absMax = new Date ().getTime();\n\t\t\t\t\t\t   \n\t\t\t\t\t\t\tchart.xAxis[0].setExtremes(Math.max (absMin ,xMin - zoomRatio * (xMax-xMin)), Math.min (absMax, xMax + zoomRatio * (xMax-xMin)), true, true, { trigger: 'zoom' });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\n\t\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=window.setInterval(function () {\n\t\t\t\t\t\t   updateSeriesData ();\n\t\t\t\t\t\t}, 30000);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (data.autoreload>0){\n\t\t\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=window.setInterval(function () {\n\t\t\t\t\t\t\t\treloadSeriesData ();\n\t\t\t\t\t\t\t}, data.autoreload * 60000);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\n\t\t\t\t});\n\t\t\t},10);\t\n\t\t},\n\n\n\t\tcreateTimeseries3Widget: function (widgetID, view, data, style) {\n\t\t\tvar seriesData = [];\n\t\t\tvar oidList = [];\n\t\t\tvar targetArray = null;\n\t\t\tvar divId = 'chart_placeholder';\n\t\t\tvar chart = null;\n\t\t\tvar fbobj=this;\n\t\t\tvar loadRunning=false;\n\t\t\tvar loadWaiting=false;\n\t\t\tvar refreshRequired=false;\n\t\t\tvar lastEvent=null;\t\t\t\n\t\t\tvar zoomlevel ={\"1d\":0,\"3d\":1,\"7d\":2,\"1m\":3,\"3m\":4,\"6m\":5};\n\t\t\t\n\t\t\tconsole.log(' photovoltaikcharts: Create Timeseries3 Widget');\n\t\t\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createTimeseries3Widget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t\tconsole.log (\"Initialize Chart Widget #\" + widgetID );\n\t\t\tvar systemLang = 'en';\n\t\t\tif (typeof sysLang !== 'undefined') {\n\t\t\t\tsystemLang = sysLang || 'en';\n\t\t\t}\n\t\t\t\n\t\t\tvar unit=data.unit;\n\n\n\t\t\t\n\t\t\toidList =[];\n\t\t\tseriesData=[];\n\t\t\tvar j=0;\n\t\t\tvar i;\n\t\t\tvar label;\n\t\t\t\n\t\t\tfor (i=1;i<=data.seriesCount;i++){\n\t\t\t\tif (data['serieshistoryoid'+i] && data ['instance'+ i ]){\n\t\t\t\t\tlabel=data['serieslabel'+i];\t\t\t\t\n\t\t\t\t\toidList.push ({id:j, historyOID:data['serieshistoryoid'+i],instance:data ['instance'+ i ],multiplicator:parseFloat(data ['multiplicator'+ i ]) || 1,lastX:0 });\n\t\t\t\t\t\n\t\t\t\t\tseriesData.push ({\n\t\t\t\t\t\tname: label,\n\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\tcolor: data['seriescolor'+i] || '#FF5A33',\n\t\t\t\t\t\tlineWidth: data['serieslinewidth'+i] || 1,\n\t\t\t\t\t\tfillOpacity: (data['seriesopacity'+i]? parseFloat(data['seriesopacity'+i])/100 : 0.3),\n\t\t\t\t\t\ttype: data['seriesType'+i] || 'areaspline',\n\t\t\t\t\t\tstep: (data['seriesstep'+i] && data['seriesstep'+i]!='no'? data['seriesstep'+i] : undefined),\n\t\t\t\t\t\tstacking: (data['seriesstacking'+i] && data['seriesstacking'+i]!='no'  ? data['seriesstacking'+i] : undefined),\n\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\tenabled: (data['seriesType'+i]!='column' ? true: false),\n\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\tunits:(data['seriesType'+i]!='column' ? fbobj.highchartsSeriesUnits:undefined)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstates: {\t\n\t\t\t\t\t\t\thover: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tlineWidth: data['serieshoverlinewidth'+i] || 1,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpointInterval:10000\n\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\tvar plotLines=[];\n\t\t\tif (data.target) {\n\t\t\t\tplotLines.push ({color:\"#33FF50\",dashStyle:\"Solid\",label:data.targetName || 'Target',value:parseFloat(data.target),width:2});\n\t\t\t}\n\n\t\t\t\n\t\t\tfunction loadSeriesData (start,end,callback) {\n\t\t\t\tconsole.log ('resize chart to ' + new Date (start) + ' - ' + new Date (end));\n\t\t\t\t// chart.series[0].setData(data);\n\t\t\t\tloadWaiting=false;\n\t\t\t\tif (start && end){\n\t\t\t\t\tloadRunning=true;\n\t\t\t\t\tvar virtualStart=start;\n\t\t\t\t\tvar virtualEnd=end;\n\n\t\t\t\t\tchart.showLoading();\n\t\t\t\t\twindow.setTimeout(function (){ \n\t\t\t\t\t\tloadSeriesRange(chart,oidList,0,data.normalizeDate,start,end,virtualStart,virtualEnd,function () {\n\t\t\t\t\t\t\t//chart.xAxis.min =start;\n\t\t\t\t\t\t\t//chart.xAxis.max=end;\n\t\t\t\t\t\t\tchart.redraw();\n\t\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t\t\tloadRunning=false;\n\t\t\t\t\t\t\tif (callback) callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},10);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction addSeriesData (start,end,callback) {\n\t\t\t\tconsole.log ('load and add new Data for ' + new Date (start) + ' - ' + new Date (end));\n\t\t\t\tif (start && end){\n\t\t\t\t\twindow.setTimeout(function (){ \n\t\t\t\t\t\tloadAndAddSeriesRange(chart,oidList,0,data.normalizeDate,start,end,start,function (newMax) {\n\t\t\t\t\t\t\tif (callback) callback(newMax);\n\t\t\t\t\t\t});\n\t\t\t\t\t},10);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t\t\t\t\n\t\t\t/**\n\t\t\t * Load new data depending on the selected min and max\n\t\t\t */\n\t\t\tif (fbobj.delayedRefreshHandler[widgetID]) window.clearInterval(fbobj.delayedRefreshHandler[widgetID]);\t\t\t\t\t\t\n\t\t\tfbobj.delayedRefreshHandler[widgetID]=window.setInterval( function () {\n\t\t\t\tif (loadRunning==false && refreshRequired==true) {\n   \t\t\t\t   refreshRequired=false;\n  \t\t\t\t   console.log ('Process event ' + new Date (lastEvent.min) + ' - ' + new Date (lastEvent.max));\t\t\t\t   \n\t\t\t\t   loadSeriesData (lastEvent.min,lastEvent.max);\n\t\t\t\t   \n\t\t\t\t} \t\n\t\t\t},500);\n\n\t\t\tfunction afterSetExtremes(event) {\n\t\t\t\tconsole.log ('afterSetExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t\tif (event.trigger!=undefined){\n\t\t\t\t\tif (!loadRunning) {\n\t\t\t\t\t\tloadSeriesData (event.min,event.max);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent=event;\n\t\t\t\t\t\tconsole.log ('Save event ' + new Date (event.min) + ' - ' + new Date (event.max));\n\n\t\t\t\t\t\trefreshRequired=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction setExtremes(event) {\n\t\t\t\tconsole.log ('setExtremes event ' + new Date (event.min) + ' - ' + new Date (event.max)+ ' - ' + event.trigger);\n\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\tif (vis.language === 'de')Highcharts.setOptions(fbobj.highchartsOptions);\n\t\t\tvar help= vis.states[data.serieshistoryoid1];\n\t\t\t\n\t\t\tfunction selectDate () {\n\t\t\t\tif (data.storeTimestampSelected) {\n\t\t\t\t\tchart.xAxis[0].removePlotLine('selected');\n\t\t\t\t\tvis.setValue(data.storeTimestampSelected,this.hoverPoint.x);\n\t\t\t\t\tchart.xAxis[0].addPlotLine({value: this.hoverPoint.x,color: 'red',width: 2,id: 'selected'});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction selectDate2 (event) {\n\t\t\t\tif (data.storeTimestampSelected) {\n\t\t\t\t\tchart.xAxis[0].removePlotLine('selected');\n\t\t\t\t\tvis.setValue(data.storeTimestampSelected,event.point.x);\n\t\t\t\t\tchart.xAxis[0].addPlotLine({value: event.point.x,color: 'red',width: 2,id: 'selected'});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tchart = new Highcharts.stockChart(divId + widgetID, {\n\t\t\t\tchart: {\n\t\t\t\t\twidth: $div.width()-2,\n\t\t\t\t\theight: $div.height()-2,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tpanKey: 'shift',\n\t\t\t\t\trenderTo: divId + widgetID,\n\t\t\t\t\tbackgroundColor: 'rgba(255,255,255,0)',\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tclick: selectDate\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: data.title\n\t\t\t\t},\n\t\t\t\ttime:{\n\t\t\t\t   useUTC: false\n\t\t\t\t},\n\t\t\t\trangeSelector: {\n\t\t\t\t  enabled: false,\n\t\t\t\t  buttons: [{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1 Tag',\n\t\t\t\t\t\ttitle: '1 Tag anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3 Tage',\n\t\t\t\t\t\ttitle: '3 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'day',\n\t\t\t\t\t\tcount: 7,\n\t\t\t\t\t\ttext: '7 Tage',\n\t\t\t\t\t\ttitle: '7 Tage anzeigen'\n\t\t\t\t\t},{\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\ttext: '1M',\n\t\t\t\t\t\ttitle: '1 Monat anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 3,\n\t\t\t\t\t\ttext: '3M',\n\t\t\t\t\t\ttitle: '3 Monate anzeigen'\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttype: 'month',\n\t\t\t\t\t\tcount: 6,\n\t\t\t\t\t\ttext: '6M',\n\t\t\t\t\t\ttitle: '6 Monate anzeigen'\n\t\t\t\t\t}],\n\t\t\t\t\tallButtonsEnabled: true,\n\t\t\t\t\tdropdown:'always',\n\t\t\t\t\theight: 10,\n\t\t\t\t\tinputDateFormat:'%e. %b %Y'\n\t\t\t\t},\n\t\t\t\tnavigator: {\n\t\t\t\t\tenabled:false,\n\t\t\t\t\tseries: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t\tapproximation:\"high\",\n\t\t\t\t\t\t\t\tunits:fbobj.highchartsSeriesUnits\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpointInterval:10000\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t],\n\t\t\t\t\txAxis:{\n\t\t\t\t\t\tordinal: false\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscrollbar: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tafterSetExtremes: afterSetExtremes,\n\t\t\t\t\t\tsetExtremes: setExtremes,\n\t\t\t\t\t},\n\t\t\t\t\tordinal: false,\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats,\n\t\t\t\t\tcrosshair: data.showCrosshairX\n\t\t\t\t\t\n\t\t\t\t\t//overscroll: 10000\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tyAxis: [{\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\treturn this.value + (unit ? ' ' + unit : '');\n\t\t\t\t\t\t},\n\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\tx: 1,\n\t\t\t\t\t\tcrosshair: data.showCrosshairY\n\n\t\t\t\t\t},\n\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tcategories:(data.yAxis1Categories? JSON.parse (data.yAxis1Categories): undefined),\n\t\t\t\t\tmin: (data.yAxis1min?parseFloat(data.yAxis1min):undefined),\n\t\t\t\t\tmax: (data.yAxis1max?parseFloat(data.yAxis1max):undefined),\n\t\t\t\t\ttickAmount: (data.yAxis1tickamount?data.yAxis1tickamount:undefined),\n\t\t\t\t\tminorTicks: true,\n\t\t\t\t\tstartOnTick:false,\n\t\t\t\t\tvisible: data.showYAxis\n\t\t\n\t\t\t\t}\n\t\t\t\t],\n\n\t\t\t\tplotOptions: {\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\tclick: selectDate2\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n/*\n\t\t\t\t\t\tallowPointSelect: (data.storeTimestampSelected? true: false),\n\t\t\t\t\t\tpoint: {\n\t\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\t\tselect: function () {\n\t\t\t\t\t\t\t\t\tif (data.storeTimestampSelected && this.x) {\n\t\t\t\t\t\t\t\t\t\tvis.states[data.storeTimestampSelected + '.val']=this.x;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tenabled: data.showLegend,\n\t\t\t\t\talign: 'left',\n\t\t\t\t\tverticalAlign: 'top',\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 2,\n\t\t\t\t\tfloating: true           \n\t\t\t\t},\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: data.showMenu,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\tcredits: {\n\t\t\t\t   enabled: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tpointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b><br/>',\n\t\t\t\t\tvalueDecimals: 2,\n\t\t\t\t\tsplit: true,\n\t\t\t\t\tfollowTouchMove:false,\t\t\t\t\t\n\t\t\t\t\tdateTimeLabelFormats: fbobj.highchartsDateTimeLabelFormats\t\t\t\t\t\n\t\t\t\t},\n\n\t\t\t\tseries: seriesData\n\t\t\t});\n\n\n\n\t\t    function updateSeriesData (){\n\t\t\t\tconsole.log ('Start update chart');\n\t\t\t\tif (!chart){\n\t\t\t\t\tif (fbobj.updateIntervalHandler[widgetID]) {\n\t\t\t\t\t\twindow.clearInterval(fbobj.updateIntervalHandler[widgetID]);\n\t\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=null;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar oldExtremes=chart.xAxis[0].getExtremes();\t\t\t\t\n\t\t\t\tif (loadRunning==false && (new Date()).getTime()-(10*60*1000)< oldExtremes.max){\n\t\t\t\t\t\n\t\t\t\t\taddSeriesData (oldExtremes.dataMax,(new Date()).getTime(),function (newMax){\n\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\n\t\t\t\t\t\tchart.xAxis[0].setExtremes(oldExtremes.dataMin + newMax - oldExtremes.dataMax ,newMax);\n\t\t\t\t\t\tconsole.log ('Updated chart data to ' + new Date (oldExtremes.dataMin + newMax - oldExtremes.dataMax) + ' - ' + new Date (newMax));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\n\n\t\t\twindow.setTimeout(function (){\t\t\t\t\n\t\t\t\tvar startDate=new Date ();\n\t\t\t\tstartDate.setUTCMilliseconds(0);\n\t\t\t\tstartDate.setUTCSeconds(0);\t\n\t\t\t\tif (data.zoomoid && vis.states[data.zoomoid + '.val']) {\n\t\t\t\t\tconsole.log ('use range info from zoomid:' + vis.states[data.zoomoid + '.val'] + ' type ' + typeof vis.states[data.zoomoid + '.val']);\n\t\t\t\t\tstartDate=new Date ((new Date ()).getTime() - (vis.states[data.zoomoid + '.val']*1000));\n\t\t\t\t} else {\n\t\t\t\t\tif (data.zoomDefault==\"1d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"7d\"){\n\t\t\t\t\t   startDate.setDate (startDate.getDate()-7);\t\t\t\t\t   \n\t\t\t\t\t} else if (data.zoomDefault==\"1m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-1);\n\t\t\t\t\t} else if (data.zoomDefault==\"3m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-3);\n\t\t\t\t\t} else if (data.zoomDefault==\"6m\"){\n\t\t\t\t\t\tstartDate.setUTCMinutes(0);\n\t\t\t\t\t\tstartDate.setUTCHours(0);\t\t\n\t\t\t\t\t\tstartDate.setUTCMonth (startDate.getMonth()-6);\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tloadSeriesData (startDate.getTime(),new Date ().getTime(),function (){\n\t\t\t\t\tchart.xAxis[0].allowZoomOutside = true;\n\t\t\t\t\n\t\t\t\t\t//add mouse wheel support\n\t\t\t\t\tvar zoomRatio = 0;\n\t\t\t\t\tvar lastX;\n\t\t\t\t\tvar lastY;\n\n\n\t\t\t\t\t$('#'+ divId + widgetID).mousewheel(function(objEvent, intDelta) {\n\t\t\t\t\t\tif (intDelta > 0) {\n\t\t\t\t\t\t\tzoomRatio = -1 * fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (intDelta < 0) {\n\t\t\t\t\t\t\tzoomRatio = fbobj.scrollspeed;\n\t\t\t\t\t\t\tsetZoom();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar setZoom = function() {\n\n\t\t\t\t\t\tvar xMin = chart.xAxis[0].getExtremes().dataMin;\n\t\t\t\t\t\tvar xMax = chart.xAxis[0].getExtremes().dataMax;\n\t\t\t\t\t\tvar absMin = minDate;\n\t\t\t\t\t\tvar absMax = new Date ().getTime();\n\t\t\t\t\t   \n\t\t\t\t\t\tchart.xAxis[0].setExtremes(Math.max (absMin ,xMin - zoomRatio * (xMax-xMin)), Math.min (absMax, xMax + zoomRatio * (xMax-xMin)), true, true, { trigger: 'zoom' });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.storeTimestampSelected && chart.series && chart.series [0] && chart.series [0].points.length>0) {\n\t\t\t\t\t\tvis.setValue(data.storeTimestampSelected,chart.series [0].points[chart.series [0].points.length-1].x);\n\t\t\t\t\t\tchart.xAxis[0].addPlotLine({value: chart.series [0].points[chart.series [0].points.length-1].x,color: 'red',width: 2,id: 'selected'});\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (fbobj.updateIntervalHandler[widgetID]) window.clearInterval(fbobj.updateIntervalHandler[widgetID]);\n\t\t\t\t\tfbobj.updateIntervalHandler[widgetID]=window.setInterval(function () {\n\t\t\t\t\t   updateSeriesData ();\n\t\t\t\t\t}, 30000);\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tfunction stepForward () {\n\t\t\t\t\t\tvar selected = findSelected ();\n\t\t\t\t\t\tif (selected+1<chart.series[0].points.length) {\n\t\t\t\t\t\t\tselected++\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselected=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchart.xAxis[0].removePlotLine('selected');\n\t\t\t\t\t\tvis.setValue(data.storeTimestampSelected,chart.series[0].points[selected].x);\n\t\t\t\t\t\tchart.xAxis[0].addPlotLine({value: chart.series[0].points[selected].x,color: 'red',width: 2,id: 'selected'});\n\t\t\t\t\t\tif (vis.states [data.playid + '.val']==true) window.setTimeout (function () {\n\t\t\t\t\t\t\tstepForward ();\n\t\t\t\t\t\t},1000);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction stepBackward () {\n\t\t\t\t\t\tvar selected = findSelected ();\n\t\t\t\t\t\tif (selected>0) {\n\t\t\t\t\t\t\tselected--\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselected=chart.series[0].points.length-1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchart.xAxis[0].removePlotLine('selected');\n\t\t\t\t\t\tvis.setValue(data.storeTimestampSelected,chart.series[0].points[selected].x);\n\t\t\t\t\t\tchart.xAxis[0].addPlotLine({value: chart.series[0].points[selected].x,color: 'red',width: 2,id: 'selected'});\n\t\t\t\t\t\tif (vis.states [data.playid + '.val']==true) window.setTimeout (function () {\n\t\t\t\t\t\t\tstepForward ();\n\t\t\t\t\t\t},1000);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tfunction onStepForward (e, newVal, oldVal){\n\t\t\t\t\t\tif (newVal==true){\n\t\t\t\t\t\t\tvis.setValue (data.stepforwardid,false);\n\t\t\t\t\t\t\tstepForward ();\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction onStepBackward (e, newVal, oldVal){\n\t\t\t\t\t\tif (newVal==true){\n\t\t\t\t\t\t\tvis.setValue (data.stepbackid,false);\n\t\t\t\t\t\t\tstepBackward ();\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction onPlay (e, newVal, oldVal){\n\t\t\t\t\t\tif (newVal==true){\n\t\t\t\t\t\t\t\tstepForward ();\n\t\t\t\t\t\t\t\t//vis.setValue (data.playid,false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tfunction findSelected (){\n\t\t\t\t\t\tvar value,i;\n\t\t\t\t\t\tif (chart.xAxis[0].plotLinesAndBands.length>0){\n\t\t\t\t\t\t\tfor (i=0;i<chart.xAxis[0].plotLinesAndBands.length;i++){\n\t\t\t\t\t\t\t\tif (chart.xAxis[0].plotLinesAndBands[i].id=='selected'){\n\t\t\t\t\t\t\t\t\tvalue=chart.xAxis[0].plotLinesAndBands[i].options.value;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!value) return 0;\n\t\t\t\t\t\t\tfor (i=0;i<chart.series[0].points.length;i++){\n\t\t\t\t\t\t\t\tif (chart.series[0].points[i].x==value){\n\t\t\t\t\t\t\t\t\treturn i;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0; \n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (data.playid && data.storeTimestampSelected) {\n\t\t\t\t\t\tconsole.log ('register on changes for ' + data.playid);\n\t\t\t\t\t\tvis.states.bind(data.playid + '.val', onPlay);\n\t\t\t\t\t\t$div.data('bound', [data.playid + '.val']);\n\t\t\t\t\t\t$div.data('bindHandler', onPlay);\n\t\t\t\t\t}\t\t\t\n\n\t\t\t\t\tif (data.stepbackid && data.storeTimestampSelected) {\n\t\t\t\t\t\tconsole.log ('register on changes for ' + data.stepbackid);\n\t\t\t\t\t\tvis.states.bind(data.stepbackid + '.val', onStepBackward);\n\t\t\t\t\t\t$div.data('bound', [data.stepbackid + '.val']);\n\t\t\t\t\t\t$div.data('bindHandler', onStepBackward);\n\t\t\t\t\t}\t\t\t\n\n\t\t\t\t\tif (data.stepbackid && data.storeTimestampSelected) {\n\t\t\t\t\t\tconsole.log ('register on changes for ' + data.stepforwardid);\n\t\t\t\t\t\tvis.states.bind(data.stepforwardid + '.val', onStepForward);\n\t\t\t\t\t\t$div.data('bound', [data.stepforwardid + '.val']);\n\t\t\t\t\t\t$div.data('bindHandler', onStepForward);\n\t\t\t\t\t}\t\n\n\t\t\t\t\tif (vis.states [data.playid + '.val']==true) window.setTimeout (function () {\n\t\t\t\t\t\tstepForward ();\n\t\t\t\t\t},1000);\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t\n\t\t\t},10);\t\n\t\t\t\n\t\t\t\n\t\t\tfunction onChangeZoom(e, newVal, oldVal) {\n\t\t\t\tconsole.log ('Change zoom');\t\t\t\n\t\t\t\tif (!chart || newVal==oldVal) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (data.zoomoid && vis.states[data.zoomoid + '.val']) {\n\t\t\t\t\tvar currentExtremes=chart.xAxis[0].getExtremes();\t\t\t\t\t\n\t\t\t\t\tvar startDate=new Date ((new Date (currentExtremes.dataMax)).getTime() - (newVal*1000));\n\t\t\t\t\tchart.xAxis[0].setExtremes(startDate.getTime(), currentExtremes.dataMax, true, true, { trigger: 'zoom' });\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tif (data.zoomoid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.zoomoid);\n\t\t\t\tvis.states.bind(data.zoomoid + '.val', onChangeZoom);\n\t\t\t\t$div.data('bound', [data.zoomoid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeZoom);\n\t\t\t}\t\n\t\t\t\n\t\t},\n\t\t\n\t\tcreatePhotovoltaikModuleWidget: function (widgetID, view, data, style) {\n\t\t\tvar fbobj=this;\n\t\t\tvar $div = $('#' + widgetID);\n\t\t\t// if nothing found => wait\n\t\t\tif (!$div.length) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\tfbobj.createPhotovoltaikModuleWidget(widgetID, view, data, style);\n\t\t\t\t}, 100);\n\t\t\t};\n\n\n\t\t\tfunction getValue (id,instance,multiplicator,ts,callback){\n\t\t\t   var option = {};\n\t\t\n\t\t\t\toption.start=ts-1;\n\t\t\t\toption.end=ts+10000;\n\t\t\t\toption.instance  = instance;\n\t\t\t\toption.aggregate='none';\n\t\t\t\toption.count=1;\n\t\t\t\toption.timeout=1000;\n\t\t\t\tvis.getHistory(id, option, function (err, res) {\n\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\tconsole.error('Error Object: ' + JSON.stringify(err));\n\t\t\t\t\t\tcallback ();\n\t\t\t\t\t}\n\t\t\t\t\tif (!err && res) {\n\t\t\t\t\t\tif (res.length>0) {\n\t\t\t\t\t\t\tcallback ((res[0].val || 0) * multiplicator);\n\t\t\t\t\t\t} \t\n\t\t\t\t\t\t// free memory\n\t\t\t\t\t\tres = null;\n\t\t\t\t\t}\n\t\t\t\t});\t\n\t\t\t};\n\n\t\t\tfunction getColor (energyValue){\n\t\t\t\tvar vgValue=energyValue/(data.modulePower || 355);\n\t\t\t\tif (vgValue > 0.9)\n\t\t\t\t\treturn '#F4FD02'\n\t\t\t\telse if (vgValue > 0.8)\n\t\t\t\t\treturn '#12FD02'\n\t\t\t\telse if (vgValue > 0.6)\n\t\t\t\t\treturn '#02FDAD'\n\t\t\t\telse if (vgValue > 0.4)\n\t\t\t\t\treturn '#02D4FD'\n\t\t\t\telse if (vgValue > 0.2)\n\t\t\t\t\treturn '#029BFD'\n\t\t\t\telse if (vgValue > 0.1)\n\t\t\t\t\treturn '#0208FD'\n\t\t\t\telse \n\t\t\t\t\treturn '#0238FD';\n\t\t\t\t\t\n\t\t\t}\n\n\n\n\n\n\n\t\t\tvar svg=$(\"#photovoltaikmodule\"+widgetID).find(\"svg:first\");\n\n\t\t\t$(\"#label\", svg).text (data.serieslabel);\n\t\t\t\n\t\t\tif (data.serieshistoryoid && data.instance && data.multiplicator && data.timestampid && data.timestampid && vis.states[data.timestampid + '.val']) {\n\t\t\t\tgetValue(data.serieshistoryoid,data.instance,parseFloat (data.multiplicator || 1),vis.states[data.timestampid + '.val'],function (energyValue) {\n\t\t\t\t\tif (energyValue) {\n\t\t\t\t\t\t$(\"#power\", svg).text (energyValue.toLocaleString(undefined,{ minimumFractionDigits: 2 }));\n\t\t\t\t\t\t$(\"#modulecolor\", svg).attr(\"fill\",getColor(energyValue));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#power\", svg).text ('--');\n\t\t\t\t\t\t$(\"#modulecolor\", svg).attr(\"fill\",\"#007fff\");\n\t\t\t\t\t};\t\t\t\t\t\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$(\"#power\", svg).text ('--');\n\t\t\t\t$(\"#modulecolor\", svg).attr(\"fill\",\"#007fff\");\n\t\t\t\t\n\t\t\t};\n\t\t\n\n\t\t\t\n\t\t\t// subscribe on updates of value\n\t\t\t\n\t\t\t\n\t\t\tfunction onChangeValue (e, newVal, oldVal) {\t\t\n\t\t\t\tif (data.serieshistoryoid && data.instance && data.multiplicator && data.timestampid && data.timestampid) {\n\t\t\t\t\tgetValue(data.serieshistoryoid,data.instance,parseFloat (data.multiplicator || 1),newVal,function (energyValue) {\n\t\t\t\t\t\tif (energyValue) {\n\t\t\t\t\t\t\t$(\"#power\", svg).text (energyValue.toLocaleString(undefined,{ minimumFractionDigits: 2 }));\n\t\t\t\t\t\t\t$(\"#modulecolor\", svg).attr(\"fill\",getColor(energyValue));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(\"#power\", svg).text ('--');\n\t\t\t\t\t\t\t$(\"#modulecolor\", svg).attr(\"fill\",\"#007fff\");\n\t\t\t\t\t\t};\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#power\", svg).text ('--');\n\t\t\t\t\t$(\"#modulecolor\", svg).attr(\"fill\",\"#007fff\");\n\t\t\t\t};\n\t\t\t}\n\t\t\t\t\t\n\n\t\t\tif (data.timestampid) {\n\t\t\t\tconsole.log ('register on changes for ' + data.timestampid);\n\t\t\t\tvis.states.bind(data.timestampid + '.val', onChangeValue);\n\t\t\t\t$div.data('bound', [data.timestampid + '.val']);\n\t\t\t\t$div.data('bindHandler', onChangeValue);\n\t\t\t}\t\t\t\n\t\t}\n\n\t};\n\t\n\n\tvis.binds.photovoltaikcharts.showVersion();\t\t"]}